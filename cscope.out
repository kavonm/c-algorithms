cscope 15 /cygdrive/e/Dev/git/c-algorithms -q 0000000790 0000177712
	@config.h

5 
	#HAVE_DLFCN_H
 1

	)

8 
	#HAVE_INTTYPES_H
 1

	)

11 
	#HAVE_MEMORY_H
 1

	)

14 
	#HAVE_STDINT_H
 1

	)

17 
	#HAVE_STDLIB_H
 1

	)

20 
	#HAVE_STRINGS_H
 1

	)

23 
	#HAVE_STRING_H
 1

	)

26 
	#HAVE_SYS_STAT_H
 1

	)

29 
	#HAVE_SYS_TYPES_H
 1

	)

32 
	#HAVE_UNISTD_H
 1

	)

36 
	#LT_OBJDIR
 ".libs/"

	)

39 
	#PACKAGE_BUGREPORT
 "‰aggÀ@u£rs.sour˚f‹ge.√t"

	)

42 
	#PACKAGE_NAME
 "C Alg‹ôhms"

	)

45 
	#PACKAGE_STRING
 "C Alg‹ôhm†1.2.0"

	)

48 
	#PACKAGE_TARNAME
 "c-Æg‹ôhms"

	)

51 
	#PACKAGE_URL
 ""

	)

54 
	#PACKAGE_VERSION
 "1.2.0"

	)

57 
	#STDC_HEADERS
 1

	)

	@doc/intro.h

	@src/arraylist.c

21 
	~<°dlib.h
>

22 
	~<°rög.h
>

24 
	~"¨øyli°.h
"

28 #ifde‡
ALLOC_TESTING


29 
	~"Æloc-ã°ög.h
"

34 
AºayLi°
 *
	$¨øyli°_√w
(
Àngth
)

36 
AºayLi°
 *
√w_¨øyli°
;

40 i‡(
Àngth
 <= 0) {

41 
Àngth
 = 16;

47 
√w_¨øyli°
 = (
AºayLi°
 *Ë
	`mÆloc
((ArrayList));

49 i‡(
√w_¨øyli°
 =
NULL
) {

50  
NULL
;

53 
√w_¨øyli°
->
_Ælo˚d
 = 
Àngth
;

54 
√w_¨øyli°
->
Àngth
 = 0;

58 
√w_¨øyli°
->
d©a
 = 
	`mÆloc
(
Àngth
 * (
AºayLi°VÆue
));

60 i‡(
√w_¨øyli°
->
d©a
 =
NULL
) {

61 
	`‰ì
(
√w_¨øyli°
);

62  
NULL
;

65  
√w_¨øyli°
;

66 
	}
}

68 
	$¨øyli°_‰ì
(
AºayLi°
 *
¨øyli°
)

72 i‡(
¨øyli°
 !
NULL
) {

73 
	`‰ì
(
¨øyli°
->
d©a
);

74 
	`‰ì
(
¨øyli°
);

76 
	}
}

78 
	$¨øyli°_íœrge
(
AºayLi°
 *
¨øyli°
)

80 
AºayLi°VÆue
 *
d©a
;

81 
√wsize
;

85 
√wsize
 = 
¨øyli°
->
_Ælo˚d
 * 2;

89 
d©a
 = 
	`ªÆloc
(
¨øyli°
->d©a, (
AºayLi°VÆue
Ë* 
√wsize
);

91 i‡(
d©a
 =
NULL
) {

94 
¨øyli°
->
d©a
 = data;

95 
¨øyli°
->
_Ælo˚d
 = 
√wsize
;

99 
	}
}

101 
	$¨øyli°_ö£π
(
AºayLi°
 *
¨øyli°
, 
ödex
,

102 
AºayLi°VÆue
 
d©a
)

106 i‡(
ödex
 < 0 || index > 
¨øyli°
->
Àngth
) {

112 i‡(
¨øyli°
->
Àngth
 + 1 >áºayli°->
_Ælo˚d
) {

113 i‡(!
	`¨øyli°_íœrge
(
¨øyli°
)) {

121 
	`memmove
(&
¨øyli°
->
d©a
[
ödex
 + 1],

122 &
¨øyli°
->
d©a
[
ödex
],

123 (
¨øyli°
->
Àngth
 - 
ödex
Ë* (
AºayLi°VÆue
));

127 
¨øyli°
->
d©a
[
ödex
] = data;

128 ++
¨øyli°
->
Àngth
;

131 
	}
}

133 
	$¨øyli°_≠≥nd
(
AºayLi°
 *
¨øyli°
, 
AºayLi°VÆue
 
d©a
)

135  
	`¨øyli°_ö£π
(
¨øyli°
,áºayli°->
Àngth
, 
d©a
);

136 
	}
}

138 
	$¨øyli°_¥ïíd
(
AºayLi°
 *
¨øyli°
, 
AºayLi°VÆue
 
d©a
)

140  
	`¨øyli°_ö£π
(
¨øyli°
, 0, 
d©a
);

141 
	}
}

143 
	$¨øyli°_ªmove_ønge
(
AºayLi°
 *
¨øyli°
, 
ödex
,

144 
Àngth
)

148 i‡(
ödex
 < 0 || 
Àngth
 < 0 || index +Üígth > 
¨øyli°
->length) {

154 
	`memmove
(&
¨øyli°
->
d©a
[
ödex
],

155 &
¨øyli°
->
d©a
[
ödex
 + 
Àngth
],

156 (
¨øyli°
->
Àngth
 - (
ödex
 +Üígth)Ë* (
AºayLi°VÆue
));

160 
¨øyli°
->
Àngth
 -=Üength;

161 
	}
}

163 
	$¨øyli°_ªmove
(
AºayLi°
 *
¨øyli°
, 
ödex
)

165 
	`¨øyli°_ªmove_ønge
(
¨øyli°
, 
ödex
, 1);

166 
	}
}

168 
	$¨øyli°_ödex_of
(
AºayLi°
 *
¨øyli°
,

169 
AºayLi°EquÆFunc
 
ˇŒback
,

170 
AºayLi°VÆue
 
d©a
)

172 
i
;

174 
i
=0; i<
¨øyli°
->
Àngth
; ++i) {

175 i‡(
	`ˇŒback
(
¨øyli°
->
d©a
[
i
], data) != 0)

176  (Ë
i
;

180 
	}
}

182 
	$¨øyli°_˛ór
(
AºayLi°
 *
¨øyli°
)

186 
¨øyli°
->
Àngth
 = 0;

187 
	}
}

189 
	$¨øyli°_s‹t_öã∫Æ
(
AºayLi°VÆue
 *
li°_d©a
,

190 
li°_Àngth
,

191 
AºayLi°Com∑ªFunc
 
com∑ª_func
)

193 
AºayLi°VÆue
 
pivŸ
;

194 
AºayLi°VÆue
 
tmp
;

195 
i
;

196 
li°1_Àngth
;

197 
li°2_Àngth
;

201 i‡(
li°_Àngth
 <= 1) {

207 
pivŸ
 = 
li°_d©a
[
li°_Àngth
-1];

220 
li°1_Àngth
 = 0;

222 
i
=0; i<
li°_Àngth
-1; ++i) {

224 i‡(
	`com∑ª_func
(
li°_d©a
[
i
], 
pivŸ
) < 0) {

230 
tmp
 = 
li°_d©a
[
i
];

231 
li°_d©a
[
i
] =Üi°_d©a[
li°1_Àngth
];

232 
li°_d©a
[
li°1_Àngth
] = 
tmp
;

234 ++
li°1_Àngth
;

244 
li°2_Àngth
 = 
li°_Àngth
 - 
li°1_Àngth
 - 1;

254 
li°_d©a
[
li°_Àngth
-1] =Üi°_d©a[
li°1_Àngth
];

255 
li°_d©a
[
li°1_Àngth
] = 
pivŸ
;

259 
	`¨øyli°_s‹t_öã∫Æ
(
li°_d©a
, 
li°1_Àngth
, 
com∑ª_func
);

261 
	`¨øyli°_s‹t_öã∫Æ
(&
li°_d©a
[
li°1_Àngth
 + 1], 
li°2_Àngth
,

262 
com∑ª_func
);

263 
	}
}

265 
	$¨øyli°_s‹t
(
AºayLi°
 *
¨øyli°
, 
AºayLi°Com∑ªFunc
 
com∑ª_func
)

269 
	`¨øyli°_s‹t_öã∫Æ
(
¨øyli°
->
d©a
,áºayli°->
Àngth
, 
com∑ª_func
);

270 
	}
}

	@src/arraylist.h

39 #i‚de‡
ALGORITHM_ARRAYLIST_H


40 
	#ALGORITHM_ARRAYLIST_H


	)

42 #ifde‡
__˝lu•lus


50 *
	tAºayLi°VÆue
;

59 
_AºayLi°
 
	tAºayLi°
;

65 
	s_AºayLi°
 {

69 
AºayLi°VÆue
 *
d©a
;

73 
Àngth
;

77 
_Ælo˚d
;

86 (*
AºayLi°EquÆFunc
)(
	tAºayLi°VÆue
 
	tvÆue1
, AºayLi°VÆuê
	tvÆue2
);

100 (*
AºayLi°Com∑ªFunc
)(
	tAºayLi°VÆue
 
	tvÆue1
,

101 
	tAºayLi°VÆue
 
	tvÆue2
);

115 
AºayLi°
 *
¨øyli°_√w
(
Àngth
);

123 
¨øyli°_‰ì
(
AºayLi°
 *
¨øyli°
);

135 
¨øyli°_≠≥nd
(
AºayLi°
 *
¨øyli°
, 
AºayLi°VÆue
 
d©a
);

147 
¨øyli°_¥ïíd
(
AºayLi°
 *
¨øyli°
, 
AºayLi°VÆue
 
d©a
);

156 
¨øyli°_ªmove
(
AºayLi°
 *
¨øyli°
, 
ödex
);

166 
¨øyli°_ªmove_ønge
(
AºayLi°
 *
¨øyli°
, 
ödex
,

167 
Àngth
);

182 
¨øyli°_ö£π
(
AºayLi°
 *
¨øyli°
, 
ödex
,

183 
AºayLi°VÆue
 
d©a
);

196 
¨øyli°_ödex_of
(
AºayLi°
 *
¨øyli°
,

197 
AºayLi°EquÆFunc
 
ˇŒback
,

198 
AºayLi°VÆue
 
d©a
);

206 
¨øyli°_˛ór
(
AºayLi°
 *
¨øyli°
);

215 
¨øyli°_s‹t
(
AºayLi°
 *
¨øyli°
, 
AºayLi°Com∑ªFunc
 
com∑ª_func
);

217 #ifde‡
__˝lu•lus


	@src/avl-tree.c

21 
	~<°dlib.h
>

23 
	~"avl-åì.h
"

27 #ifde‡
ALLOC_TESTING


28 
	~"Æloc-ã°ög.h
"

33 
	s_AVLTªeNode
 {

34 
AVLTªeNode
 *
	mchûdªn
[2];

35 
AVLTªeNode
 *
	m∑ª¡
;

36 
AVLTªeKey
 
	mkey
;

37 
AVLTªeVÆue
 
	mvÆue
;

38 
	mheight
;

41 
	s_AVLTªe
 {

42 
AVLTªeNode
 *
	mroŸ_node
;

43 
AVLTªeCom∑ªFunc
 
	mcom∑ª_func
;

44 
	mnum_nodes
;

47 
AVLTªe
 *
	$avl_åì_√w
(
AVLTªeCom∑ªFunc
 
com∑ª_func
)

49 
AVLTªe
 *
√w_åì
;

51 
√w_åì
 = (
AVLTªe
 *Ë
	`mÆloc
((AVLTree));

53 i‡(
√w_åì
 =
NULL
) {

54  
NULL
;

57 
√w_åì
->
roŸ_node
 = 
NULL
;

58 
√w_åì
->
com∑ª_func
 = compare_func;

59 
√w_åì
->
num_nodes
 = 0;

61  
√w_åì
;

62 
	}
}

64 
	$avl_åì_‰ì_subåì
(
AVLTªe
 *
åì
, 
AVLTªeNode
 *
node
)

66 i‡(
node
 =
NULL
) {

70 
	`avl_åì_‰ì_subåì
(
åì
, 
node
->
chûdªn
[
AVL_TREE_NODE_LEFT
]);

71 
	`avl_åì_‰ì_subåì
(
åì
, 
node
->
chûdªn
[
AVL_TREE_NODE_RIGHT
]);

73 
	`‰ì
(
node
);

74 
	}
}

76 
	$avl_åì_‰ì
(
AVLTªe
 *
åì
)

80 
	`avl_åì_‰ì_subåì
(
åì
,Åªe->
roŸ_node
);

84 
	`‰ì
(
åì
);

85 
	}
}

87 
	$avl_åì_subåì_height
(
AVLTªeNode
 *
node
)

89 i‡(
node
 =
NULL
) {

92  
node
->
height
;

94 
	}
}

100 
	$avl_åì_upd©e_height
(
AVLTªeNode
 *
node
)

102 
AVLTªeNode
 *
À·_subåì
;

103 
AVLTªeNode
 *
right_subåì
;

104 
À·_height
, 
right_height
;

106 
À·_subåì
 = 
node
->
chûdªn
[
AVL_TREE_NODE_LEFT
];

107 
right_subåì
 = 
node
->
chûdªn
[
AVL_TREE_NODE_RIGHT
];

108 
À·_height
 = 
	`avl_åì_subåì_height
(
À·_subåì
);

109 
right_height
 = 
	`avl_åì_subåì_height
(
right_subåì
);

111 i‡(
À·_height
 > 
right_height
) {

112 
node
->
height
 = 
À·_height
 + 1;

114 
node
->
height
 = 
right_height
 + 1;

116 
	}
}

120 
AVLTªeNodeSide
 
	$avl_åì_node_∑ª¡_side
(
AVLTªeNode
 *
node
)

122 i‡(
node
->
∑ª¡
->
chûdªn
[
AVL_TREE_NODE_LEFT
] ==Çode) {

123  
AVL_TREE_NODE_LEFT
;

125  
AVL_TREE_NODE_RIGHT
;

127 
	}
}

131 
	$avl_åì_node_ª∂a˚
(
AVLTªe
 *
åì
, 
AVLTªeNode
 *
node1
,

132 
AVLTªeNode
 *
node2
)

134 
side
;

138 i‡(
node2
 !
NULL
) {

139 
node2
->
∑ª¡
 = 
node1
->parent;

144 i‡(
node1
->
∑ª¡
 =
NULL
) {

145 
åì
->
roŸ_node
 = 
node2
;

147 
side
 = 
	`avl_åì_node_∑ª¡_side
(
node1
);

148 
node1
->
∑ª¡
->
chûdªn
[
side
] = 
node2
;

150 
	`avl_åì_upd©e_height
(
node1
->
∑ª¡
);

152 
	}
}

176 
AVLTªeNode
 *
	$avl_åì_rŸ©e
(
AVLTªe
 *
åì
, 
AVLTªeNode
 *
node
,

177 
AVLTªeNodeSide
 
dúe˘i⁄
)

179 
AVLTªeNode
 *
√w_roŸ
;

184 
√w_roŸ
 = 
node
->
chûdªn
[1-
dúe˘i⁄
];

188 
	`avl_åì_node_ª∂a˚
(
åì
, 
node
, 
√w_roŸ
);

192 
node
->
chûdªn
[1-
dúe˘i⁄
] = 
√w_roŸ
->children[direction];

193 
√w_roŸ
->
chûdªn
[
dúe˘i⁄
] = 
node
;

197 
node
->
∑ª¡
 = 
√w_roŸ
;

199 i‡(
node
->
chûdªn
[1-
dúe˘i⁄
] !
NULL
) {

200 
node
->
chûdªn
[1-
dúe˘i⁄
]->
∑ª¡
 =Çode;

205 
	`avl_åì_upd©e_height
(
√w_roŸ
);

206 
	`avl_åì_upd©e_height
(
node
);

208  
√w_roŸ
;

209 
	}
}

217 
AVLTªeNode
 *
	$avl_åì_node_bÆ™˚
(
AVLTªe
 *
åì
, 
AVLTªeNode
 *
node
)

219 
AVLTªeNode
 *
À·_subåì
;

220 
AVLTªeNode
 *
right_subåì
;

221 
AVLTªeNode
 *
chûd
;

222 
diff
;

224 
À·_subåì
 = 
node
->
chûdªn
[
AVL_TREE_NODE_LEFT
];

225 
right_subåì
 = 
node
->
chûdªn
[
AVL_TREE_NODE_RIGHT
];

231 
diff
 = 
	`avl_åì_subåì_height
(
right_subåì
)

232 - 
	`avl_åì_subåì_height
(
À·_subåì
);

234 i‡(
diff
 >= 2) {

238 
chûd
 = 
right_subåì
;

240 i‡(
	`avl_åì_subåì_height
(
chûd
->
chûdªn
[
AVL_TREE_NODE_RIGHT
])

241 < 
	`avl_åì_subåì_height
(
chûd
->
chûdªn
[
AVL_TREE_NODE_LEFT
])) {

247 
	`avl_åì_rŸ©e
(
åì
, 
right_subåì
,

248 
AVL_TREE_NODE_RIGHT
);

254 
node
 = 
	`avl_åì_rŸ©e
(
åì
,Çode, 
AVL_TREE_NODE_LEFT
);

256 } i‡(
diff
 <= -2) {

260 
chûd
 = 
node
->
chûdªn
[
AVL_TREE_NODE_LEFT
];

262 i‡(
	`avl_åì_subåì_height
(
chûd
->
chûdªn
[
AVL_TREE_NODE_LEFT
])

263 < 
	`avl_åì_subåì_height
(
chûd
->
chûdªn
[
AVL_TREE_NODE_RIGHT
])) {

269 
	`avl_åì_rŸ©e
(
åì
, 
À·_subåì
,

270 
AVL_TREE_NODE_LEFT
);

276 
node
 = 
	`avl_åì_rŸ©e
(
åì
,Çode, 
AVL_TREE_NODE_RIGHT
);

281 
	`avl_åì_upd©e_height
(
node
);

283  
node
;

284 
	}
}

288 
	$avl_åì_bÆ™˚_to_roŸ
(
AVLTªe
 *
åì
, 
AVLTªeNode
 *
node
)

290 
AVLTªeNode
 *
rovî
;

292 
rovî
 = 
node
;

294 
rovî
 !
NULL
) {

298 
rovî
 = 
	`avl_åì_node_bÆ™˚
(
åì
,Ñover);

302 
rovî
 =Ñovî->
∑ª¡
;

304 
	}
}

306 
AVLTªeNode
 *
	$avl_åì_ö£π
(
AVLTªe
 *
åì
, 
AVLTªeKey
 
key
, 
AVLTªeVÆue
 
vÆue
)

308 
AVLTªeNode
 **
rovî
;

309 
AVLTªeNode
 *
√w_node
;

310 
AVLTªeNode
 *
¥evious_node
;

314 
rovî
 = &
åì
->
roŸ_node
;

315 
¥evious_node
 = 
NULL
;

317 *
rovî
 !
NULL
) {

318 
¥evious_node
 = *
rovî
;

319 i‡(
åì
->
	`com∑ª_func
(
key
, (*
rovî
)->key) < 0) {

320 
rovî
 = &((*rovî)->
chûdªn
[
AVL_TREE_NODE_LEFT
]);

322 
rovî
 = &((*rovî)->
chûdªn
[
AVL_TREE_NODE_RIGHT
]);

328 
√w_node
 = (
AVLTªeNode
 *Ë
	`mÆloc
((AVLTreeNode));

330 i‡(
√w_node
 =
NULL
) {

331  
NULL
;

334 
√w_node
->
chûdªn
[
AVL_TREE_NODE_LEFT
] = 
NULL
;

335 
√w_node
->
chûdªn
[
AVL_TREE_NODE_RIGHT
] = 
NULL
;

336 
√w_node
->
∑ª¡
 = 
¥evious_node
;

337 
√w_node
->
key
 = key;

338 
√w_node
->
vÆue
 = value;

339 
√w_node
->
height
 = 1;

343 *
rovî
 = 
√w_node
;

347 
	`avl_åì_bÆ™˚_to_roŸ
(
åì
, 
¥evious_node
);

351 ++
åì
->
num_nodes
;

353  
√w_node
;

354 
	}
}

360 
AVLTªeNode
 *
	$avl_åì_node_gë_ª∂a˚mít
(
AVLTªe
 *
åì
,

361 
AVLTªeNode
 *
node
)

363 
AVLTªeNode
 *
À·_subåì
;

364 
AVLTªeNode
 *
right_subåì
;

365 
AVLTªeNode
 *
ªsu…
;

366 
AVLTªeNode
 *
chûd
;

367 
À·_height
, 
right_height
;

368 
side
;

370 
À·_subåì
 = 
node
->
chûdªn
[
AVL_TREE_NODE_LEFT
];

371 
right_subåì
 = 
node
->
chûdªn
[
AVL_TREE_NODE_RIGHT
];

375 i‡(
À·_subåì
 =
NULL
 && 
right_subåì
 == NULL) {

376  
NULL
;

382 
À·_height
 = 
	`avl_åì_subåì_height
(
À·_subåì
);

383 
right_height
 = 
	`avl_åì_subåì_height
(
right_subåì
);

385 i‡(
À·_height
 < 
right_height
) {

386 
side
 = 
AVL_TREE_NODE_RIGHT
;

388 
side
 = 
AVL_TREE_NODE_LEFT
;

393 
ªsu…
 = 
node
->
chûdªn
[
side
];

395 
ªsu…
->
chûdªn
[1-
side
] !
NULL
) {

396 
ªsu…
 =Ñesu…->
chûdªn
[1-
side
];

402 
chûd
 = 
ªsu…
->
chûdªn
[
side
];

403 
	`avl_åì_node_ª∂a˚
(
åì
, 
ªsu…
, 
chûd
);

407 
	`avl_åì_upd©e_height
(
ªsu…
->
∑ª¡
);

409  
ªsu…
;

410 
	}
}

414 
	$avl_åì_ªmove_node
(
AVLTªe
 *
åì
, 
AVLTªeNode
 *
node
)

416 
AVLTªeNode
 *
sw≠_node
;

417 
AVLTªeNode
 *
bÆ™˚_°¨çoöt
;

418 
i
;

424 
sw≠_node
 = 
	`avl_åì_node_gë_ª∂a˚mít
(
åì
, 
node
);

426 i‡(
sw≠_node
 =
NULL
) {

433 
	`avl_åì_node_ª∂a˚
(
åì
, 
node
, 
NULL
);

437 
bÆ™˚_°¨çoöt
 = 
node
->
∑ª¡
;

445 i‡(
sw≠_node
->
∑ª¡
 =
node
) {

446 
bÆ™˚_°¨çoöt
 = 
sw≠_node
;

448 
bÆ™˚_°¨çoöt
 = 
sw≠_node
->
∑ª¡
;

453 
i
=0; i<2; ++i) {

454 
sw≠_node
->
chûdªn
[
i
] = 
node
->children[i];

456 i‡(
sw≠_node
->
chûdªn
[
i
] !
NULL
) {

457 
sw≠_node
->
chûdªn
[
i
]->
∑ª¡
 = swap_node;

461 
sw≠_node
->
height
 = 
node
->height;

465 
	`avl_åì_node_ª∂a˚
(
åì
, 
node
, 
sw≠_node
);

470 
	`‰ì
(
node
);

474 --
åì
->
num_nodes
;

478 
	`avl_åì_bÆ™˚_to_roŸ
(
åì
, 
bÆ™˚_°¨çoöt
);

479 
	}
}

483 
	$avl_åì_ªmove
(
AVLTªe
 *
åì
, 
AVLTªeKey
 
key
)

485 
AVLTªeNode
 *
node
;

489 
node
 = 
	`avl_åì_lookup_node
(
åì
, 
key
);

491 i‡(
node
 =
NULL
) {

499 
	`avl_åì_ªmove_node
(
åì
, 
node
);

502 
	}
}

504 
AVLTªeNode
 *
	$avl_åì_lookup_node
(
AVLTªe
 *
åì
, 
AVLTªeKey
 
key
)

506 
AVLTªeNode
 *
node
;

507 
diff
;

512 
node
 = 
åì
->
roŸ_node
;

514 
node
 !
NULL
) {

516 
diff
 = 
åì
->
	`com∑ª_func
(
key
, 
node
->key);

518 i‡(
diff
 == 0) {

522  
node
;

524 } i‡(
diff
 < 0) {

525 
node
 =Çode->
chûdªn
[
AVL_TREE_NODE_LEFT
];

527 
node
 =Çode->
chûdªn
[
AVL_TREE_NODE_RIGHT
];

533  
NULL
;

534 
	}
}

536 
AVLTªeVÆue
 
	$avl_åì_lookup
(
AVLTªe
 *
åì
, 
AVLTªeKey
 
key
)

538 
AVLTªeNode
 *
node
;

542 
node
 = 
	`avl_åì_lookup_node
(
åì
, 
key
);

544 i‡(
node
 =
NULL
) {

545  
AVL_TREE_NULL
;

547  
node
->
vÆue
;

549 
	}
}

551 
AVLTªeNode
 *
	$avl_åì_roŸ_node
(
AVLTªe
 *
åì
)

553  
åì
->
roŸ_node
;

554 
	}
}

556 
AVLTªeKey
 
	$avl_åì_node_key
(
AVLTªeNode
 *
node
)

558  
node
->
key
;

559 
	}
}

561 
AVLTªeVÆue
 
	$avl_åì_node_vÆue
(
AVLTªeNode
 *
node
)

563  
node
->
vÆue
;

564 
	}
}

566 
AVLTªeNode
 *
	$avl_åì_node_chûd
(
AVLTªeNode
 *
node
, 
AVLTªeNodeSide
 
side
)

568 i‡(
side
 =
AVL_TREE_NODE_LEFT
 || sidê=
AVL_TREE_NODE_RIGHT
) {

569  
node
->
chûdªn
[
side
];

571  
NULL
;

573 
	}
}

575 
AVLTªeNode
 *
	$avl_åì_node_∑ª¡
(
AVLTªeNode
 *
node
)

577  
node
->
∑ª¡
;

578 
	}
}

580 
	$avl_åì_num_íåõs
(
AVLTªe
 *
åì
)

582  
åì
->
num_nodes
;

583 
	}
}

585 
	$avl_åì_to_¨øy_add_subåì
(
AVLTªeNode
 *
subåì
,

586 
AVLTªeVÆue
 *
¨øy
,

587 *
ödex
)

589 i‡(
subåì
 =
NULL
) {

595 
	`avl_åì_to_¨øy_add_subåì
(
subåì
->
chûdªn
[
AVL_TREE_NODE_LEFT
],

596 
¨øy
, 
ödex
);

600 
¨øy
[*
ödex
] = 
subåì
->
key
;

601 ++*
ödex
;

605 
	`avl_åì_to_¨øy_add_subåì
(
subåì
->
chûdªn
[
AVL_TREE_NODE_RIGHT
],

606 
¨øy
, 
ödex
);

607 
	}
}

609 
AVLTªeVÆue
 *
	$avl_åì_to_¨øy
(
AVLTªe
 *
åì
)

611 
AVLTªeVÆue
 *
¨øy
;

612 
ödex
;

616 
¨øy
 = 
	`mÆloc
((
AVLTªeVÆue
Ë* 
åì
->
num_nodes
);

618 i‡(
¨øy
 =
NULL
) {

619  
NULL
;

622 
ödex
 = 0;

626 
	`avl_åì_to_¨øy_add_subåì
(
åì
->
roŸ_node
, 
¨øy
, &
ödex
);

628  
¨øy
;

629 
	}
}

	@src/avl-tree.h

54 #i‚de‡
ALGORITHM_AVLTREE_H


55 
	#ALGORITHM_AVLTREE_H


	)

57 #ifde‡
__˝lu•lus


67 
_AVLTªe
 
	tAVLTªe
;

73 *
	tAVLTªeKey
;

79 *
	tAVLTªeVÆue
;

85 
	#AVL_TREE_NULL
 ((*Ë0)

	)

97 
_AVLTªeNode
 
	tAVLTªeNode
;

104 
AVL_TREE_NODE_LEFT
 = 0,

105 
AVL_TREE_NODE_RIGHT
 = 1

106 } 
	tAVLTªeNodeSide
;

119 (*
AVLTªeCom∑ªFunc
)(
	tAVLTªeVÆue
 
	tvÆue1
, AVLTªeVÆuê
	tvÆue2
);

129 
AVLTªe
 *
avl_åì_√w
(
AVLTªeCom∑ªFunc
 
com∑ª_func
);

137 
avl_åì_‰ì
(
AVLTªe
 *
åì
);

150 
AVLTªeNode
 *
avl_åì_ö£π
(
AVLTªe
 *
åì
, 
AVLTªeKey
 
key
, 
AVLTªeVÆue
 
vÆue
);

159 
avl_åì_ªmove_node
(
AVLTªe
 *
åì
, 
AVLTªeNode
 *
node
);

172 
avl_åì_ªmove
(
AVLTªe
 *
åì
, 
AVLTªeKey
 
key
);

184 
AVLTªeNode
 *
avl_åì_lookup_node
(
AVLTªe
 *
åì
, 
AVLTªeKey
 
key
);

199 
AVLTªeVÆue
 
avl_åì_lookup
(
AVLTªe
 *
åì
, 
AVLTªeKey
 
key
);

209 
AVLTªeNode
 *
avl_åì_roŸ_node
(
AVLTªe
 *
åì
);

218 
AVLTªeKey
 
avl_åì_node_key
(
AVLTªeNode
 *
node
);

227 
AVLTªeVÆue
 
avl_åì_node_vÆue
(
AVLTªeNode
 *
node
);

238 
AVLTªeNode
 *
avl_åì_node_chûd
(AVLTªeNodê*
node
, 
AVLTªeNodeSide
 
side
);

248 
AVLTªeNode
 *
avl_åì_node_∑ª¡
(AVLTªeNodê*
node
);

257 
avl_åì_subåì_height
(
AVLTªeNode
 *
node
);

270 
AVLTªeVÆue
 *
avl_åì_to_¨øy
(
AVLTªe
 *
åì
);

279 
avl_åì_num_íåõs
(
AVLTªe
 *
åì
);

281 #ifde‡
__˝lu•lus


	@src/binary-heap.c

21 
	~<°dlib.h
>

23 
	~"bö¨y-hóp.h
"

27 #ifde‡
ALLOC_TESTING


28 
	~"Æloc-ã°ög.h
"

31 
	s_Bö¨yHóp
 {

32 
Bö¨yHópTy≥
 
	mhóp_ty≥
;

33 
Bö¨yHópVÆue
 *
	mvÆues
;

34 
	mnum_vÆues
;

35 
	mÆlo˚d_size
;

36 
Bö¨yHópCom∑ªFunc
 
	mcom∑ª_func
;

39 
	$bö¨y_hóp_cmp
(
Bö¨yHóp
 *
hóp
, 
Bö¨yHópVÆue
 
d©a1
, Bö¨yHópVÆuê
d©a2
)

41 i‡(
hóp
->
hóp_ty≥
 =
BINARY_HEAP_TYPE_MIN
) {

42  
hóp
->
	`com∑ª_func
(
d©a1
, 
d©a2
);

44  -
hóp
->
	`com∑ª_func
(
d©a1
, 
d©a2
);

46 
	}
}

48 
Bö¨yHóp
 *
	$bö¨y_hóp_√w
(
Bö¨yHópTy≥
 
hóp_ty≥
,

49 
Bö¨yHópCom∑ªFunc
 
com∑ª_func
)

51 
Bö¨yHóp
 *
hóp
;

53 
hóp
 = 
	`mÆloc
((
Bö¨yHóp
));

55 i‡(
hóp
 =
NULL
) {

56  
NULL
;

59 
hóp
->
hóp_ty≥
 = heap_type;

60 
hóp
->
num_vÆues
 = 0;

61 
hóp
->
com∑ª_func
 = compare_func;

65 
hóp
->
Ælo˚d_size
 = 16;

66 
hóp
->
vÆues
 = 
	`mÆloc
((
Bö¨yHópVÆue
Ë* hóp->
Ælo˚d_size
);

68 i‡(
hóp
->
vÆues
 =
NULL
) {

69 
	`‰ì
(
hóp
);

70  
NULL
;

73  
hóp
;

74 
	}
}

76 
	$bö¨y_hóp_‰ì
(
Bö¨yHóp
 *
hóp
)

78 
	`‰ì
(
hóp
->
vÆues
);

79 
	`‰ì
(
hóp
);

80 
	}
}

82 
	$bö¨y_hóp_ö£π
(
Bö¨yHóp
 *
hóp
, 
Bö¨yHópVÆue
 
vÆue
)

84 
Bö¨yHópVÆue
 *
√w_vÆues
;

85 
ödex
;

86 
√w_size
;

87 
∑ª¡
;

91 i‡(
hóp
->
num_vÆues
 >hóp->
Ælo˚d_size
) {

95 
√w_size
 = 
hóp
->
Ælo˚d_size
 * 2;

96 
√w_vÆues
 = 
	`ªÆloc
(
hóp
->
vÆues
, (
Bö¨yHópVÆue
Ë* 
√w_size
);

98 i‡(
√w_vÆues
 =
NULL
) {

102 
hóp
->
Ælo˚d_size
 = 
√w_size
;

103 
hóp
->
vÆues
 = 
√w_vÆues
;

108 
ödex
 = 
hóp
->
num_vÆues
;

109 ++
hóp
->
num_vÆues
;

113 
ödex
 > 0) {

117 
∑ª¡
 = (
ödex
 - 1) / 2;

121 i‡(
	`bö¨y_hóp_cmp
(
hóp
, hóp->
vÆues
[
∑ª¡
], 
vÆue
) < 0) {

131 
hóp
->
vÆues
[
ödex
] = hóp->vÆues[
∑ª¡
];

135 
ödex
 = 
∑ª¡
;

141 
hóp
->
vÆues
[
ödex
] = 
vÆue
;

144 
	}
}

146 
Bö¨yHópVÆue
 
	$bö¨y_hóp_p›
(
Bö¨yHóp
 *
hóp
)

148 
Bö¨yHópVÆue
 
ªsu…
;

149 
Bö¨yHópVÆue
 
√w_vÆue
;

150 
ödex
;

151 
√xt_ödex
;

152 
chûd1
, 
chûd2
;

156 i‡(
hóp
->
num_vÆues
 == 0) {

157  
BINARY_HEAP_NULL
;

162 
ªsu…
 = 
hóp
->
vÆues
[0];

167 
√w_vÆue
 = 
hóp
->
vÆues
[hóp->
num_vÆues
 - 1];

168 --
hóp
->
num_vÆues
;

172 
ödex
 = 0;

178 
chûd1
 = 
ödex
 * 2 + 1;

179 
chûd2
 = 
ödex
 * 2 + 2;

181 i‡(
chûd1
 < 
hóp
->
num_vÆues


182 && 
	`bö¨y_hóp_cmp
(
hóp
,

183 
√w_vÆue
,

184 
hóp
->
vÆues
[
chûd1
]) > 0) {

189 i‡(
chûd2
 < 
hóp
->
num_vÆues


190 && 
	`bö¨y_hóp_cmp
(
hóp
,

191 
hóp
->
vÆues
[
chûd1
],

192 
hóp
->
vÆues
[
chûd2
]) > 0) {

193 
√xt_ödex
 = 
chûd2
;

195 
√xt_ödex
 = 
chûd1
;

198 } i‡(
chûd2
 < 
hóp
->
num_vÆues


199 && 
	`bö¨y_hóp_cmp
(
hóp
,

200 
√w_vÆue
,

201 
hóp
->
vÆues
[
chûd2
]) > 0) {

206 
√xt_ödex
 = 
chûd2
;

212 
hóp
->
vÆues
[
ödex
] = 
√w_vÆue
;

218 
hóp
->
vÆues
[
ödex
] = hóp->vÆues[
√xt_ödex
];

222 
ödex
 = 
√xt_ödex
;

225  
ªsu…
;

226 
	}
}

228 
	$bö¨y_hóp_num_íåõs
(
Bö¨yHóp
 *
hóp
)

230  
hóp
->
num_vÆues
;

231 
	}
}

	@src/binary-heap.h

38 #i‚de‡
ALGORITHM_BINARY_HEAP_H


39 
	#ALGORITHM_BINARY_HEAP_H


	)

41 #ifde‡
__˝lu•lus


56 
BINARY_HEAP_TYPE_MIN
,

60 
BINARY_HEAP_TYPE_MAX


61 } 
	tBö¨yHópTy≥
;

67 *
	tBö¨yHópVÆue
;

73 
	#BINARY_HEAP_NULL
 ((*Ë0)

	)

85 (*
Bö¨yHópCom∑ªFunc
)(
	tBö¨yHópVÆue
 
	tvÆue1
,

86 
	tBö¨yHópVÆue
 
	tvÆue2
);

92 
_Bö¨yHóp
 
	tBö¨yHóp
;

104 
Bö¨yHóp
 *
bö¨y_hóp_√w
(
Bö¨yHópTy≥
 
hóp_ty≥
,

105 
Bö¨yHópCom∑ªFunc
 
com∑ª_func
);

113 
bö¨y_hóp_‰ì
(
Bö¨yHóp
 *
hóp
);

125 
bö¨y_hóp_ö£π
(
Bö¨yHóp
 *
hóp
, 
Bö¨yHópVÆue
 
vÆue
);

135 
Bö¨yHópVÆue
 
bö¨y_hóp_p›
(
Bö¨yHóp
 *
hóp
);

144 
bö¨y_hóp_num_íåõs
(
Bö¨yHóp
 *
hóp
);

146 #ifde‡
__˝lu•lus


	@src/binomial-heap.c

21 
	~<°dlib.h
>

22 
	~<°rög.h
>

23 
	~<vÆues.h
>

25 
	~"böomül-hóp.h
"

29 #ifde‡
ALLOC_TESTING


30 
	~"Æloc-ã°ög.h
"

33 
_BöomülTªe
 
	tBöomülTªe
;

35 
	s_BöomülTªe


37 
BöomülHópVÆue
 
	mvÆue
;

38 
	m‹dî
;

39 
	mªfcou¡
;

40 
BöomülTªe
 **
	msubåìs
;

43 
	s_BöomülHóp


45 
BöomülHópTy≥
 
	mhóp_ty≥
;

46 
BöomülHópCom∑ªFunc
 
	mcom∑ª_func
;

47 
	mnum_vÆues
;

48 
BöomülTªe
 **
	mroŸs
;

49 
	mroŸs_Àngth
;

52 
	$böomül_hóp_cmp
(
BöomülHóp
 *
hóp
,

53 
BöomülHópVÆue
 
d©a1
,

54 
BöomülHópVÆue
 
d©a2
)

56 i‡(
hóp
->
hóp_ty≥
 =
BINOMIAL_HEAP_TYPE_MIN
) {

57  
hóp
->
	`com∑ª_func
(
d©a1
, 
d©a2
);

59  -(
hóp
->
	`com∑ª_func
(
d©a1
, 
d©a2
));

61 
	}
}

63 
	$böomül_åì_ªf
(
BöomülTªe
 *
åì
)

65 i‡(
åì
 !
NULL
) {

66 ++
åì
->
ªfcou¡
;

68 
	}
}

70 
	$böomül_åì_uƒef
(
BöomülTªe
 *
åì
)

72 
i
;

74 i‡(
åì
 =
NULL
) {

80 --
åì
->
ªfcou¡
;

85 i‡(
åì
->
ªfcou¡
 == 0) {

87 
i
=0; i<
åì
->
‹dî
; ++i) {

88 
	`böomül_åì_uƒef
(
åì
->
subåìs
[
i
]);

91 
	`‰ì
(
åì
->
subåìs
);

92 
	`‰ì
(
åì
);

94 
	}
}

96 
BöomülTªe
 *
	$böomül_åì_mîge
(
BöomülHóp
 *
hóp
,

97 
BöomülTªe
 *
åì1
,

98 
BöomülTªe
 *
åì2
)

100 
BöomülTªe
 *
√w_åì
;

101 
BöomülTªe
 *
tmp
;

102 
i
;

107 i‡(
	`böomül_hóp_cmp
(
hóp
, 
åì1
->
vÆue
, 
åì2
->value) > 0) {

111 
tmp
 = 
åì1
;

112 
åì1
 = 
åì2
;

113 
åì2
 = 
tmp
;

118 
√w_åì
 = 
	`mÆloc
((
BöomülTªe
));

120 i‡(
√w_åì
 =
NULL
) {

121  
NULL
;

124 
√w_åì
->
ªfcou¡
 = 0;

125 
√w_åì
->
‹dî
 = (Ë(
åì1
->order + 1);

129 
√w_åì
->
vÆue
 = 
åì1
->value;

134 
√w_åì
->
subåìs
 = 
	`mÆloc
((
BöomülTªe
 *Ë*Çew_åì->
‹dî
);

136 i‡(
√w_åì
->
subåìs
 =
NULL
) {

137 
	`‰ì
(
√w_åì
);

138  
NULL
;

141 
	`mem˝y
(
√w_åì
->
subåìs
, 
åì1
->subtrees,

142 (
BöomülTªe
 *Ë* 
åì1
->
‹dî
);

143 
√w_åì
->
subåìs
[√w_åì->
‹dî
 - 1] = 
åì2
;

147 
i
=0; i<
√w_åì
->
‹dî
; ++i) {

148 
	`böomül_åì_ªf
(
√w_åì
->
subåìs
[
i
]);

151  
√w_åì
;

152 
	}
}

158 
	$böomül_hóp_mîge_undo
(
BöomülTªe
 **
√w_roŸs
,

159 
cou¡
)

161 
i
;

163 
i
=0; i<=
cou¡
; ++i) {

164 
	`böomül_åì_uƒef
(
√w_roŸs
[
i
]);

167 
	`‰ì
(
√w_roŸs
);

168 
	}
}

173 
	$böomül_hóp_mîge
(
BöomülHóp
 *
hóp
, BöomülHó∞*
Ÿhî
)

175 
BöomülTªe
 **
√w_roŸs
;

176 
√w_roŸs_Àngth
;

177 
BöomülTªe
 *
vÆs
[3];

178 
num_vÆs
;

179 
BöomülTªe
 *
ˇºy
;

180 
BöomülTªe
 *
√w_ˇºy
;

181 
max
;

182 
i
;

187 i‡(
hóp
->
roŸs_Àngth
 > 
Ÿhî
->roots_length) {

188 
max
 = 
hóp
->
roŸs_Àngth
 + 1;

190 
max
 = 
Ÿhî
->
roŸs_Àngth
 + 1;

195 
√w_roŸs
 = 
	`mÆloc
((
BöomülTªe
 *Ë* 
max
);

197 i‡(
√w_roŸs
 =
NULL
) {

204 
√w_roŸs_Àngth
 = 0;

205 
ˇºy
 = 
NULL
;

207 
i
=0; i<
max
; ++i) {

212 
num_vÆs
 = 0;

216 i‡(
i
 < 
hóp
->
roŸs_Àngth
 && hóp->
roŸs
[i] !
NULL
) {

217 
vÆs
[
num_vÆs
] = 
hóp
->
roŸs
[
i
];

218 ++
num_vÆs
;

223 i‡(
i
 < 
Ÿhî
->
roŸs_Àngth
 && othî->
roŸs
[i] !
NULL
) {

224 
vÆs
[
num_vÆs
] = 
Ÿhî
->
roŸs
[
i
];

225 ++
num_vÆs
;

231 i‡(
ˇºy
 !
NULL
) {

232 
vÆs
[
num_vÆs
] = 
ˇºy
;

233 ++
num_vÆs
;

238 i‡((
num_vÆs
 & 1) != 0) {

242 
√w_roŸs
[
i
] = 
vÆs
[
num_vÆs
 - 1];

243 
	`böomül_åì_ªf
(
√w_roŸs
[
i
]);

244 
√w_roŸs_Àngth
 = 
i
 + 1;

250 
√w_roŸs
[
i
] = 
NULL
;

256 i‡((
num_vÆs
 & 2) != 0) {

261 
√w_ˇºy
 = 
	`böomül_åì_mîge
(
hóp
,

262 
vÆs
[0],

263 
vÆs
[1]);

265 i‡(
√w_ˇºy
 =
NULL
) {

271 
	`böomül_hóp_mîge_undo
(
√w_roŸs
, 
i
);

275 
	`böomül_åì_uƒef
(
ˇºy
);

284 
√w_ˇºy
 = 
NULL
;

289 
	`böomül_åì_uƒef
(
ˇºy
);

293 
ˇºy
 = 
√w_ˇºy
;

295 
	`böomül_åì_ªf
(
ˇºy
);

301 
i
=0; i<
hóp
->
roŸs_Àngth
; ++i) {

302 i‡(
hóp
->
roŸs
[
i
] !
NULL
) {

303 
	`böomül_åì_uƒef
(
hóp
->
roŸs
[
i
]);

309 
	`‰ì
(
hóp
->
roŸs
);

310 
hóp
->
roŸs
 = 
√w_roŸs
;

311 
hóp
->
roŸs_Àngth
 = 
√w_roŸs_Àngth
;

316 
	}
}

318 
BöomülHóp
 *
	$böomül_hóp_√w
(
BöomülHópTy≥
 
hóp_ty≥
,

319 
BöomülHópCom∑ªFunc
 
com∑ª_func
)

321 
BöomülHóp
 *
√w_hóp
;

325 
√w_hóp
 = 
	`ˇŒoc
(1, (
BöomülHóp
));

327 i‡(
√w_hóp
 =
NULL
) {

328  
NULL
;

333 
√w_hóp
->
hóp_ty≥
 = heap_type;

334 
√w_hóp
->
com∑ª_func
 = compare_func;

336  
√w_hóp
;

337 
	}
}

339 
	$böomül_hóp_‰ì
(
BöomülHóp
 *
hóp
)

341 
i
;

346 
i
=0; i<
hóp
->
roŸs_Àngth
; ++i) {

347 
	`böomül_åì_uƒef
(
hóp
->
roŸs
[
i
]);

352 
	`‰ì
(
hóp
->
roŸs
);

353 
	`‰ì
(
hóp
);

354 
	}
}

356 
	$böomül_hóp_ö£π
(
BöomülHóp
 *
hóp
, 
BöomülHópVÆue
 
vÆue
)

358 
BöomülHóp
 
Áke_hóp
;

359 
BöomülTªe
 *
√w_åì
;

360 
ªsu…
;

364 
√w_åì
 = 
	`mÆloc
((
BöomülTªe
));

366 i‡(
√w_åì
 =
NULL
) {

374 
√w_åì
->
vÆue
 = value;

375 
√w_åì
->
‹dî
 = 0;

376 
√w_åì
->
ªfcou¡
 = 1;

377 
√w_åì
->
subåìs
 = 
NULL
;

381 
Áke_hóp
.
hóp_ty≥
 = 
hóp
->heap_type;

382 
Áke_hóp
.
com∑ª_func
 = 
hóp
->compare_func;

383 
Áke_hóp
.
num_vÆues
 = 1;

384 
Áke_hóp
.
roŸs
 = &
√w_åì
;

385 
Áke_hóp
.
roŸs_Àngth
 = 1;

389 
ªsu…
 = 
	`böomül_hóp_mîge
(
hóp
, &
Áke_hóp
);

391 i‡(
ªsu…
 != 0) {

392 ++
hóp
->
num_vÆues
;

397 
	`böomül_åì_uƒef
(
√w_åì
);

399  
ªsu…
;

400 
	}
}

402 
BöomülHópVÆue
 
	$böomül_hóp_p›
(
BöomülHóp
 *
hóp
)

404 
BöomülTªe
 *
Àa°_åì
;

405 
BöomülHóp
 
Áke_hóp
;

406 
BöomülHópVÆue
 
ªsu…
;

407 
i
;

408 
Àa°_ödex
;

410 i‡(
hóp
->
num_vÆues
 == 0) {

411  
BINOMIAL_HEAP_NULL
;

416 
Àa°_ödex
 = 
UINT_MAX
;

418 
i
=0; i<
hóp
->
roŸs_Àngth
; ++i) {

420 i‡(
hóp
->
roŸs
[
i
] =
NULL
) {

424 i‡(
Àa°_ödex
 =
UINT_MAX


425 || 
	`böomül_hóp_cmp
(
hóp
,

426 
hóp
->
roŸs
[
i
]->
vÆue
,

427 
hóp
->
roŸs
[
Àa°_ödex
]->
vÆue
) < 0) {

428 
Àa°_ödex
 = 
i
;

434 
Àa°_åì
 = 
hóp
->
roŸs
[
Àa°_ödex
];

435 
hóp
->
roŸs
[
Àa°_ödex
] = 
NULL
;

439 
Áke_hóp
.
hóp_ty≥
 = 
hóp
->heap_type;

440 
Áke_hóp
.
com∑ª_func
 = 
hóp
->compare_func;

441 
Áke_hóp
.
roŸs
 = 
Àa°_åì
->
subåìs
;

442 
Áke_hóp
.
roŸs_Àngth
 = 
Àa°_åì
->
‹dî
;

446 i‡(
	`böomül_hóp_mîge
(
hóp
, &
Áke_hóp
)) {

452 
ªsu…
 = 
Àa°_åì
->
vÆue
;

453 
	`böomül_åì_uƒef
(
Àa°_åì
);

457 --
hóp
->
num_vÆues
;

459  
ªsu…
;

465 
hóp
->
roŸs
[
Àa°_ödex
] = 
Àa°_åì
;

469  
BINOMIAL_HEAP_NULL
;

471 
	}
}

473 
	$böomül_hóp_num_íåõs
(
BöomülHóp
 *
hóp
)

475  
hóp
->
num_vÆues
;

476 
	}
}

	@src/binomial-heap.h

38 #i‚de‡
ALGORITHM_BINOMIAL_HEAP_H


39 
	#ALGORITHM_BINOMIAL_HEAP_H


	)

41 #ifde‡
__˝lu•lus


56 
BINOMIAL_HEAP_TYPE_MIN
,

60 
BINOMIAL_HEAP_TYPE_MAX


61 } 
	tBöomülHópTy≥
;

67 *
	tBöomülHópVÆue
;

73 
	#BINOMIAL_HEAP_NULL
 ((*Ë0)

	)

85 (*
BöomülHópCom∑ªFunc
)(
	tBöomülHópVÆue
 
	tvÆue1
,

86 
	tBöomülHópVÆue
 
	tvÆue2
);

92 
_BöomülHóp
 
	tBöomülHóp
;

104 
BöomülHóp
 *
böomül_hóp_√w
(
BöomülHópTy≥
 
hóp_ty≥
,

105 
BöomülHópCom∑ªFunc
 
com∑ª_func
);

113 
böomül_hóp_‰ì
(
BöomülHóp
 *
hóp
);

125 
böomül_hóp_ö£π
(
BöomülHóp
 *
hóp
, 
BöomülHópVÆue
 
vÆue
);

135 
BöomülHópVÆue
 
böomül_hóp_p›
(
BöomülHóp
 *
hóp
);

144 
böomül_hóp_num_íåõs
(
BöomülHóp
 *
hóp
);

146 #ifde‡
__˝lu•lus


	@src/bloom-filter.c

21 
	~<°dlib.h
>

22 
	~<°rög.h
>

24 
	~"bloom-fûãr.h
"

28 #ifde‡
ALLOC_TESTING


29 
	~"Æloc-ã°ög.h
"

32 
	s_BloomFûãr
 {

33 
BloomFûãrHashFunc
 
	mhash_func
;

34 *
	mèbÀ
;

35 
	mèbÀ_size
;

36 
	mnum_fun˘i⁄s
;

52 c⁄° 
	gß…s
[] = {

71 
BloomFûãr
 *
	$bloom_fûãr_√w
(
èbÀ_size
,

72 
BloomFûãrHashFunc
 
hash_func
,

73 
num_fun˘i⁄s
)

75 
BloomFûãr
 *
fûãr
;

80 i‡(
num_fun˘i⁄s
 > (
ß…s
) / (*salts)) {

81  
NULL
;

86 
fûãr
 = 
	`mÆloc
((
BloomFûãr
));

88 i‡(
fûãr
 =
NULL
) {

89  
NULL
;

96 
fûãr
->
èbÀ
 = 
	`ˇŒoc
((
èbÀ_size
 + 7) / 8, 1);

98 i‡(
fûãr
->
èbÀ
 =
NULL
) {

99 
	`‰ì
(
fûãr
);

100  
NULL
;

103 
fûãr
->
hash_func
 = hash_func;

104 
fûãr
->
num_fun˘i⁄s
 =Çum_functions;

105 
fûãr
->
èbÀ_size
 =Åable_size;

107  
fûãr
;

108 
	}
}

110 
	$bloom_fûãr_‰ì
(
BloomFûãr
 *
bloomfûãr
)

112 
	`‰ì
(
bloomfûãr
->
èbÀ
);

113 
	`‰ì
(
bloomfûãr
);

114 
	}
}

116 
	$bloom_fûãr_ö£π
(
BloomFûãr
 *
bloomfûãr
, 
BloomFûãrVÆue
 
vÆue
)

118 
hash
;

119 
subhash
;

120 
ödex
;

121 
i
;

122 
b
;

126 
hash
 = 
bloomfûãr
->
	`hash_func
(
vÆue
);

131 
i
=0; i<
bloomfûãr
->
num_fun˘i⁄s
; ++i) {

135 
subhash
 = 
hash
 ^ 
ß…s
[
i
];

139 
ödex
 = 
subhash
 % 
bloomfûãr
->
èbÀ_size
;

145 
b
 = (Ë(1 << (
ödex
 % 8));

146 
bloomfûãr
->
èbÀ
[
ödex
 / 8] |
b
;

148 
	}
}

150 
	$bloom_fûãr_quîy
(
BloomFûãr
 *
bloomfûãr
, 
BloomFûãrVÆue
 
vÆue
)

152 
hash
;

153 
subhash
;

154 
ödex
;

155 
i
;

156 
b
;

157 
bô
;

161 
hash
 = 
bloomfûãr
->
	`hash_func
(
vÆue
);

166 
i
=0; i<
bloomfûãr
->
num_fun˘i⁄s
; ++i) {

170 
subhash
 = 
hash
 ^ 
ß…s
[
i
];

174 
ödex
 = 
subhash
 % 
bloomfûãr
->
èbÀ_size
;

178 
b
 = 
bloomfûãr
->
èbÀ
[
ödex
 / 8];

179 
bô
 = 1 << (
ödex
 % 8);

184 i‡((
b
 & 
bô
) == 0) {

194 
	}
}

196 
	$bloom_fûãr_ªad
(
BloomFûãr
 *
bloomfûãr
, *
¨øy
)

198 
¨øy_size
;

203 
¨øy_size
 = (
bloomfûãr
->
èbÀ_size
 + 7) / 8;

207 
	`mem˝y
(
¨øy
, 
bloomfûãr
->
èbÀ
, 
¨øy_size
);

208 
	}
}

210 
	$bloom_fûãr_lﬂd
(
BloomFûãr
 *
bloomfûãr
, *
¨øy
)

212 
¨øy_size
;

217 
¨øy_size
 = (
bloomfûãr
->
èbÀ_size
 + 7) / 8;

221 
	`mem˝y
(
bloomfûãr
->
èbÀ
, 
¨øy
, 
¨øy_size
);

222 
	}
}

224 
BloomFûãr
 *
	$bloom_fûãr_uni⁄
(
BloomFûãr
 *
fûãr1
, BloomFûã∏*
fûãr2
)

226 
BloomFûãr
 *
ªsu…
;

227 
i
;

228 
¨øy_size
;

233 i‡(
fûãr1
->
èbÀ_size
 !
fûãr2
->table_size

234 || 
fûãr1
->
num_fun˘i⁄s
 !
fûãr2
->num_functions

235 || 
fûãr1
->
hash_func
 !
fûãr2
->hash_func) {

236  
NULL
;

241 
ªsu…
 = 
	`bloom_fûãr_√w
(
fûãr1
->
èbÀ_size
,

242 
fûãr1
->
hash_func
,

243 
fûãr1
->
num_fun˘i⁄s
);

245 i‡(
ªsu…
 =
NULL
) {

246  
NULL
;

252 
¨øy_size
 = (
fûãr1
->
èbÀ_size
 + 7) / 8;

256 
i
=0; i<
¨øy_size
; ++i) {

257 
ªsu…
->
èbÀ
[
i
] = 
fûãr1
->èbÀ[i] | 
fûãr2
->table[i];

260  
ªsu…
;

261 
	}
}

263 
BloomFûãr
 *
	$bloom_fûãr_öãr£˘i⁄
(
BloomFûãr
 *
fûãr1
,

264 
BloomFûãr
 *
fûãr2
)

266 
BloomFûãr
 *
ªsu…
;

267 
i
;

268 
¨øy_size
;

273 i‡(
fûãr1
->
èbÀ_size
 !
fûãr2
->table_size

274 || 
fûãr1
->
num_fun˘i⁄s
 !
fûãr2
->num_functions

275 || 
fûãr1
->
hash_func
 !
fûãr2
->hash_func) {

276  
NULL
;

281 
ªsu…
 = 
	`bloom_fûãr_√w
(
fûãr1
->
èbÀ_size
,

282 
fûãr1
->
hash_func
,

283 
fûãr1
->
num_fun˘i⁄s
);

285 i‡(
ªsu…
 =
NULL
) {

286  
NULL
;

292 
¨øy_size
 = (
fûãr1
->
èbÀ_size
 + 7) / 8;

296 
i
=0; i<
¨øy_size
; ++i) {

297 
ªsu…
->
èbÀ
[
i
] = 
fûãr1
->èbÀ[i] & 
fûãr2
->table[i];

300  
ªsu…
;

301 
	}
}

	@src/bloom-filter.h

40 #i‚de‡
ALGORITHM_BLOOM_FILTER_H


41 
	#ALGORITHM_BLOOM_FILTER_H


	)

43 #ifde‡
__˝lu•lus


51 
_BloomFûãr
 
	tBloomFûãr
;

57 *
	tBloomFûãrVÆue
;

67 (*
	tBloomFûãrHashFunc
)(
	tBloomFûãrVÆue
 
	td©a
);

89 
BloomFûãr
 *
bloom_fûãr_√w
(
èbÀ_size
,

90 
BloomFûãrHashFunc
 
hash_func
,

91 
num_fun˘i⁄s
);

99 
bloom_fûãr_‰ì
(
BloomFûãr
 *
bloomfûãr
);

108 
bloom_fûãr_ö£π
(
BloomFûãr
 *
bloomfûãr
, 
BloomFûãrVÆue
 
vÆue
);

121 
bloom_fûãr_quîy
(
BloomFûãr
 *
bloomfûãr
, 
BloomFûãrVÆue
 
vÆue
);

132 
bloom_fûãr_ªad
(
BloomFûãr
 *
bloomfûãr
, *
¨øy
);

146 
bloom_fûãr_lﬂd
(
BloomFûãr
 *
bloomfûãr
, *
¨øy
);

165 
BloomFûãr
 *
bloom_fûãr_uni⁄
(BloomFûã∏*
fûãr1
,

166 
BloomFûãr
 *
fûãr2
);

185 
BloomFûãr
 *
bloom_fûãr_öãr£˘i⁄
(BloomFûã∏*
fûãr1
,

186 
BloomFûãr
 *
fûãr2
);

188 #ifde‡
__˝lu•lus


	@src/compare-int.c

21 
	~"com∑ª-öt.h
"

25 
	$öt_equÆ
(*
vloˇti⁄1
, *
vloˇti⁄2
)

27 *
loˇti⁄1
;

28 *
loˇti⁄2
;

30 
loˇti⁄1
 = (*Ë
vloˇti⁄1
;

31 
loˇti⁄2
 = (*Ë
vloˇti⁄2
;

33  *
loˇti⁄1
 =*
loˇti⁄2
;

34 
	}
}

36 
	$öt_com∑ª
(*
vloˇti⁄1
, *
vloˇti⁄2
)

38 *
loˇti⁄1
;

39 *
loˇti⁄2
;

41 
loˇti⁄1
 = (*Ë
vloˇti⁄1
;

42 
loˇti⁄2
 = (*Ë
vloˇti⁄2
;

44 i‡(*
loˇti⁄1
 < *
loˇti⁄2
) {

46 } i‡(*
loˇti⁄1
 > *
loˇti⁄2
) {

51 
	}
}

	@src/compare-int.h

32 #i‚de‡
ALGORITHM_COMPARE_INT_H


33 
	#ALGORITHM_COMPARE_INT_H


	)

35 #ifde‡
__˝lu•lus


49 
öt_equÆ
(*
loˇti⁄1
, *
loˇti⁄2
);

62 
öt_com∑ª
(*
loˇti⁄1
, *
loˇti⁄2
);

64 #ifde‡
__˝lu•lus


	@src/compare-pointer.c

21 
	~"com∑ª-poöãr.h
"

25 
	$poöãr_equÆ
(*
loˇti⁄1
, *
loˇti⁄2
)

27  
loˇti⁄1
 =
loˇti⁄2
;

28 
	}
}

30 
	$poöãr_com∑ª
(*
loˇti⁄1
, *
loˇti⁄2
)

32 i‡(
loˇti⁄1
 < 
loˇti⁄2
) {

34 } i‡(
loˇti⁄1
 > 
loˇti⁄2
) {

39 
	}
}

	@src/compare-pointer.h

31 #i‚de‡
ALGORITHM_COMPARE_POINTER_H


32 
	#ALGORITHM_COMPARE_POINTER_H


	)

34 #ifde‡
__˝lu•lus


47 
poöãr_equÆ
(*
loˇti⁄1
, *
loˇti⁄2
);

60 
poöãr_com∑ª
(*
loˇti⁄1
, *
loˇti⁄2
);

62 #ifde‡
__˝lu•lus


	@src/compare-string.c

21 
	~<˘y≥.h
>

22 
	~<°dlib.h
>

23 
	~<°rög.h
>

25 
	~"com∑ª-°rög.h
"

29 
	$°rög_equÆ
(*
°rög1
, *
°rög2
)

31  
	`°rcmp
((*Ë
°rög1
, (*Ë
°rög2
) == 0;

32 
	}
}

34 
	$°rög_com∑ª
(*
°rög1
, *
°rög2
)

36 
ªsu…
;

38 
ªsu…
 = 
	`°rcmp
((*Ë
°rög1
, (*Ë
°rög2
);

40 i‡(
ªsu…
 < 0) {

42 } i‡(
ªsu…
 > 0) {

47 
	}
}

51 
	$°rög_noˇ£_equÆ
(*
°rög1
, *
°rög2
)

53  
	`°rög_noˇ£_com∑ª
((*Ë
°rög1
, (*Ë
°rög2
) == 0;

54 
	}
}

60 
	$°rög_noˇ£_com∑ª
(*
°rög1
, *
°rög2
)

62 *
p1
;

63 *
p2
;

64 
c1
, 
c2
;

68 
p1
 = (*Ë
°rög1
;

69 
p2
 = (*Ë
°rög2
;

73 
c1
 = 
	`tﬁowî
(*
p1
);

74 
c2
 = 
	`tﬁowî
(*
p2
);

76 i‡(
c1
 !
c2
) {

80 i‡(
c1
 < 
c2
) {

89 i‡(
c1
 == '\0')

94 ++
p1
;

95 ++
p2
;

101 
	}
}

	@src/compare-string.h

34 #i‚de‡
ALGORITHM_COMPARE_STRING_H


35 
	#ALGORITHM_COMPARE_STRING_H


	)

37 #ifde‡
__˝lu•lus


50 
°rög_equÆ
(*
°rög1
, *
°rög2
);

63 
°rög_com∑ª
(*
°rög1
, *
°rög2
);

75 
°rög_noˇ£_equÆ
(*
°rög1
, *
°rög2
);

88 
°rög_noˇ£_com∑ª
(*
°rög1
, *
°rög2
);

90 #ifde‡
__˝lu•lus


	@src/hash-int.c

21 
	~"hash-öt.h
"

25 
	$öt_hash
(*
vloˇti⁄
)

27 *
loˇti⁄
;

29 
loˇti⁄
 = (*Ë
vloˇti⁄
;

31  (Ë*
loˇti⁄
;

32 
	}
}

	@src/hash-int.h

27 #i‚de‡
ALGORITHM_HASH_INT_H


28 
	#ALGORITHM_HASH_INT_H


	)

30 #ifde‡
__˝lu•lus


42 
öt_hash
(*
loˇti⁄
);

44 #ifde‡
__˝lu•lus


	@src/hash-pointer.c

21 
	~<limôs.h
>

23 
	~"hash-poöãr.h
"

27 
	$poöãr_hash
(*
loˇti⁄
)

29  (Ë(Ë
loˇti⁄
;

30 
	}
}

	@src/hash-pointer.h

27 #i‚de‡
ALGORITHM_HASH_POINTER_H


28 
	#ALGORITHM_HASH_POINTER_H


	)

30 #ifde‡
__˝lu•lus


42 
poöãr_hash
(*
loˇti⁄
);

44 #ifde‡
__˝lu•lus


	@src/hash-string.c

21 
	~<˘y≥.h
>

23 
	~"hash-°rög.h
"

27 
	$°rög_hash
(*
°rög
)

31 
ªsu…
 = 5381;

32 *
p
;

34 
p
 = (*Ë
°rög
;

36 *
p
 != '\0') {

37 
ªsu…
 = (ªsu… << 5Ë+Ñesu… + *
p
;

38 ++
p
;

41  
ªsu…
;

42 
	}
}

47 
	$°rög_noˇ£_hash
(*
°rög
)

49 
ªsu…
 = 5381;

50 *
p
;

52 
p
 = (*Ë
°rög
;

54 *
p
 != '\0') {

55 
ªsu…
 = (ªsu… << 5Ë+Ñesu… + (Ë
	`tﬁowî
(*
p
);

56 ++
p
;

59  
ªsu…
;

60 
	}
}

	@src/hash-string.h

28 #i‚de‡
ALGORITHM_HASH_STRING_H


29 
	#ALGORITHM_HASH_STRING_H


	)

31 #ifde‡
__˝lu•lus


42 
°rög_hash
(*
°rög
);

51 
°rög_noˇ£_hash
(*
°rög
);

53 #ifde‡
__˝lu•lus


	@src/hash-table.c

23 
	~<°dlib.h
>

24 
	~<°rög.h
>

26 
	~"hash-èbÀ.h
"

30 #ifde‡
ALLOC_TESTING


31 
	~"Æloc-ã°ög.h
"

34 
	s_HashTabÀE¡ry
 {

35 
HashTabÀKey
 
	mkey
;

36 
HashTabÀVÆue
 
	mvÆue
;

37 
HashTabÀE¡ry
 *
	m√xt
;

40 
	s_HashTabÀ
 {

41 
HashTabÀE¡ry
 **
	mèbÀ
;

42 
	mèbÀ_size
;

43 
HashTabÀHashFunc
 
	mhash_func
;

44 
HashTabÀEquÆFunc
 
	mequÆ_func
;

45 
HashTabÀKeyFªeFunc
 
	mkey_‰ì_func
;

46 
HashTabÀVÆueFªeFunc
 
	mvÆue_‰ì_func
;

47 
	míåõs
;

48 
	m¥ime_ödex
;

56 c⁄° 
	ghash_èbÀ_¥imes
[] = {

63 c⁄° 
	ghash_èbÀ_num_¥imes


64 (
hash_èbÀ_¥imes
) / ();

69 
	$hash_èbÀ_Æloˇã_èbÀ
(
HashTabÀ
 *
hash_èbÀ
)

71 
√w_èbÀ_size
;

78 i‡(
hash_èbÀ
->
¥ime_ödex
 < 
hash_èbÀ_num_¥imes
) {

79 
√w_èbÀ_size
 = 
hash_èbÀ_¥imes
[
hash_èbÀ
->
¥ime_ödex
];

81 
√w_èbÀ_size
 = 
hash_èbÀ
->
íåõs
 * 10;

84 
hash_èbÀ
->
èbÀ_size
 = 
√w_èbÀ_size
;

88 
hash_èbÀ
->
èbÀ
 = 
	`ˇŒoc
(hash_èbÀ->
èbÀ_size
,

89 (
HashTabÀE¡ry
 *));

91  
hash_èbÀ
->
èbÀ
 !
NULL
;

92 
	}
}

96 
	$hash_èbÀ_‰ì_íåy
(
HashTabÀ
 *
hash_èbÀ
, 
HashTabÀE¡ry
 *
íåy
)

101 i‡(
hash_èbÀ
->
key_‰ì_func
 !
NULL
) {

102 
hash_èbÀ
->
	`key_‰ì_func
(
íåy
->
key
);

107 i‡(
hash_èbÀ
->
vÆue_‰ì_func
 !
NULL
) {

108 
hash_èbÀ
->
	`vÆue_‰ì_func
(
íåy
->
vÆue
);

113 
	`‰ì
(
íåy
);

114 
	}
}

116 
HashTabÀ
 *
	$hash_èbÀ_√w
(
HashTabÀHashFunc
 
hash_func
,

117 
HashTabÀEquÆFunc
 
equÆ_func
)

119 
HashTabÀ
 *
hash_èbÀ
;

123 
hash_èbÀ
 = (
HashTabÀ
 *Ë
	`mÆloc
((HashTable));

125 i‡(
hash_èbÀ
 =
NULL
) {

126  
NULL
;

129 
hash_èbÀ
->
hash_func
 = hash_func;

130 
hash_èbÀ
->
equÆ_func
 =Équal_func;

131 
hash_èbÀ
->
key_‰ì_func
 = 
NULL
;

132 
hash_èbÀ
->
vÆue_‰ì_func
 = 
NULL
;

133 
hash_èbÀ
->
íåõs
 = 0;

134 
hash_èbÀ
->
¥ime_ödex
 = 0;

138 i‡(!
	`hash_èbÀ_Æloˇã_èbÀ
(
hash_èbÀ
)) {

139 
	`‰ì
(
hash_èbÀ
);

141  
NULL
;

144  
hash_èbÀ
;

145 
	}
}

147 
	$hash_èbÀ_‰ì
(
HashTabÀ
 *
hash_èbÀ
)

149 
HashTabÀE¡ry
 *
rovî
;

150 
HashTabÀE¡ry
 *
√xt
;

151 
i
;

155 
i
=0; i<
hash_èbÀ
->
èbÀ_size
; ++i) {

156 
rovî
 = 
hash_èbÀ
->
èbÀ
[
i
];

157 
rovî
 !
NULL
) {

158 
√xt
 = 
rovî
->next;

159 
	`hash_èbÀ_‰ì_íåy
(
hash_èbÀ
, 
rovî
);

160 
rovî
 = 
√xt
;

166 
	`‰ì
(
hash_èbÀ
->
èbÀ
);

170 
	`‰ì
(
hash_èbÀ
);

171 
	}
}

173 
	$hash_èbÀ_ªgi°î_‰ì_fun˘i⁄s
(
HashTabÀ
 *
hash_èbÀ
,

174 
HashTabÀKeyFªeFunc
 
key_‰ì_func
,

175 
HashTabÀVÆueFªeFunc
 
vÆue_‰ì_func
)

177 
hash_èbÀ
->
key_‰ì_func
 = key_free_func;

178 
hash_èbÀ
->
vÆue_‰ì_func
 = value_free_func;

179 
	}
}

182 
	$hash_èbÀ_íœrge
(
HashTabÀ
 *
hash_èbÀ
)

184 
HashTabÀE¡ry
 **
ﬁd_èbÀ
;

185 
ﬁd_èbÀ_size
;

186 
ﬁd_¥ime_ödex
;

187 
HashTabÀE¡ry
 *
rovî
;

188 
HashTabÀE¡ry
 *
√xt
;

189 
ödex
;

190 
i
;

194 
ﬁd_èbÀ
 = 
hash_èbÀ
->
èbÀ
;

195 
ﬁd_èbÀ_size
 = 
hash_èbÀ
->
èbÀ_size
;

196 
ﬁd_¥ime_ödex
 = 
hash_èbÀ
->
¥ime_ödex
;

200 ++
hash_èbÀ
->
¥ime_ödex
;

202 i‡(!
	`hash_èbÀ_Æloˇã_èbÀ
(
hash_èbÀ
)) {

206 
hash_èbÀ
->
èbÀ
 = 
ﬁd_èbÀ
;

207 
hash_èbÀ
->
èbÀ_size
 = 
ﬁd_èbÀ_size
;

208 
hash_èbÀ
->
¥ime_ödex
 = 
ﬁd_¥ime_ödex
;

215 
i
=0; i<
ﬁd_èbÀ_size
; ++i) {

216 
rovî
 = 
ﬁd_èbÀ
[
i
];

218 
rovî
 !
NULL
) {

219 
√xt
 = 
rovî
->next;

223 
ödex
 = 
hash_èbÀ
->
	`hash_func
(
rovî
->
key
Ë% hash_èbÀ->
èbÀ_size
;

227 
rovî
->
√xt
 = 
hash_èbÀ
->
èbÀ
[
ödex
];

228 
hash_èbÀ
->
èbÀ
[
ödex
] = 
rovî
;

232 
rovî
 = 
√xt
;

238 
	`‰ì
(
ﬁd_èbÀ
);

241 
	}
}

243 
	$hash_èbÀ_ö£π
(
HashTabÀ
 *
hash_èbÀ
, 
HashTabÀKey
 
key
, 
HashTabÀVÆue
 
vÆue
)

245 
HashTabÀE¡ry
 *
rovî
;

246 
HashTabÀE¡ry
 *
√wíåy
;

247 
ödex
;

253 i‡((
hash_èbÀ
->
íåõs
 * 3Ë/ hash_èbÀ->
èbÀ_size
 > 0) {

257 i‡(!
	`hash_èbÀ_íœrge
(
hash_èbÀ
)) {

267 
ödex
 = 
hash_èbÀ
->
	`hash_func
(
key
Ë% hash_èbÀ->
èbÀ_size
;

272 
rovî
 = 
hash_èbÀ
->
èbÀ
[
ödex
];

274 
rovî
 !
NULL
) {

275 i‡(
hash_èbÀ
->
	`equÆ_func
(
rovî
->
key
, key) != 0) {

282 i‡(
hash_èbÀ
->
vÆue_‰ì_func
 !
NULL
) {

283 
hash_èbÀ
->
	`vÆue_‰ì_func
(
rovî
->
vÆue
);

289 i‡(
hash_èbÀ
->
key_‰ì_func
 !
NULL
) {

290 
hash_èbÀ
->
	`key_‰ì_func
(
rovî
->
key
);

293 
rovî
->
key
 = key;

294 
rovî
->
vÆue
 = value;

300 
rovî
 =Ñovî->
√xt
;

305 
√wíåy
 = (
HashTabÀE¡ry
 *Ë
	`mÆloc
((HashTableEntry));

307 i‡(
√wíåy
 =
NULL
) {

311 
√wíåy
->
key
 = key;

312 
√wíåy
->
vÆue
 = value;

316 
√wíåy
->
√xt
 = 
hash_èbÀ
->
èbÀ
[
ödex
];

317 
hash_èbÀ
->
èbÀ
[
ödex
] = 
√wíåy
;

321 ++
hash_èbÀ
->
íåõs
;

326 
	}
}

328 
HashTabÀVÆue
 
	$hash_èbÀ_lookup
(
HashTabÀ
 *
hash_èbÀ
, 
HashTabÀKey
 
key
)

330 
HashTabÀE¡ry
 *
rovî
;

331 
ödex
;

335 
ödex
 = 
hash_èbÀ
->
	`hash_func
(
key
Ë% hash_èbÀ->
èbÀ_size
;

340 
rovî
 = 
hash_èbÀ
->
èbÀ
[
ödex
];

342 
rovî
 !
NULL
) {

343 i‡(
hash_èbÀ
->
	`equÆ_func
(
key
, 
rovî
->key) != 0) {

347  
rovî
->
vÆue
;

349 
rovî
 =Ñovî->
√xt
;

354  
HASH_TABLE_NULL
;

355 
	}
}

357 
	$hash_èbÀ_ªmove
(
HashTabÀ
 *
hash_èbÀ
, 
HashTabÀKey
 
key
)

359 
HashTabÀE¡ry
 **
rovî
;

360 
HashTabÀE¡ry
 *
íåy
;

361 
ödex
;

362 
ªsu…
;

366 
ödex
 = 
hash_èbÀ
->
	`hash_func
(
key
Ë% hash_èbÀ->
èbÀ_size
;

373 
ªsu…
 = 0;

374 
rovî
 = &
hash_èbÀ
->
èbÀ
[
ödex
];

376 *
rovî
 !
NULL
) {

378 i‡(
hash_èbÀ
->
	`equÆ_func
(
key
, (*
rovî
)->key) != 0) {

382 
íåy
 = *
rovî
;

386 *
rovî
 = 
íåy
->
√xt
;

390 
	`hash_èbÀ_‰ì_íåy
(
hash_èbÀ
, 
íåy
);

394 --
hash_èbÀ
->
íåõs
;

396 
ªsu…
 = 1;

403 
rovî
 = &((*rovî)->
√xt
);

406  
ªsu…
;

407 
	}
}

409 
	$hash_èbÀ_num_íåõs
(
HashTabÀ
 *
hash_èbÀ
)

411  
hash_èbÀ
->
íåõs
;

412 
	}
}

414 
	$hash_èbÀ_ôî©e
(
HashTabÀ
 *
hash_èbÀ
, 
HashTabÀIãøt‹
 *
ôî©‹
)

416 
chaö
;

418 
ôî©‹
->
hash_èbÀ
 = hash_table;

422 
ôî©‹
->
√xt_íåy
 = 
NULL
;

426 
chaö
=0; chaö<
hash_èbÀ
->
èbÀ_size
; ++chain) {

428 i‡(
hash_èbÀ
->
èbÀ
[
chaö
] !
NULL
) {

429 
ôî©‹
->
√xt_íåy
 = 
hash_èbÀ
->
èbÀ
[
chaö
];

430 
ôî©‹
->
√xt_chaö
 = 
chaö
;

434 
	}
}

436 
	$hash_èbÀ_ôî_has_m‹e
(
HashTabÀIãøt‹
 *
ôî©‹
)

438  
ôî©‹
->
√xt_íåy
 !
NULL
;

439 
	}
}

441 
HashTabÀVÆue
 
	$hash_èbÀ_ôî_√xt
(
HashTabÀIãøt‹
 *
ôî©‹
)

443 
HashTabÀE¡ry
 *
cuºít_íåy
;

444 
HashTabÀ
 *
hash_èbÀ
;

445 
HashTabÀVÆue
 
ªsu…
;

446 
chaö
;

448 
hash_èbÀ
 = 
ôî©‹
->hash_table;

452 i‡(
ôî©‹
->
√xt_íåy
 =
NULL
) {

453  
HASH_TABLE_NULL
;

458 
cuºít_íåy
 = 
ôî©‹
->
√xt_íåy
;

459 
ªsu…
 = 
cuºít_íåy
->
vÆue
;

463 i‡(
cuºít_íåy
->
√xt
 !
NULL
) {

467 
ôî©‹
->
√xt_íåy
 = 
cuºít_íåy
->
√xt
;

473 
chaö
 = 
ôî©‹
->
√xt_chaö
 + 1;

477 
ôî©‹
->
√xt_íåy
 = 
NULL
;

479 
chaö
 < 
hash_èbÀ
->
èbÀ_size
) {

483 i‡(
hash_èbÀ
->
èbÀ
[
chaö
] !
NULL
) {

484 
ôî©‹
->
√xt_íåy
 = 
hash_èbÀ
->
èbÀ
[
chaö
];

490 ++
chaö
;

493 
ôî©‹
->
√xt_chaö
 = 
chaö
;

496  
ªsu…
;

497 
	}
}

	@src/hash-table.h

45 #i‚de‡
ALGORITHM_HASH_TABLE_H


46 
	#ALGORITHM_HASH_TABLE_H


	)

48 #ifde‡
__˝lu•lus


56 
_HashTabÀ
 
	tHashTabÀ
;

62 
_HashTabÀIãøt‹
 
	tHashTabÀIãøt‹
;

68 
_HashTabÀE¡ry
 
	tHashTabÀE¡ry
;

74 *
	tHashTabÀKey
;

80 *
	tHashTabÀVÆue
;

86 
	s_HashTabÀIãøt‹
 {

87 
HashTabÀ
 *
hash_èbÀ
;

88 
HashTabÀE¡ry
 *
√xt_íåy
;

89 
√xt_chaö
;

96 
	#HASH_TABLE_NULL
 ((*Ë0)

	)

106 (*
	tHashTabÀHashFunc
)(
	tHashTabÀKey
 
	tvÆue
);

115 (*
HashTabÀEquÆFunc
)(
	tHashTabÀKey
 
	tvÆue1
, HashTabÀKey 
	tvÆue2
);

122 (*
HashTabÀKeyFªeFunc
)(
	tHashTabÀKey
 
	tvÆue
);

129 (*
HashTabÀVÆueFªeFunc
)(
	tHashTabÀVÆue
 
	tvÆue
);

143 
HashTabÀ
 *
hash_èbÀ_√w
(
HashTabÀHashFunc
 
hash_func
,

144 
HashTabÀEquÆFunc
 
equÆ_func
);

152 
hash_èbÀ_‰ì
(
HashTabÀ
 *
hash_èbÀ
);

163 
hash_èbÀ_ªgi°î_‰ì_fun˘i⁄s
(
HashTabÀ
 *
hash_èbÀ
,

164 
HashTabÀKeyFªeFunc
 
key_‰ì_func
,

165 
HashTabÀVÆueFªeFunc
 
vÆue_‰ì_func
);

179 
hash_èbÀ_ö£π
(
HashTabÀ
 *
hash_èbÀ
,

180 
HashTabÀKey
 
key
,

181 
HashTabÀVÆue
 
vÆue
);

192 
HashTabÀVÆue
 
hash_èbÀ_lookup
(
HashTabÀ
 *
hash_èbÀ
,

193 
HashTabÀKey
 
key
);

204 
hash_èbÀ_ªmove
(
HashTabÀ
 *
hash_èbÀ
, 
HashTabÀKey
 
key
);

213 
hash_èbÀ_num_íåõs
(
HashTabÀ
 *
hash_èbÀ
);

223 
hash_èbÀ_ôî©e
(
HashTabÀ
 *
hash_èbÀ
, 
HashTabÀIãøt‹
 *
ôî
);

235 
hash_èbÀ_ôî_has_m‹e
(
HashTabÀIãøt‹
 *
ôî©‹
);

246 
HashTabÀVÆue
 
hash_èbÀ_ôî_√xt
(
HashTabÀIãøt‹
 *
ôî©‹
);

248 #ifde‡
__˝lu•lus


	@src/libcalg.h

21 #i‚de‡
LIBCALG_H


22 
	#LIBCALG_H


	)

24 
	~<libˇlg/com∑ª-öt.h
>

25 
	~<libˇlg/com∑ª-poöãr.h
>

26 
	~<libˇlg/com∑ª-°rög.h
>

28 
	~<libˇlg/hash-öt.h
>

29 
	~<libˇlg/hash-poöãr.h
>

30 
	~<libˇlg/hash-°rög.h
>

32 
	~<libˇlg/¨øyli°.h
>

33 
	~<libˇlg/avl-åì.h
>

34 
	~<libˇlg/bö¨y-hóp.h
>

35 
	~<libˇlg/böomül-hóp.h
>

36 
	~<libˇlg/bloom-fûãr.h
>

37 
	~<libˇlg/hash-èbÀ.h
>

38 
	~<libˇlg/li°.h
>

39 
	~<libˇlg/queue.h
>

40 
	~<libˇlg/rb-åì.h
>

41 
	~<libˇlg/£t.h
>

42 
	~<libˇlg/¶i°.h
>

43 
	~<libˇlg/åõ.h
>

	@src/list.c

21 
	~<°dlib.h
>

23 
	~"li°.h
"

27 #ifde‡
ALLOC_TESTING


28 
	~"Æloc-ã°ög.h
"

33 
	s_Li°E¡ry
 {

34 
Li°VÆue
 
	md©a
;

35 
Li°E¡ry
 *
	m¥ev
;

36 
Li°E¡ry
 *
	m√xt
;

39 
	$li°_‰ì
(
Li°E¡ry
 *
li°
)

41 
Li°E¡ry
 *
íåy
;

46 
íåy
 = 
li°
;

48 
íåy
 !
NULL
) {

49 
Li°E¡ry
 *
√xt
;

51 
√xt
 = 
íåy
->next;

53 
	`‰ì
(
íåy
);

55 
íåy
 = 
√xt
;

57 
	}
}

59 
Li°E¡ry
 *
	$li°_¥ïíd
(
Li°E¡ry
 **
li°
, 
Li°VÆue
 
d©a
)

61 
Li°E¡ry
 *
√wíåy
;

65 
√wíåy
 = 
	`mÆloc
((
Li°E¡ry
));

67 i‡(
√wíåy
 =
NULL
) {

68  
NULL
;

71 
√wíåy
->
d©a
 = data;

75 i‡(*
li°
 !
NULL
) {

76 (*
li°
)->
¥ev
 = 
√wíåy
;

78 
√wíåy
->
¥ev
 = 
NULL
;

79 
√wíåy
->
√xt
 = *
li°
;

80 *
li°
 = 
√wíåy
;

82  
√wíåy
;

83 
	}
}

85 
Li°E¡ry
 *
	$li°_≠≥nd
(
Li°E¡ry
 **
li°
, 
Li°VÆue
 
d©a
)

87 
Li°E¡ry
 *
rovî
;

88 
Li°E¡ry
 *
√wíåy
;

92 
√wíåy
 = 
	`mÆloc
((
Li°E¡ry
));

94 i‡(
√wíåy
 =
NULL
) {

95  
NULL
;

98 
√wíåy
->
d©a
 = data;

99 
√wíåy
->
√xt
 = 
NULL
;

103 i‡(*
li°
 =
NULL
) {

107 *
li°
 = 
√wíåy
;

108 
√wíåy
->
¥ev
 = 
NULL
;

114 
rovî
=*
li°
;Ñovî->
√xt
 !
NULL
;Ñover =Ñover->next);

118 
√wíåy
->
¥ev
 = 
rovî
;

119 
rovî
->
√xt
 = 
√wíåy
;

122  
√wíåy
;

123 
	}
}

125 
Li°VÆue
 
	$li°_d©a
(
Li°E¡ry
 *
li°íåy
)

127  
li°íåy
->
d©a
;

128 
	}
}

130 
Li°E¡ry
 *
	$li°_¥ev
(
Li°E¡ry
 *
li°íåy
)

132  
li°íåy
->
¥ev
;

133 
	}
}

135 
Li°E¡ry
 *
	$li°_√xt
(
Li°E¡ry
 *
li°íåy
)

137  
li°íåy
->
√xt
;

138 
	}
}

140 
Li°E¡ry
 *
	$li°_¡h_íåy
(
Li°E¡ry
 *
li°
, 
n
)

142 
Li°E¡ry
 *
íåy
;

143 
i
;

147 i‡(
n
 < 0) {

148  
NULL
;

154 
íåy
 = 
li°
;

156 
i
=0; i<
n
; ++i) {

158 i‡(
íåy
 =
NULL
) {

159  
NULL
;

161 
íåy
 =É¡ry->
√xt
;

164  
íåy
;

165 
	}
}

167 
Li°VÆue
 
	$li°_¡h_d©a
(
Li°E¡ry
 *
li°
, 
n
)

169 
Li°E¡ry
 *
íåy
;

173 
íåy
 = 
	`li°_¡h_íåy
(
li°
, 
n
);

177 i‡(
íåy
 =
NULL
) {

178  
LIST_NULL
;

180  
íåy
->
d©a
;

182 
	}
}

184 
	$li°_Àngth
(
Li°E¡ry
 *
li°
)

186 
Li°E¡ry
 *
íåy
;

187 
Àngth
;

189 
Àngth
 = 0;

190 
íåy
 = 
li°
;

192 
íåy
 !
NULL
) {

196 ++
Àngth
;

198 
íåy
 =É¡ry->
√xt
;

201  
Àngth
;

202 
	}
}

204 
Li°VÆue
 *
	$li°_to_¨øy
(
Li°E¡ry
 *
li°
)

206 
Li°E¡ry
 *
rovî
;

207 
Li°VÆue
 *
¨øy
;

208 
Àngth
;

209 
i
;

213 
Àngth
 = 
	`li°_Àngth
(
li°
);

215 
¨øy
 = 
	`mÆloc
((
Li°VÆue
Ë* 
Àngth
);

217 i‡(
¨øy
 =
NULL
) {

218  
NULL
;

223 
rovî
 = 
li°
;

225 
i
=0; i<
Àngth
; ++i) {

229 
¨øy
[
i
] = 
rovî
->
d©a
;

233 
rovî
 =Ñovî->
√xt
;

236  
¨øy
;

237 
	}
}

239 
	$li°_ªmove_íåy
(
Li°E¡ry
 **
li°
, Li°E¡ry *
íåy
)

243 i‡(*
li°
 =
NULL
 || 
íåy
 == NULL) {

249 i‡(
íåy
->
¥ev
 =
NULL
) {

253 *
li°
 = 
íåy
->
√xt
;

258 i‡(
íåy
->
√xt
 !
NULL
) {

259 
íåy
->
√xt
->
¥ev
 = 
NULL
;

268 
íåy
->
¥ev
->
√xt
 =Éntry->next;

273 i‡(
íåy
->
√xt
 !
NULL
) {

274 
íåy
->
√xt
->
¥ev
 =Éntry->prev;

280 
	`‰ì
(
íåy
);

285 
	}
}

287 
	$li°_ªmove_d©a
(
Li°E¡ry
 **
li°
, 
Li°EquÆFunc
 
ˇŒback
,

288 
Li°VÆue
 
d©a
)

290 
íåõs_ªmoved
;

291 
Li°E¡ry
 *
rovî
;

292 
Li°E¡ry
 *
√xt
;

294 
íåõs_ªmoved
 = 0;

298 
rovî
 = *
li°
;

300 
rovî
 !
NULL
) {

302 
√xt
 = 
rovî
->next;

304 i‡(
	`ˇŒback
(
rovî
->
d©a
, data)) {

309 i‡(
rovî
->
¥ev
 =
NULL
) {

313 *
li°
 = 
rovî
->
√xt
;

319 
rovî
->
¥ev
->
√xt
 =Ñover->next;

322 i‡(
rovî
->
√xt
 !
NULL
) {

323 
rovî
->
√xt
->
¥ev
 =Ñover->prev;

328 
	`‰ì
(
rovî
);

330 ++
íåõs_ªmoved
;

335 
rovî
 = 
√xt
;

338  
íåõs_ªmoved
;

339 
	}
}

344 
Li°E¡ry
 *
	$li°_s‹t_öã∫Æ
(
Li°E¡ry
 **
li°
,

345 
Li°Com∑ªFunc
 
com∑ª_func
)

347 
Li°E¡ry
 *
pivŸ
;

348 
Li°E¡ry
 *
rovî
;

349 
Li°E¡ry
 *
Àss_li°
, *
m‹e_li°
;

350 
Li°E¡ry
 *
Àss_li°_íd
, *
m‹e_li°_íd
;

355 i‡(*
li°
 =
NULL
 || (*li°)->
√xt
 == NULL) {

356  *
li°
;

361 
pivŸ
 = *
li°
;

367 
Àss_li°
 = 
NULL
;

368 
m‹e_li°
 = 
NULL
;

369 
rovî
 = (*
li°
)->
√xt
;

371 
rovî
 !
NULL
) {

372 
Li°E¡ry
 *
√xt
 = 
rovî
->next;

374 i‡(
	`com∑ª_func
(
rovî
->
d©a
, 
pivŸ
->data) < 0) {

378 
rovî
->
¥ev
 = 
NULL
;

379 
rovî
->
√xt
 = 
Àss_li°
;

380 i‡(
Àss_li°
 !
NULL
) {

381 
Àss_li°
->
¥ev
 = 
rovî
;

383 
Àss_li°
 = 
rovî
;

389 
rovî
->
¥ev
 = 
NULL
;

390 
rovî
->
√xt
 = 
m‹e_li°
;

391 i‡(
m‹e_li°
 !
NULL
) {

392 
m‹e_li°
->
¥ev
 = 
rovî
;

394 
m‹e_li°
 = 
rovî
;

397 
rovî
 = 
√xt
;

402 
Àss_li°_íd
 = 
	`li°_s‹t_öã∫Æ
(&
Àss_li°
, 
com∑ª_func
);

403 
m‹e_li°_íd
 = 
	`li°_s‹t_öã∫Æ
(&
m‹e_li°
, 
com∑ª_func
);

407 *
li°
 = 
Àss_li°
;

412 i‡(
Àss_li°
 =
NULL
) {

413 
pivŸ
->
¥ev
 = 
NULL
;

414 *
li°
 = 
pivŸ
;

416 
pivŸ
->
¥ev
 = 
Àss_li°_íd
;

417 
Àss_li°_íd
->
√xt
 = 
pivŸ
;

422 
pivŸ
->
√xt
 = 
m‹e_li°
;

423 i‡(
m‹e_li°
 !
NULL
) {

424 
m‹e_li°
->
¥ev
 = 
pivŸ
;

431 i‡(
m‹e_li°
 =
NULL
) {

432  
pivŸ
;

434  
m‹e_li°_íd
;

436 
	}
}

438 
	$li°_s‹t
(
Li°E¡ry
 **
li°
, 
Li°Com∑ªFunc
 
com∑ª_func
)

440 
	`li°_s‹t_öã∫Æ
(
li°
, 
com∑ª_func
);

441 
	}
}

443 
Li°E¡ry
 *
	$li°_föd_d©a
(
Li°E¡ry
 *
li°
,

444 
Li°EquÆFunc
 
ˇŒback
,

445 
Li°VÆue
 
d©a
)

447 
Li°E¡ry
 *
rovî
;

451 
rovî
=
li°
;Ñovî !
NULL
;ÑovîÙovî->
√xt
) {

452 i‡(
	`ˇŒback
(
rovî
->
d©a
, data) != 0) {

453  
rovî
;

459  
NULL
;

460 
	}
}

462 
	$li°_ôî©e
(
Li°E¡ry
 **
li°
, 
Li°Iãøt‹
 *
ôî
)

466 
ôî
->
¥ev_√xt
 = 
li°
;

470 
ôî
->
cuºít
 = 
NULL
;

471 
	}
}

473 
	$li°_ôî_has_m‹e
(
Li°Iãøt‹
 *
ôî
)

475 i‡(
ôî
->
cuºít
 =
NULL
 || iãr->cuºíà!*ôî->
¥ev_√xt
) {

482  *
ôî
->
¥ev_√xt
 !
NULL
;

489  
ôî
->
cuºít
->
√xt
 !
NULL
;

491 
	}
}

493 
Li°VÆue
 
	$li°_ôî_√xt
(
Li°Iãøt‹
 *
ôî
)

495 i‡(
ôî
->
cuºít
 =
NULL
 || iãr->cuºíà!*ôî->
¥ev_√xt
) {

501 
ôî
->
cuºít
 = *ôî->
¥ev_√xt
;

508 
ôî
->
¥ev_√xt
 = &ôî->
cuºít
->
√xt
;

509 
ôî
->
cuºít
 = iãr->cuºít->
√xt
;

514 i‡(
ôî
->
cuºít
 =
NULL
) {

515  
LIST_NULL
;

517  
ôî
->
cuºít
->
d©a
;

519 
	}
}

521 
	$li°_ôî_ªmove
(
Li°Iãøt‹
 *
ôî
)

523 i‡(
ôî
->
cuºít
 =
NULL
 || iãr->cuºíà!*ôî->
¥ev_√xt
) {

533 *
ôî
->
¥ev_√xt
 = iãr->
cuºít
->
√xt
;

535 i‡(
ôî
->
cuºít
->
√xt
 !
NULL
) {

536 
ôî
->
cuºít
->
√xt
->
¥ev
 = iter->current->prev;

539 
	`‰ì
(
ôî
->
cuºít
);

540 
ôî
->
cuºít
 = 
NULL
;

542 
	}
}

	@src/list.h

53 #i‚de‡
ALGORITHM_LIST_H


54 
	#ALGORITHM_LIST_H


	)

56 #ifde‡
__˝lu•lus


67 
_Li°E¡ry
 
	tLi°E¡ry
;

73 
_Li°Iãøt‹
 
	tLi°Iãøt‹
;

79 *
	tLi°VÆue
;

85 
	s_Li°Iãøt‹
 {

86 
Li°E¡ry
 **
¥ev_√xt
;

87 
Li°E¡ry
 *
cuºít
;

94 
	#LIST_NULL
 ((*Ë0)

	)

106 (*
Li°Com∑ªFunc
)(
	tLi°VÆue
 
	tvÆue1
, Li°VÆuê
	tvÆue2
);

118 (*
Li°EquÆFunc
)(
	tLi°VÆue
 
	tvÆue1
, Li°VÆuê
	tvÆue2
);

126 
li°_‰ì
(
Li°E¡ry
 *
li°
);

137 
Li°E¡ry
 *
li°_¥ïíd
(Li°E¡ry **
li°
, 
Li°VÆue
 
d©a
);

148 
Li°E¡ry
 *
li°_≠≥nd
(Li°E¡ry **
li°
, 
Li°VÆue
 
d©a
);

158 
Li°E¡ry
 *
li°_¥ev
(Li°E¡ry *
li°íåy
);

168 
Li°E¡ry
 *
li°_√xt
(Li°E¡ry *
li°íåy
);

177 
Li°VÆue
 
li°_d©a
(
Li°E¡ry
 *
li°íåy
);

187 
Li°E¡ry
 *
li°_¡h_íåy
(Li°E¡ry *
li°
, 
n
);

198 
Li°VÆue
 
li°_¡h_d©a
(
Li°E¡ry
 *
li°
, 
n
);

207 
li°_Àngth
(
Li°E¡ry
 *
li°
);

219 
Li°VÆue
 *
li°_to_¨øy
(
Li°E¡ry
 *
li°
);

230 
li°_ªmove_íåy
(
Li°E¡ry
 **
li°
, Li°E¡ry *
íåy
);

242 
li°_ªmove_d©a
(
Li°E¡ry
 **
li°
, 
Li°EquÆFunc
 
ˇŒback
,

243 
Li°VÆue
 
d©a
);

252 
li°_s‹t
(
Li°E¡ry
 **
li°
, 
Li°Com∑ªFunc
 
com∑ª_func
);

265 
Li°E¡ry
 *
li°_föd_d©a
(Li°E¡ry *
li°
,

266 
Li°EquÆFunc
 
ˇŒback
,

267 
Li°VÆue
 
d©a
);

276 
li°_ôî©e
(
Li°E¡ry
 **
li°
, 
Li°Iãøt‹
 *
ôî
);

287 
li°_ôî_has_m‹e
(
Li°Iãøt‹
 *
ôî©‹
);

297 
Li°VÆue
 
li°_ôî_√xt
(
Li°Iãøt‹
 *
ôî©‹
);

306 
li°_ôî_ªmove
(
Li°Iãøt‹
 *
ôî©‹
);

308 #ifde‡
__˝lu•lus


	@src/queue.c

21 
	~<°dlib.h
>

23 
	~"queue.h
"

27 #ifde‡
ALLOC_TESTING


28 
	~"Æloc-ã°ög.h
"

33 
_QueueE¡ry
 
	tQueueE¡ry
;

35 
	s_QueueE¡ry
 {

36 
QueueVÆue
 
	md©a
;

37 
QueueE¡ry
 *
	m¥ev
;

38 
QueueE¡ry
 *
	m√xt
;

41 
	s_Queue
 {

42 
QueueE¡ry
 *
	mhód
;

43 
QueueE¡ry
 *
	mèû
;

46 
Queue
 *
	$queue_√w
()

48 
Queue
 *
queue
;

50 
queue
 = (
Queue
 *Ë
	`mÆloc
((Queue));

52 i‡(
queue
 =
NULL
) {

53  
NULL
;

56 
queue
->
hód
 = 
NULL
;

57 
queue
->
èû
 = 
NULL
;

59  
queue
;

60 
	}
}

62 
	$queue_‰ì
(
Queue
 *
queue
)

66 !
	`queue_is_em±y
(
queue
)) {

67 
	`queue_p›_hód
(
queue
);

72 
	`‰ì
(
queue
);

73 
	}
}

75 
	$queue_push_hód
(
Queue
 *
queue
, 
QueueVÆue
 
d©a
)

77 
QueueE¡ry
 *
√w_íåy
;

81 
√w_íåy
 = 
	`mÆloc
((
QueueE¡ry
));

83 i‡(
√w_íåy
 =
NULL
) {

87 
√w_íåy
->
d©a
 = data;

88 
√w_íåy
->
¥ev
 = 
NULL
;

89 
√w_íåy
->
√xt
 = 
queue
->
hód
;

93 i‡(
queue
->
hód
 =
NULL
) {

98 
queue
->
hód
 = 
√w_íåy
;

99 
queue
->
èû
 = 
√w_íåy
;

106 
queue
->
hód
->
¥ev
 = 
√w_íåy
;

110 
queue
->
hód
 = 
√w_íåy
;

114 
	}
}

116 
QueueVÆue
 
	$queue_p›_hód
(
Queue
 *
queue
)

118 
QueueE¡ry
 *
íåy
;

119 
QueueVÆue
 
ªsu…
;

123 i‡(
	`queue_is_em±y
(
queue
)) {

124  
QUEUE_NULL
;

129 
íåy
 = 
queue
->
hód
;

130 
queue
->
hód
 = 
íåy
->
√xt
;

131 
ªsu…
 = 
íåy
->
d©a
;

133 i‡(
queue
->
hód
 =
NULL
) {

138 
queue
->
èû
 = 
NULL
;

143 
queue
->
hód
->
¥ev
 = 
NULL
;

148 
	`‰ì
(
íåy
);

150  
ªsu…
;

151 
	}
}

153 
QueueVÆue
 
	$queue_≥ek_hód
(
Queue
 *
queue
)

155 i‡(
	`queue_is_em±y
(
queue
)) {

156  
QUEUE_NULL
;

158  
queue
->
hód
->
d©a
;

160 
	}
}

162 
	$queue_push_èû
(
Queue
 *
queue
, 
QueueVÆue
 
d©a
)

164 
QueueE¡ry
 *
√w_íåy
;

168 
√w_íåy
 = 
	`mÆloc
((
QueueE¡ry
));

170 i‡(
√w_íåy
 =
NULL
) {

174 
√w_íåy
->
d©a
 = data;

175 
√w_íåy
->
¥ev
 = 
queue
->
èû
;

176 
√w_íåy
->
√xt
 = 
NULL
;

180 i‡(
queue
->
èû
 =
NULL
) {

185 
queue
->
hód
 = 
√w_íåy
;

186 
queue
->
èû
 = 
√w_íåy
;

193 
queue
->
èû
->
√xt
 = 
√w_íåy
;

197 
queue
->
èû
 = 
√w_íåy
;

201 
	}
}

203 
QueueVÆue
 
	$queue_p›_èû
(
Queue
 *
queue
)

205 
QueueE¡ry
 *
íåy
;

206 
QueueVÆue
 
ªsu…
;

210 i‡(
	`queue_is_em±y
(
queue
)) {

211  
QUEUE_NULL
;

216 
íåy
 = 
queue
->
èû
;

217 
queue
->
èû
 = 
íåy
->
¥ev
;

218 
ªsu…
 = 
íåy
->
d©a
;

220 i‡(
queue
->
èû
 =
NULL
) {

225 
queue
->
hód
 = 
NULL
;

231 
queue
->
èû
->
√xt
 = 
NULL
;

236 
	`‰ì
(
íåy
);

238  
ªsu…
;

239 
	}
}

241 
QueueVÆue
 
	$queue_≥ek_èû
(
Queue
 *
queue
)

243 i‡(
	`queue_is_em±y
(
queue
)) {

244  
QUEUE_NULL
;

246  
queue
->
èû
->
d©a
;

248 
	}
}

250 
	$queue_is_em±y
(
Queue
 *
queue
)

252  
queue
->
hód
 =
NULL
;

253 
	}
}

	@src/queue.h

41 #i‚de‡
ALGORITHM_QUEUE_H


42 
	#ALGORITHM_QUEUE_H


	)

44 #ifde‡
__˝lu•lus


52 
_Queue
 
	tQueue
;

58 *
	tQueueVÆue
;

64 
	#QUEUE_NULL
 ((*Ë0)

	)

73 
Queue
 *
queue_√w
();

81 
queue_‰ì
(
Queue
 *
queue
);

93 
queue_push_hód
(
Queue
 *
queue
, 
QueueVÆue
 
d©a
);

103 
QueueVÆue
 
queue_p›_hód
(
Queue
 *
queue
);

114 
QueueVÆue
 
queue_≥ek_hód
(
Queue
 *
queue
);

126 
queue_push_èû
(
Queue
 *
queue
, 
QueueVÆue
 
d©a
);

136 
QueueVÆue
 
queue_p›_èû
(
Queue
 *
queue
);

147 
QueueVÆue
 
queue_≥ek_èû
(
Queue
 *
queue
);

157 
queue_is_em±y
(
Queue
 *
queue
);

159 #ifde‡
__˝lu•lus


	@src/rb-tree.c

22 
	~<°dlib.h
>

24 
	~"rb-åì.h
"

28 #ifde‡
ALLOC_TESTING


29 
	~"Æloc-ã°ög.h
"

32 
	s_RBTªeNode
 {

33 
RBTªeNodeCﬁ‹
 
	mcﬁ‹
;

34 
RBTªeKey
 
	mkey
;

35 
RBTªeVÆue
 
	mvÆue
;

36 
RBTªeNode
 *
	m∑ª¡
;

37 
RBTªeNode
 *
	mchûdªn
[2];

40 
	s_RBTªe
 {

41 
RBTªeNode
 *
	mroŸ_node
;

42 
RBTªeCom∑ªFunc
 
	mcom∑ª_func
;

43 
	mnum_nodes
;

46 
RBTªeNodeSide
 
	$rb_åì_node_side
(
RBTªeNode
 *
node
)

48 i‡(
node
->
∑ª¡
->
chûdªn
[
RB_TREE_NODE_LEFT
] ==Çode) {

49  
RB_TREE_NODE_LEFT
;

51  
RB_TREE_NODE_RIGHT
;

53 
	}
}

55 
RBTªeNode
 *
	$rb_åì_node_siblög
(
RBTªeNode
 *
node
)

57 
RBTªeNodeSide
 
side
;

59 
side
 = 
	`rb_åì_node_side
(
node
);

61  
node
->
∑ª¡
->
chûdªn
[1 - 
side
];

62 
	}
}

64 
RBTªeNode
 *
	$rb_åì_node_un˛e
(
RBTªeNode
 *
node
)

66  
	`rb_åì_node_siblög
(
node
->
∑ª¡
);

67 
	}
}

71 
	$rb_åì_node_ª∂a˚
(
RBTªe
 *
åì
, 
RBTªeNode
 *
node1
,

72 
RBTªeNode
 *
node2
)

74 
side
;

78 i‡(
node2
 !
NULL
) {

79 
node2
->
∑ª¡
 = 
node1
->parent;

84 i‡(
node1
->
∑ª¡
 =
NULL
) {

85 
åì
->
roŸ_node
 = 
node2
;

87 
side
 = 
	`rb_åì_node_side
(
node1
);

88 
node1
->
∑ª¡
->
chûdªn
[
side
] = 
node2
;

90 
	}
}

114 
RBTªeNode
 *
	$rb_åì_rŸ©e
(
RBTªe
 *
åì
, 
RBTªeNode
 *
node
,

115 
RBTªeNodeSide
 
dúe˘i⁄
)

117 
RBTªeNode
 *
√w_roŸ
;

122 
√w_roŸ
 = 
node
->
chûdªn
[1-
dúe˘i⁄
];

126 
	`rb_åì_node_ª∂a˚
(
åì
, 
node
, 
√w_roŸ
);

130 
node
->
chûdªn
[1-
dúe˘i⁄
] = 
√w_roŸ
->children[direction];

131 
√w_roŸ
->
chûdªn
[
dúe˘i⁄
] = 
node
;

135 
node
->
∑ª¡
 = 
√w_roŸ
;

137 i‡(
node
->
chûdªn
[1-
dúe˘i⁄
] !
NULL
) {

138 
node
->
chûdªn
[1-
dúe˘i⁄
]->
∑ª¡
 =Çode;

141  
√w_roŸ
;

142 
	}
}

145 
RBTªe
 *
	$rb_åì_√w
(
RBTªeCom∑ªFunc
 
com∑ª_func
)

147 
RBTªe
 *
√w_åì
;

149 
√w_åì
 = 
	`mÆloc
((
RBTªe
));

151 i‡(
√w_åì
 =
NULL
) {

152  
NULL
;

155 
√w_åì
->
roŸ_node
 = 
NULL
;

156 
√w_åì
->
num_nodes
 = 0;

157 
√w_åì
->
com∑ª_func
 = compare_func;

159  
√w_åì
;

160 
	}
}

162 
	$rb_åì_‰ì_subåì
(
RBTªeNode
 *
node
)

164 i‡(
node
 !
NULL
) {

167 
	`rb_åì_‰ì_subåì
(
node
->
chûdªn
[
RB_TREE_NODE_LEFT
]);

168 
	`rb_åì_‰ì_subåì
(
node
->
chûdªn
[
RB_TREE_NODE_RIGHT
]);

172 
	`‰ì
(
node
);

174 
	}
}

176 
	$rb_åì_‰ì
(
RBTªe
 *
åì
)

180 
	`rb_åì_‰ì_subåì
(
åì
->
roŸ_node
);

184 
	`‰ì
(
åì
);

185 
	}
}

187 
rb_åì_ö£π_ˇ£1
(
RBTªe
 *
åì
, 
RBTªeNode
 *
node
);

188 
rb_åì_ö£π_ˇ£2
(
RBTªe
 *
åì
, 
RBTªeNode
 *
node
);

189 
rb_åì_ö£π_ˇ£3
(
RBTªe
 *
åì
, 
RBTªeNode
 *
node
);

190 
rb_åì_ö£π_ˇ£4
(
RBTªe
 *
åì
, 
RBTªeNode
 *
node
);

191 
rb_åì_ö£π_ˇ£5
(
RBTªe
 *
åì
, 
RBTªeNode
 *
node
);

196 
	$rb_åì_ö£π_ˇ£1
(
RBTªe
 *
åì
, 
RBTªeNode
 *
node
)

198 i‡(
node
->
∑ª¡
 =
NULL
) {

202 
node
->
cﬁ‹
 = 
RB_TREE_NODE_BLACK
;

208 
	`rb_åì_ö£π_ˇ£2
(
åì
, 
node
);

210 
	}
}

216 
	$rb_åì_ö£π_ˇ£2
(
RBTªe
 *
åì
, 
RBTªeNode
 *
node
)

221 i‡(
node
->
∑ª¡
->
cﬁ‹
 !
RB_TREE_NODE_BLACK
) {

222 
	`rb_åì_ö£π_ˇ£3
(
åì
, 
node
);

224 
	}
}

229 
	$rb_åì_ö£π_ˇ£3
(
RBTªe
 *
åì
, 
RBTªeNode
 *
node
)

231 
RBTªeNode
 *
gønd∑ª¡
;

232 
RBTªeNode
 *
un˛e
;

237 
gønd∑ª¡
 = 
node
->
∑ª¡
->parent;

238 
un˛e
 = 
	`rb_åì_node_un˛e
(
node
);

240 i‡(
un˛e
 !
NULL
 && un˛e->
cﬁ‹
 =
RB_TREE_NODE_RED
) {

242 
node
->
∑ª¡
->
cﬁ‹
 = 
RB_TREE_NODE_BLACK
;

243 
un˛e
->
cﬁ‹
 = 
RB_TREE_NODE_BLACK
;

244 
gønd∑ª¡
->
cﬁ‹
 = 
RB_TREE_NODE_RED
;

248 
	`rb_åì_ö£π_ˇ£1
(
åì
, 
gønd∑ª¡
);

251 
	`rb_åì_ö£π_ˇ£4
(
åì
, 
node
);

253 
	}
}

271 
	$rb_åì_ö£π_ˇ£4
(
RBTªe
 *
åì
, 
RBTªeNode
 *
node
)

273 
RBTªeNode
 *
√xt_node
;

274 
RBTªeNodeSide
 
side
;

282 
side
 = 
	`rb_åì_node_side
(
node
);

284 i‡(
side
 !
	`rb_åì_node_side
(
node
->
∑ª¡
)) {

289 
√xt_node
 = 
node
->
∑ª¡
;

294 
	`rb_åì_rŸ©e
(
åì
, 
node
->
∑ª¡
, 1-
side
);

296 
√xt_node
 = 
node
;

299 
	`rb_åì_ö£π_ˇ£5
(
åì
, 
√xt_node
);

300 
	}
}

317 
	$rb_åì_ö£π_ˇ£5
(
RBTªe
 *
åì
, 
RBTªeNode
 *
node
)

319 
RBTªeNode
 *
∑ª¡
;

320 
RBTªeNode
 *
gønd∑ª¡
;

321 
RBTªeNodeSide
 
side
;

323 
∑ª¡
 = 
node
->parent;

324 
gønd∑ª¡
 = 
∑ª¡
->parent;

329 
side
 = 
	`rb_åì_node_side
(
node
);

333 
	`rb_åì_rŸ©e
(
åì
, 
gønd∑ª¡
, 1-
side
);

337 
∑ª¡
->
cﬁ‹
 = 
RB_TREE_NODE_BLACK
;

338 
gønd∑ª¡
->
cﬁ‹
 = 
RB_TREE_NODE_RED
;

339 
	}
}

341 
RBTªeNode
 *
	$rb_åì_ö£π
(
RBTªe
 *
åì
, 
RBTªeKey
 
key
, 
RBTªeVÆue
 
vÆue
)

343 
RBTªeNode
 *
node
;

344 
RBTªeNode
 **
rovî
;

345 
RBTªeNode
 *
∑ª¡
;

346 
RBTªeNodeSide
 
side
;

350 
node
 = 
	`mÆloc
((
RBTªeNode
));

352 i‡(
node
 =
NULL
) {

353  
NULL
;

358 
node
->
key
 = key;

359 
node
->
vÆue
 = value;

360 
node
->
cﬁ‹
 = 
RB_TREE_NODE_RED
;

361 
node
->
chûdªn
[
RB_TREE_NODE_LEFT
] = 
NULL
;

362 
node
->
chûdªn
[
RB_TREE_NODE_RIGHT
] = 
NULL
;

366 
∑ª¡
 = 
NULL
;

367 
rovî
 = &
åì
->
roŸ_node
;

369 *
rovî
 !
NULL
) {

373 
∑ª¡
 = *
rovî
;

377 i‡(
åì
->
	`com∑ª_func
(
vÆue
, (*
rovî
)->value) < 0) {

378 
side
 = 
RB_TREE_NODE_LEFT
;

380 
side
 = 
RB_TREE_NODE_RIGHT
;

383 
rovî
 = &(*rovî)->
chûdªn
[
side
];

388 *
rovî
 = 
node
;

389 
node
->
∑ª¡
 =Öarent;

393 
	`rb_åì_ö£π_ˇ£1
(
åì
, 
node
);

397 ++
åì
->
num_nodes
;

399  
node
;

400 
	}
}

402 
RBTªeNode
 *
	$rb_åì_lookup_node
(
RBTªe
 *
åì
, 
RBTªeKey
 
key
)

404 
RBTªeNode
 *
node
;

405 
RBTªeNodeSide
 
side
;

406 
diff
;

408 
node
 = 
åì
->
roŸ_node
;

412 
node
 !
NULL
) {

413 
diff
 = 
åì
->
	`com∑ª_func
(
key
, 
node
->key);

415 i‡(
diff
 == 0) {

416  
node
;

417 } i‡(
diff
 < 0) {

418 
side
 = 
RB_TREE_NODE_LEFT
;

420 
side
 = 
RB_TREE_NODE_RIGHT
;

423 
node
 =Çode->
chûdªn
[
side
];

428  
NULL
;

429 
	}
}

431 
RBTªeVÆue
 
	$rb_åì_lookup
(
RBTªe
 *
åì
, 
RBTªeKey
 
key
)

433 
RBTªeNode
 *
node
;

437 
node
 = 
	`rb_åì_lookup_node
(
åì
, 
key
);

439 i‡(
node
 =
NULL
) {

440  
RB_TREE_NULL
;

442  
node
->
vÆue
;

444 
	}
}

446 
	$rb_åì_ªmove_node
(
RBTªe
 *
åì
, 
RBTªeNode
 *
node
)

449 
	}
}

451 
	$rb_åì_ªmove
(
RBTªe
 *
åì
, 
RBTªeKey
 
key
)

453 
RBTªeNode
 *
node
;

457 
node
 = 
	`rb_åì_lookup_node
(
åì
, 
key
);

459 i‡(
node
 =
NULL
) {

463 
	`rb_åì_ªmove_node
(
åì
, 
node
);

466 
	}
}

468 
RBTªeNode
 *
	$rb_åì_roŸ_node
(
RBTªe
 *
åì
)

470  
åì
->
roŸ_node
;

471 
	}
}

473 
RBTªeKey
 
	$rb_åì_node_key
(
RBTªeNode
 *
node
)

475  
node
->
key
;

476 
	}
}

478 
RBTªeVÆue
 
	$rb_åì_node_vÆue
(
RBTªeNode
 *
node
)

480  
node
->
vÆue
;

481 
	}
}

483 
RBTªeNode
 *
	$rb_åì_node_chûd
(
RBTªeNode
 *
node
, 
RBTªeNodeSide
 
side
)

485 i‡(
side
 =
RB_TREE_NODE_LEFT
 || sidê=
RB_TREE_NODE_RIGHT
) {

486  
node
->
chûdªn
[
side
];

488  
NULL
;

490 
	}
}

492 
RBTªeNode
 *
	$rb_åì_node_∑ª¡
(
RBTªeNode
 *
node
)

494  
node
->
∑ª¡
;

495 
	}
}

497 
RBTªeVÆue
 *
	$rb_åì_to_¨øy
(
RBTªe
 *
åì
)

500 
	}
}

502 
	$rb_åì_num_íåõs
(
RBTªe
 *
åì
)

504  
åì
->
num_nodes
;

505 
	}
}

	@src/rb-tree.h

55 #i‚de‡
ALGORITHM_RB_TREE_H


56 
	#ALGORITHM_RB_TREE_H


	)

58 #ifde‡
__˝lu•lus


68 
_RBTªe
 
	tRBTªe
;

74 *
	tRBTªeKey
;

80 *
	tRBTªeVÆue
;

86 
	#RB_TREE_NULL
 ((*Ë0)

	)

98 
_RBTªeNode
 
	tRBTªeNode
;

111 (*
RBTªeCom∑ªFunc
)(
	tRBTªeVÆue
 
	td©a1
, RBTªeVÆuê
	td©a2
);

118 
RB_TREE_NODE_RED
,

119 
RB_TREE_NODE_BLACK
,

120 } 
	tRBTªeNodeCﬁ‹
;

127 
RB_TREE_NODE_LEFT
 = 0,

128 
RB_TREE_NODE_RIGHT
 = 1

129 } 
	tRBTªeNodeSide
;

139 
RBTªe
 *
rb_åì_√w
(
RBTªeCom∑ªFunc
 
com∑ª_func
);

147 
rb_åì_‰ì
(
RBTªe
 *
åì
);

160 
RBTªeNode
 *
rb_åì_ö£π
(
RBTªe
 *
åì
, 
RBTªeKey
 
key
, 
RBTªeVÆue
 
vÆue
);

169 
rb_åì_ªmove_node
(
RBTªe
 *
åì
, 
RBTªeNode
 *
node
);

182 
rb_åì_ªmove
(
RBTªe
 *
åì
, 
RBTªeKey
 
key
);

194 
RBTªeNode
 *
rb_åì_lookup_node
(
RBTªe
 *
åì
, 
RBTªeKey
 
key
);

209 
RBTªeVÆue
 
rb_åì_lookup
(
RBTªe
 *
åì
, 
RBTªeKey
 
key
);

219 
RBTªeNode
 *
rb_åì_roŸ_node
(
RBTªe
 *
åì
);

228 
RBTªeKey
 
rb_åì_node_key
(
RBTªeNode
 *
node
);

237 
RBTªeVÆue
 
rb_åì_node_vÆue
(
RBTªeNode
 *
node
);

248 
RBTªeNode
 *
rb_åì_node_chûd
(RBTªeNodê*
node
, 
RBTªeNodeSide
 
side
);

258 
RBTªeNode
 *
rb_åì_node_∑ª¡
(RBTªeNodê*
node
);

267 
rb_åì_subåì_height
(
RBTªeNode
 *
node
);

280 
RBTªeVÆue
 *
rb_åì_to_¨øy
(
RBTªe
 *
åì
);

289 
rb_åì_num_íåõs
(
RBTªe
 *
åì
);

291 #ifde‡
__˝lu•lus


	@src/set.c

21 
	~<°dlib.h
>

22 
	~<°rög.h
>

23 
	~"£t.h
"

27 #ifde‡
ALLOC_TESTING


28 
	~"Æloc-ã°ög.h
"

33 
	s_SëE¡ry
 {

34 
SëVÆue
 
	md©a
;

35 
SëE¡ry
 *
	m√xt
;

38 
	s_Së
 {

39 
SëE¡ry
 **
	mèbÀ
;

40 
	míåõs
;

41 
	mèbÀ_size
;

42 
	m¥ime_ödex
;

43 
SëHashFunc
 
	mhash_func
;

44 
SëEquÆFunc
 
	mequÆ_func
;

45 
SëFªeFunc
 
	m‰ì_func
;

53 c⁄° 
	g£t_¥imes
[] = {

60 c⁄° 
	g£t_num_¥imes
 = (
£t_¥imes
) / ();

62 
	$£t_Æloˇã_èbÀ
(
Së
 *
£t
)

69 i‡(
£t
->
¥ime_ödex
 < 
£t_num_¥imes
) {

70 
£t
->
èbÀ_size
 = 
£t_¥imes
[£t->
¥ime_ödex
];

72 
£t
->
èbÀ_size
 = së->
íåõs
 * 10;

77 
£t
->
èbÀ
 = 
	`ˇŒoc
(£t->
èbÀ_size
, (
SëE¡ry
 *));

79  
£t
->
èbÀ
 !
NULL
;

80 
	}
}

82 
	$£t_‰ì_íåy
(
Së
 *
£t
, 
SëE¡ry
 *
íåy
)

87 i‡(
£t
->
‰ì_func
 !
NULL
) {

88 
£t
->
	`‰ì_func
(
íåy
->
d©a
);

93 
	`‰ì
(
íåy
);

94 
	}
}

96 
Së
 *
	$£t_√w
(
SëHashFunc
 
hash_func
, 
SëEquÆFunc
 
equÆ_func
)

98 
Së
 *
√w_£t
;

102 
√w_£t
 = (
Së
 *Ë
	`mÆloc
((Set));

104 i‡(
√w_£t
 =
NULL
) {

105  
NULL
;

108 
√w_£t
->
hash_func
 = hash_func;

109 
√w_£t
->
equÆ_func
 =Équal_func;

110 
√w_£t
->
íåõs
 = 0;

111 
√w_£t
->
¥ime_ödex
 = 0;

112 
√w_£t
->
‰ì_func
 = 
NULL
;

116 i‡(!
	`£t_Æloˇã_èbÀ
(
√w_£t
)) {

117 
	`‰ì
(
√w_£t
);

118  
NULL
;

121  
√w_£t
;

122 
	}
}

124 
	$£t_‰ì
(
Së
 *
£t
)

126 
SëE¡ry
 *
rovî
;

127 
SëE¡ry
 *
√xt
;

128 
i
;

132 
i
=0; i<
£t
->
èbÀ_size
; ++i) {

133 
rovî
 = 
£t
->
èbÀ
[
i
];

135 
rovî
 !
NULL
) {

136 
√xt
 = 
rovî
->next;

140 
	`£t_‰ì_íåy
(
£t
, 
rovî
);

144 
rovî
 = 
√xt
;

150 
	`‰ì
(
£t
->
èbÀ
);

154 
	`‰ì
(
£t
);

155 
	}
}

157 
	$£t_ªgi°î_‰ì_fun˘i⁄
(
Së
 *
£t
, 
SëFªeFunc
 
‰ì_func
)

159 
£t
->
‰ì_func
 = free_func;

160 
	}
}

162 
	$£t_íœrge
(
Së
 *
£t
)

164 
SëE¡ry
 *
rovî
;

165 
SëE¡ry
 *
√xt
;

166 
SëE¡ry
 **
ﬁd_èbÀ
;

167 
ﬁd_èbÀ_size
;

168 
ﬁd_¥ime_ödex
;

169 
ödex
;

170 
i
;

174 
ﬁd_èbÀ
 = 
£t
->
èbÀ
;

175 
ﬁd_èbÀ_size
 = 
£t
->
èbÀ_size
;

176 
ﬁd_¥ime_ödex
 = 
£t
->
¥ime_ödex
;

180 ++
£t
->
¥ime_ödex
;

184 i‡(!
	`£t_Æloˇã_èbÀ
(
£t
)) {

185 
£t
->
èbÀ
 = 
ﬁd_èbÀ
;

186 
£t
->
èbÀ_size
 = 
ﬁd_èbÀ_size
;

187 
£t
->
¥ime_ödex
 = 
ﬁd_¥ime_ödex
;

195 
i
=0; i<
ﬁd_èbÀ_size
; ++i) {

199 
rovî
 = 
ﬁd_èbÀ
[
i
];

201 
rovî
 !
NULL
) {

203 
√xt
 = 
rovî
->next;

207 
ödex
 = 
£t
->
	`hash_func
(
rovî
->
d©a
Ë% së->
èbÀ_size
;

208 
rovî
->
√xt
 = 
£t
->
èbÀ
[
ödex
];

209 
£t
->
èbÀ
[
ödex
] = 
rovî
;

213 
rovî
 = 
√xt
;

219 
	`‰ì
(
ﬁd_èbÀ
);

224 
	}
}

226 
	$£t_ö£π
(
Së
 *
£t
, 
SëVÆue
 
d©a
)

228 
SëE¡ry
 *
√wíåy
;

229 
SëE¡ry
 *
rovî
;

230 
ödex
;

235 i‡((
£t
->
íåõs
 * 3Ë/ së->
èbÀ_size
 > 0) {

239 i‡(!
	`£t_íœrge
(
£t
)) {

247 
ödex
 = 
£t
->
	`hash_func
(
d©a
Ë% së->
èbÀ_size
;

252 
rovî
 = 
£t
->
èbÀ
[
ödex
];

254 
rovî
 !
NULL
) {

256 i‡(
£t
->
	`equÆ_func
(
d©a
, 
rovî
->data) != 0) {

263 
rovî
 =Ñovî->
√xt
;

270 
√wíåy
 = (
SëE¡ry
 *Ë
	`mÆloc
((SetEntry));

272 i‡(
√wíåy
 =
NULL
) {

276 
√wíåy
->
d©a
 = data;

280 
√wíåy
->
√xt
 = 
£t
->
èbÀ
[
ödex
];

281 
£t
->
èbÀ
[
ödex
] = 
√wíåy
;

285 ++
£t
->
íåõs
;

290 
	}
}

292 
	$£t_ªmove
(
Së
 *
£t
, 
SëVÆue
 
d©a
)

294 
SëE¡ry
 **
rovî
;

295 
SëE¡ry
 *
íåy
;

296 
ödex
;

300 
ödex
 = 
£t
->
	`hash_func
(
d©a
Ë% së->
èbÀ_size
;

304 
rovî
 = &
£t
->
èbÀ
[
ödex
];

306 *
rovî
 !
NULL
) {

307 i‡(
£t
->
	`equÆ_func
(
d©a
, (*
rovî
)->data) != 0) {

311 
íåy
 = *
rovî
;

315 *
rovî
 = 
íåy
->
√xt
;

319 --
£t
->
íåõs
;

323 
	`£t_‰ì_íåy
(
£t
, 
íåy
);

330 
rovî
 = &((*rovî)->
√xt
);

336 
	}
}

338 
	$£t_quîy
(
Së
 *
£t
, 
SëVÆue
 
d©a
)

340 
SëE¡ry
 *
rovî
;

341 
ödex
;

345 
ödex
 = 
£t
->
	`hash_func
(
d©a
Ë% së->
èbÀ_size
;

349 
rovî
 = 
£t
->
èbÀ
[
ödex
];

351 
rovî
 !
NULL
) {

352 i‡(
£t
->
	`equÆ_func
(
d©a
, 
rovî
->data) != 0) {

361 
rovî
 =Ñovî->
√xt
;

367 
	}
}

369 
	$£t_num_íåõs
(
Së
 *
£t
)

371  
£t
->
íåõs
;

372 
	}
}

374 
SëVÆue
 *
	$£t_to_¨øy
(
Së
 *
£t
)

376 
SëVÆue
 *
¨øy
;

377 
¨øy_cou¡î
;

378 
i
;

379 
SëE¡ry
 *
rovî
;

383 
¨øy
 = 
	`mÆloc
((
SëVÆue
Ë* 
£t
->
íåõs
);

385 i‡(
¨øy
 =
NULL
) {

386  
NULL
;

389 
¨øy_cou¡î
 = 0;

393 
i
=0; i<
£t
->
èbÀ_size
; ++i) {

395 
rovî
 = 
£t
->
èbÀ
[
i
];

397 
rovî
 !
NULL
) {

401 
¨øy
[
¨øy_cou¡î
] = 
rovî
->
d©a
;

402 ++
¨øy_cou¡î
;

406 
rovî
 =Ñovî->
√xt
;

410  
¨øy
;

411 
	}
}

413 
Së
 *
	$£t_uni⁄
(
Së
 *
£t1
, Së *
£t2
)

415 
SëIãøt‹
 
ôî©‹
;

416 
Së
 *
√w_£t
;

417 
SëVÆue
 
vÆue
;

419 
√w_£t
 = 
	`£t_√w
(
£t1
->
hash_func
, së1->
equÆ_func
);

421 i‡(
√w_£t
 =
NULL
) {

422  
NULL
;

427 
	`£t_ôî©e
(
£t1
, &
ôî©‹
);

429 
	`£t_ôî_has_m‹e
(&
ôî©‹
)) {

433 
vÆue
 = 
	`£t_ôî_√xt
(&
ôî©‹
);

437 i‡(!
	`£t_ö£π
(
√w_£t
, 
vÆue
)) {

441 
	`£t_‰ì
(
√w_£t
);

442  
NULL
;

448 
	`£t_ôî©e
(
£t2
, &
ôî©‹
);

450 
	`£t_ôî_has_m‹e
(&
ôî©‹
)) {

454 
vÆue
 = 
	`£t_ôî_√xt
(&
ôî©‹
);

459 i‡(
	`£t_quîy
(
√w_£t
, 
vÆue
) == 0) {

460 i‡(!
	`£t_ö£π
(
√w_£t
, 
vÆue
)) {

464 
	`£t_‰ì
(
√w_£t
);

465  
NULL
;

470  
√w_£t
;

471 
	}
}

473 
Së
 *
	$£t_öãr£˘i⁄
(
Së
 *
£t1
, Së *
£t2
)

475 
Së
 *
√w_£t
;

476 
SëIãøt‹
 
ôî©‹
;

477 
SëVÆue
 
vÆue
;

479 
√w_£t
 = 
	`£t_√w
(
£t1
->
hash_func
, 
£t2
->
equÆ_func
);

481 i‡(
√w_£t
 =
NULL
) {

482  
NULL
;

487 
	`£t_ôî©e
(
£t1
, &
ôî©‹
);

489 
	`£t_ôî_has_m‹e
(&
ôî©‹
)) {

493 
vÆue
 = 
	`£t_ôî_√xt
(&
ôî©‹
);

498 i‡(
	`£t_quîy
(
£t2
, 
vÆue
) != 0) {

503 i‡(!
	`£t_ö£π
(
√w_£t
, 
vÆue
)) {

504 
	`£t_‰ì
(
√w_£t
);

506  
NULL
;

511  
√w_£t
;

512 
	}
}

514 
	$£t_ôî©e
(
Së
 *
£t
, 
SëIãøt‹
 *
ôî
)

516 
chaö
;

518 
ôî
->
£t
 = set;

519 
ôî
->
√xt_íåy
 = 
NULL
;

523 
chaö
 = 0; chaö < 
£t
->
èbÀ_size
; ++chain) {

527 i‡(
£t
->
èbÀ
[
chaö
] !
NULL
) {

528 
ôî
->
√xt_íåy
 = 
£t
->
èbÀ
[
chaö
];

533 
ôî
->
√xt_chaö
 = 
chaö
;

534 
	}
}

536 
SëVÆue
 
	$£t_ôî_√xt
(
SëIãøt‹
 *
ôî©‹
)

538 
Së
 *
£t
;

539 
SëVÆue
 
ªsu…
;

540 
SëE¡ry
 *
cuºít_íåy
;

541 
chaö
;

543 
£t
 = 
ôî©‹
->set;

547 i‡(
ôî©‹
->
√xt_íåy
 =
NULL
) {

548  
SET_NULL
;

553 
cuºít_íåy
 = 
ôî©‹
->
√xt_íåy
;

554 
ªsu…
 = 
cuºít_íåy
->
d©a
;

558 i‡(
cuºít_íåy
->
√xt
 !
NULL
) {

562 
ôî©‹
->
√xt_íåy
 = 
cuºít_íåy
->
√xt
;

568 
ôî©‹
->
√xt_íåy
 = 
NULL
;

572 
chaö
 = 
ôî©‹
->
√xt_chaö
 + 1;

574 
chaö
 < 
£t
->
èbÀ_size
) {

578 i‡(
£t
->
èbÀ
[
chaö
] !
NULL
) {

582 
ôî©‹
->
√xt_íåy
 = 
£t
->
èbÀ
[
chaö
];

589 ++
chaö
;

592 
ôî©‹
->
√xt_chaö
 = 
chaö
;

595  
ªsu…
;

596 
	}
}

598 
	$£t_ôî_has_m‹e
(
SëIãøt‹
 *
ôî©‹
)

600  
ôî©‹
->
√xt_íåy
 !
NULL
;

601 
	}
}

	@src/set.h

47 #i‚de‡
ALGORITHM_SET_H


48 
	#ALGORITHM_SET_H


	)

50 #ifde‡
__˝lu•lus


59 
_Së
 
	tSë
;

67 
_SëIãøt‹
 
	tSëIãøt‹
;

73 
_SëE¡ry
 
	tSëE¡ry
;

79 *
	tSëVÆue
;

85 
	s_SëIãøt‹
 {

86 
Së
 *
£t
;

87 
SëE¡ry
 *
√xt_íåy
;

88 
√xt_chaö
;

95 
	#SET_NULL
 ((*Ë0)

	)

101 (*
	tSëHashFunc
)(
	tSëVÆue
 
	tvÆue
);

108 (*
SëEquÆFunc
)(
	tSëVÆue
 
	tvÆue1
, SëVÆuê
	tvÆue2
);

115 (*
SëFªeFunc
)(
	tSëVÆue
 
	tvÆue
);

127 
Së
 *
£t_√w
(
SëHashFunc
 
hash_func
, 
SëEquÆFunc
 
equÆ_func
);

135 
£t_‰ì
(
Së
 *
£t
);

146 
£t_ªgi°î_‰ì_fun˘i⁄
(
Së
 *
£t
, 
SëFªeFunc
 
‰ì_func
);

159 
£t_ö£π
(
Së
 *
£t
, 
SëVÆue
 
d©a
);

171 
£t_ªmove
(
Së
 *
£t
, 
SëVÆue
 
d©a
);

182 
£t_quîy
(
Së
 *
£t
, 
SëVÆue
 
d©a
);

191 
£t_num_íåõs
(
Së
 *
£t
);

202 
SëVÆue
 *
£t_to_¨øy
(
Së
 *
£t
);

214 
Së
 *
£t_uni⁄
(Së *
£t1
, Së *
£t2
);

226 
Së
 *
£t_öãr£˘i⁄
(Së *
£t1
, Së *
£t2
);

236 
£t_ôî©e
(
Së
 *
£t
, 
SëIãøt‹
 *
ôî
);

247 
£t_ôî_has_m‹e
(
SëIãøt‹
 *
ôî©‹
);

257 
SëVÆue
 
£t_ôî_√xt
(
SëIãøt‹
 *
ôî©‹
);

259 #ifde‡
__˝lu•lus


	@src/slist.c

21 
	~<°dlib.h
>

23 
	~"¶i°.h
"

27 #ifde‡
ALLOC_TESTING


28 
	~"Æloc-ã°ög.h
"

33 
	s_SLi°E¡ry
 {

34 
SLi°VÆue
 
	md©a
;

35 
SLi°E¡ry
 *
	m√xt
;

38 
	$¶i°_‰ì
(
SLi°E¡ry
 *
li°
)

40 
SLi°E¡ry
 *
íåy
;

45 
íåy
 = 
li°
;

47 
íåy
 !
NULL
) {

48 
SLi°E¡ry
 *
√xt
;

50 
√xt
 = 
íåy
->next;

52 
	`‰ì
(
íåy
);

54 
íåy
 = 
√xt
;

56 
	}
}

58 
SLi°E¡ry
 *
	$¶i°_¥ïíd
(
SLi°E¡ry
 **
li°
, 
SLi°VÆue
 
d©a
)

60 
SLi°E¡ry
 *
√wíåy
;

64 
√wíåy
 = 
	`mÆloc
((
SLi°E¡ry
));

66 i‡(
√wíåy
 =
NULL
) {

67  
NULL
;

70 
√wíåy
->
d©a
 = data;

74 
√wíåy
->
√xt
 = *
li°
;

75 *
li°
 = 
√wíåy
;

77  
√wíåy
;

78 
	}
}

80 
SLi°E¡ry
 *
	$¶i°_≠≥nd
(
SLi°E¡ry
 **
li°
, 
SLi°VÆue
 
d©a
)

82 
SLi°E¡ry
 *
rovî
;

83 
SLi°E¡ry
 *
√wíåy
;

87 
√wíåy
 = 
	`mÆloc
((
SLi°E¡ry
));

89 i‡(
√wíåy
 =
NULL
) {

90  
NULL
;

93 
√wíåy
->
d©a
 = data;

94 
√wíåy
->
√xt
 = 
NULL
;

98 i‡(*
li°
 =
NULL
) {

102 *
li°
 = 
√wíåy
;

108 
rovî
=*
li°
;Ñovî->
√xt
 !
NULL
;Ñover =Ñover->next);

112 
rovî
->
√xt
 = 
√wíåy
;

115  
√wíåy
;

116 
	}
}

118 
SLi°VÆue
 
	$¶i°_d©a
(
SLi°E¡ry
 *
li°íåy
)

120  
li°íåy
->
d©a
;

121 
	}
}

123 
SLi°E¡ry
 *
	$¶i°_√xt
(
SLi°E¡ry
 *
li°íåy
)

125  
li°íåy
->
√xt
;

126 
	}
}

128 
SLi°E¡ry
 *
	$¶i°_¡h_íåy
(
SLi°E¡ry
 *
li°
, 
n
)

130 
SLi°E¡ry
 *
íåy
;

131 
i
;

135 i‡(
n
 < 0) {

136  
NULL
;

142 
íåy
 = 
li°
;

144 
i
=0; i<
n
; ++i) {

146 i‡(
íåy
 =
NULL
) {

147  
NULL
;

149 
íåy
 =É¡ry->
√xt
;

152  
íåy
;

153 
	}
}

155 
SLi°VÆue
 
	$¶i°_¡h_d©a
(
SLi°E¡ry
 *
li°
, 
n
)

157 
SLi°E¡ry
 *
íåy
;

161 
íåy
 = 
	`¶i°_¡h_íåy
(
li°
, 
n
);

165 i‡(
íåy
 =
NULL
) {

166  
SLIST_NULL
;

168  
íåy
->
d©a
;

170 
	}
}

172 
	$¶i°_Àngth
(
SLi°E¡ry
 *
li°
)

174 
SLi°E¡ry
 *
íåy
;

175 
Àngth
;

177 
Àngth
 = 0;

178 
íåy
 = 
li°
;

180 
íåy
 !
NULL
) {

184 ++
Àngth
;

186 
íåy
 =É¡ry->
√xt
;

189  
Àngth
;

190 
	}
}

192 
SLi°VÆue
 *
	$¶i°_to_¨øy
(
SLi°E¡ry
 *
li°
)

194 
SLi°E¡ry
 *
rovî
;

195 
SLi°VÆue
 *
¨øy
;

196 
Àngth
;

197 
i
;

201 
Àngth
 = 
	`¶i°_Àngth
(
li°
);

203 
¨øy
 = 
	`mÆloc
((
SLi°VÆue
Ë* 
Àngth
);

205 i‡(
¨øy
 =
NULL
) {

206  
NULL
;

211 
rovî
 = 
li°
;

213 
i
=0; i<
Àngth
; ++i) {

217 
¨øy
[
i
] = 
rovî
->
d©a
;

221 
rovî
 =Ñovî->
√xt
;

224  
¨øy
;

225 
	}
}

227 
	$¶i°_ªmove_íåy
(
SLi°E¡ry
 **
li°
, SLi°E¡ry *
íåy
)

229 
SLi°E¡ry
 *
rovî
;

233 i‡(*
li°
 =
NULL
 || 
íåy
 == NULL) {

239 i‡(*
li°
 =
íåy
) {

243 *
li°
 = 
íåy
->
√xt
;

249 
rovî
 = *
li°
;

251 
rovî
 !
NULL
 &&Ñovî->
√xt
 !
íåy
) {

252 
rovî
 =Ñovî->
√xt
;

255 i‡(
rovî
 =
NULL
) {

266 
rovî
->
√xt
 = 
íåy
->next;

272 
	`‰ì
(
íåy
);

277 
	}
}

279 
	$¶i°_ªmove_d©a
(
SLi°E¡ry
 **
li°
, 
SLi°EquÆFunc
 
ˇŒback
,

280 
SLi°VÆue
 
d©a
)

282 
SLi°E¡ry
 **
rovî
;

283 
SLi°E¡ry
 *
√xt
;

284 
íåõs_ªmoved
;

286 
íåõs_ªmoved
 = 0;

292 
rovî
 = 
li°
;

294 *
rovî
 !
NULL
) {

298 i‡(
	`ˇŒback
((*
rovî
)->
d©a
, data) != 0) {

302 
√xt
 = (*
rovî
)->next;

303 
	`‰ì
(*
rovî
);

304 *
rovî
 = 
√xt
;

308 ++
íåõs_ªmoved
;

313 
rovî
 = &((*rovî)->
√xt
);

317  
íåõs_ªmoved
;

318 
	}
}

323 
SLi°E¡ry
 *
	$¶i°_s‹t_öã∫Æ
(
SLi°E¡ry
 **
li°
,

324 
SLi°Com∑ªFunc
 
com∑ª_func
)

326 
SLi°E¡ry
 *
pivŸ
;

327 
SLi°E¡ry
 *
rovî
;

328 
SLi°E¡ry
 *
Àss_li°
, *
m‹e_li°
;

329 
SLi°E¡ry
 *
Àss_li°_íd
, *
m‹e_li°_íd
;

334 i‡(*
li°
 =
NULL
 || (*li°)->
√xt
 == NULL) {

335  *
li°
;

340 
pivŸ
 = *
li°
;

346 
Àss_li°
 = 
NULL
;

347 
m‹e_li°
 = 
NULL
;

348 
rovî
 = (*
li°
)->
√xt
;

350 
rovî
 !
NULL
) {

351 
SLi°E¡ry
 *
√xt
 = 
rovî
->next;

353 i‡(
	`com∑ª_func
(
rovî
->
d©a
, 
pivŸ
->data) < 0) {

357 
rovî
->
√xt
 = 
Àss_li°
;

358 
Àss_li°
 = 
rovî
;

364 
rovî
->
√xt
 = 
m‹e_li°
;

365 
m‹e_li°
 = 
rovî
;

369 
rovî
 = 
√xt
;

374 
Àss_li°_íd
 = 
	`¶i°_s‹t_öã∫Æ
(&
Àss_li°
, 
com∑ª_func
);

375 
m‹e_li°_íd
 = 
	`¶i°_s‹t_öã∫Æ
(&
m‹e_li°
, 
com∑ª_func
);

379 *
li°
 = 
Àss_li°
;

384 i‡(
Àss_li°
 =
NULL
) {

385 *
li°
 = 
pivŸ
;

387 
Àss_li°_íd
->
√xt
 = 
pivŸ
;

392 
pivŸ
->
√xt
 = 
m‹e_li°
;

398 i‡(
m‹e_li°
 =
NULL
) {

399  
pivŸ
;

401  
m‹e_li°_íd
;

403 
	}
}

405 
	$¶i°_s‹t
(
SLi°E¡ry
 **
li°
, 
SLi°Com∑ªFunc
 
com∑ª_func
)

407 
	`¶i°_s‹t_öã∫Æ
(
li°
, 
com∑ª_func
);

408 
	}
}

410 
SLi°E¡ry
 *
	$¶i°_föd_d©a
(
SLi°E¡ry
 *
li°
,

411 
SLi°EquÆFunc
 
ˇŒback
,

412 
SLi°VÆue
 
d©a
)

414 
SLi°E¡ry
 *
rovî
;

418 
rovî
=
li°
;Ñovî !
NULL
;ÑovîÙovî->
√xt
) {

419 i‡(
	`ˇŒback
(
rovî
->
d©a
, data) != 0) {

420  
rovî
;

426  
NULL
;

427 
	}
}

429 
	$¶i°_ôî©e
(
SLi°E¡ry
 **
li°
, 
SLi°Iãøt‹
 *
ôî
)

433 
ôî
->
¥ev_√xt
 = 
li°
;

437 
ôî
->
cuºít
 = 
NULL
;

438 
	}
}

440 
	$¶i°_ôî_has_m‹e
(
SLi°Iãøt‹
 *
ôî
)

442 i‡(
ôî
->
cuºít
 =
NULL
 || iãr->cuºíà!*ôî->
¥ev_√xt
) {

449  *
ôî
->
¥ev_√xt
 !
NULL
;

456  
ôî
->
cuºít
->
√xt
 !
NULL
;

458 
	}
}

460 
SLi°VÆue
 
	$¶i°_ôî_√xt
(
SLi°Iãøt‹
 *
ôî
)

462 i‡(
ôî
->
cuºít
 =
NULL
 || iãr->cuºíà!*ôî->
¥ev_√xt
) {

468 
ôî
->
cuºít
 = *ôî->
¥ev_√xt
;

475 
ôî
->
¥ev_√xt
 = &ôî->
cuºít
->
√xt
;

476 
ôî
->
cuºít
 = iãr->cuºít->
√xt
;

481 i‡(
ôî
->
cuºít
 =
NULL
) {

482  
SLIST_NULL
;

484  
ôî
->
cuºít
->
d©a
;

486 
	}
}

488 
	$¶i°_ôî_ªmove
(
SLi°Iãøt‹
 *
ôî
)

490 i‡(
ôî
->
cuºít
 =
NULL
 || iãr->cuºíà!*ôî->
¥ev_√xt
) {

500 *
ôî
->
¥ev_√xt
 = iãr->
cuºít
->
√xt
;

501 
	`‰ì
(
ôî
->
cuºít
);

502 
ôî
->
cuºít
 = 
NULL
;

504 
	}
}

	@src/slist.h

66 #i‚de‡
ALGORITHM_SLIST_H


67 
	#ALGORITHM_SLIST_H


	)

69 #ifde‡
__˝lu•lus


80 
_SLi°E¡ry
 
	tSLi°E¡ry
;

86 
_SLi°Iãøt‹
 
	tSLi°Iãøt‹
;

92 *
	tSLi°VÆue
;

98 
	s_SLi°Iãøt‹
 {

99 
SLi°E¡ry
 **
¥ev_√xt
;

100 
SLi°E¡ry
 *
cuºít
;

107 
	#SLIST_NULL
 ((*Ë0)

	)

117 (*
SLi°Com∑ªFunc
)(
	tSLi°VÆue
 
	tvÆue1
, SLi°VÆuê
	tvÆue2
);

127 (*
SLi°EquÆFunc
)(
	tSLi°VÆue
 
	tvÆue1
, SLi°VÆuê
	tvÆue2
);

135 
¶i°_‰ì
(
SLi°E¡ry
 *
li°
);

146 
SLi°E¡ry
 *
¶i°_¥ïíd
(SLi°E¡ry **
li°
, 
SLi°VÆue
 
d©a
);

157 
SLi°E¡ry
 *
¶i°_≠≥nd
(SLi°E¡ry **
li°
, 
SLi°VÆue
 
d©a
);

166 
SLi°E¡ry
 *
¶i°_√xt
(SLi°E¡ry *
li°íåy
);

175 
SLi°VÆue
 
¶i°_d©a
(
SLi°E¡ry
 *
li°íåy
);

185 
SLi°E¡ry
 *
¶i°_¡h_íåy
(SLi°E¡ry *
li°
, 
n
);

196 
SLi°VÆue
 
¶i°_¡h_d©a
(
SLi°E¡ry
 *
li°
, 
n
);

205 
¶i°_Àngth
(
SLi°E¡ry
 *
li°
);

217 
SLi°VÆue
 *
¶i°_to_¨øy
(
SLi°E¡ry
 *
li°
);

228 
¶i°_ªmove_íåy
(
SLi°E¡ry
 **
li°
, SLi°E¡ry *
íåy
);

240 
¶i°_ªmove_d©a
(
SLi°E¡ry
 **
li°
,

241 
SLi°EquÆFunc
 
ˇŒback
,

242 
SLi°VÆue
 
d©a
);

251 
¶i°_s‹t
(
SLi°E¡ry
 **
li°
, 
SLi°Com∑ªFunc
 
com∑ª_func
);

265 
SLi°E¡ry
 *
¶i°_föd_d©a
(SLi°E¡ry *
li°
,

266 
SLi°EquÆFunc
 
ˇŒback
,

267 
SLi°VÆue
 
d©a
);

277 
¶i°_ôî©e
(
SLi°E¡ry
 **
li°
, 
SLi°Iãøt‹
 *
ôî
);

288 
¶i°_ôî_has_m‹e
(
SLi°Iãøt‹
 *
ôî©‹
);

298 
SLi°VÆue
 
¶i°_ôî_√xt
(
SLi°Iãøt‹
 *
ôî©‹
);

307 
¶i°_ôî_ªmove
(
SLi°Iãøt‹
 *
ôî©‹
);

309 #ifde‡
__˝lu•lus


	@src/trie.c

23 
	~<°dlib.h
>

24 
	~<°rög.h
>

26 
	~"åõ.h
"

30 #ifde‡
ALLOC_TESTING


31 
	~"Æloc-ã°ög.h
"

34 
_TrõNode
 
	tTrõNode
;

36 
	s_TrõNode
 {

37 
TrõVÆue
 
	md©a
;

38 
	mu£_cou¡
;

39 
TrõNode
 *
	m√xt
[256];

42 
	s_Trõ
 {

43 
TrõNode
 *
	mroŸ_node
;

46 
Trõ
 *
	$åõ_√w
()

48 
Trõ
 *
√w_åõ
;

50 
√w_åõ
 = (
Trõ
 *Ë
	`mÆloc
((Trie));

52 i‡(
√w_åõ
 =
NULL
) {

53  
NULL
;

56 
√w_åõ
->
roŸ_node
 = 
NULL
;

58  
√w_åõ
;

59 
	}
}

61 
	$åõ_‰ì_li°_push
(
TrõNode
 **
li°
, TrõNodê*
node
)

63 
node
->
d©a
 = *
li°
;

64 *
li°
 = 
node
;

65 
	}
}

67 
TrõNode
 *
	$åõ_‰ì_li°_p›
(
TrõNode
 **
li°
)

69 
TrõNode
 *
ªsu…
;

71 
ªsu…
 = *
li°
;

72 *
li°
 = 
ªsu…
->
d©a
;

74  
ªsu…
;

75 
	}
}

77 
	$åõ_‰ì
(
Trõ
 *
åõ
)

79 
TrõNode
 *
‰ì_li°
;

80 
TrõNode
 *
node
;

81 
i
;

83 
‰ì_li°
 = 
NULL
;

87 i‡(
åõ
->
roŸ_node
 !
NULL
) {

88 
	`åõ_‰ì_li°_push
(&
‰ì_li°
, 
åõ
->
roŸ_node
);

95 
‰ì_li°
 !
NULL
) {

96 
node
 = 
	`åõ_‰ì_li°_p›
(&
‰ì_li°
);

100 
i
=0; i<256; ++i) {

101 i‡(
node
->
√xt
[
i
] !
NULL
) {

102 
	`åõ_‰ì_li°_push
(&
‰ì_li°
, 
node
->
√xt
[
i
]);

108 
	`‰ì
(
node
);

113 
	`‰ì
(
åõ
);

114 
	}
}

116 
TrõNode
 *
	$åõ_föd_íd
(
Trõ
 *
åõ
, *
key
)

118 
TrõNode
 *
node
;

119 *
p
;

123 
node
 = 
åõ
->
roŸ_node
;

125 
p
=
key
; *p != '\0'; ++p) {

127 i‡(
node
 =
NULL
) {

130  
NULL
;

135 
node
 =Çode->
√xt
[(Ë*
p
];

140  
node
;

141 
	}
}

143 
TrõNode
 *
	$åõ_föd_íd_bö¨y
(
Trõ
 *
åõ
, *
key
,

144 
key_Àngth
)

146 
TrõNode
 *
node
;

147 
j
;

148 
c
;

152 
node
 = 
åõ
->
roŸ_node
;

154 
j
=0; j<
key_Àngth
; j++) {

156 i‡(
node
 =
NULL
) {

158  
NULL
;

161 
c
 = (Ë
key
[
j
];

165 
node
 =Çode->
√xt
[
c
];

170  
node
;

171 
	}
}

175 
	$åõ_ö£π_rﬁlback
(
Trõ
 *
åõ
, *
key
)

177 
TrõNode
 *
node
;

178 
TrõNode
 **
¥ev_±r
;

179 
TrõNode
 *
√xt_node
;

180 
TrõNode
 **
√xt_¥ev_±r
;

181 *
p
;

188 
node
 = 
åõ
->
roŸ_node
;

189 
¥ev_±r
 = &
åõ
->
roŸ_node
;

190 
p
 = 
key
;

192 
node
 !
NULL
) {

196 
√xt_¥ev_±r
 = &
node
->
√xt
[(Ë*
p
];

197 
√xt_node
 = *
√xt_¥ev_±r
;

198 ++
p
;

203 --
node
->
u£_cou¡
;

205 i‡(
node
->
u£_cou¡
 == 0) {

206 
	`‰ì
(
node
);

208 i‡(
¥ev_±r
 !
NULL
) {

209 *
¥ev_±r
 = 
NULL
;

212 
√xt_¥ev_±r
 = 
NULL
;

217 
node
 = 
√xt_node
;

218 
¥ev_±r
 = 
√xt_¥ev_±r
;

220 
	}
}

222 
	$åõ_ö£π
(
Trõ
 *
åõ
, *
key
, 
TrõVÆue
 
vÆue
)

224 
TrõNode
 **
rovî
;

225 
TrõNode
 *
node
;

226 *
p
;

227 
c
;

231 i‡(
vÆue
 =
TRIE_NULL
) {

237 
node
 = 
	`åõ_föd_íd
(
åõ
, 
key
);

242 i‡(
node
 !
NULL
 &&Çode->
d©a
 !
TRIE_NULL
) {

243 
node
->
d©a
 = 
vÆue
;

250 
rovî
 = &
åõ
->
roŸ_node
;

251 
p
 = 
key
;

255 
node
 = *
rovî
;

257 i‡(
node
 =
NULL
) {

261 
node
 = (
TrõNode
 *Ë
	`ˇŒoc
(1, (TrieNode));

263 i‡(
node
 =
NULL
) {

268 
	`åõ_ö£π_rﬁlback
(
åõ
, (*Ë
key
);

273 
node
->
d©a
 = 
TRIE_NULL
;

277 *
rovî
 = 
node
;

282 ++
node
->
u£_cou¡
;

286 
c
 = (Ë*
p
;

290 i‡(
c
 == '\0') {

294 
node
->
d©a
 = 
vÆue
;

301 
rovî
 = &
node
->
√xt
[
c
];

302 ++
p
;

306 
	}
}

309 
	$åõ_ö£π_bö¨y
(
Trõ
 *
åõ
, *
key
, 
key_Àngth
,

310 
TrõVÆue
 
vÆue
)

312 
TrõNode
 **
rovî
;

313 
TrõNode
 *
node
;

314 
p
,
c
;

318 i‡(
vÆue
 =
TRIE_NULL
) {

324 
node
 = 
	`åõ_föd_íd_bö¨y
(
åõ
, 
key
, 
key_Àngth
);

329 i‡(
node
 !
NULL
 &&Çode->
d©a
 !
TRIE_NULL
) {

330 
node
->
d©a
 = 
vÆue
;

337 
rovî
 = &
åõ
->
roŸ_node
;

338 
p
 = 0;

342 
node
 = *
rovî
;

344 i‡(
node
 =
NULL
) {

348 
node
 = (
TrõNode
 *Ë
	`ˇŒoc
(1, (TrieNode));

350 i‡(
node
 =
NULL
) {

355 
	`åõ_ö£π_rﬁlback
(
åõ
, 
key
);

360 
node
->
d©a
 = 
TRIE_NULL
;

364 *
rovî
 = 
node
;

369 ++
node
->
u£_cou¡
;

373 
c
 = (Ë
key
[
p
];

377 i‡(
p
 =
key_Àngth
) {

381 
node
->
d©a
 = 
vÆue
;

388 
rovî
 = &
node
->
√xt
[
c
];

389 ++
p
;

393 
	}
}

395 
	$åõ_ªmove_bö¨y
(
Trõ
 *
åõ
, *
key
, 
key_Àngth
)

397 
TrõNode
 *
node
;

398 
TrõNode
 *
√xt
;

399 
TrõNode
 **
œ°_√xt_±r
;

400 
p
, 
c
;

404 
node
 = 
	`åõ_föd_íd_bö¨y
(
åõ
, 
key
, 
key_Àngth
);

406 i‡(
node
 !
NULL
 &&Çode->
d©a
 !
TRIE_NULL
) {

407 
node
->
d©a
 = 
TRIE_NULL
;

415 
node
 = 
åõ
->
roŸ_node
;

416 
œ°_√xt_±r
 = &
åõ
->
roŸ_node
;

417 
p
 = 0;

422 
c
 = (Ë
key
[
p
];

423 
√xt
 = 
node
->√xt[
c
];

427 --
node
->
u£_cou¡
;

429 i‡(
node
->
u£_cou¡
 <= 0) {

430 
	`‰ì
(
node
);

438 i‡(
œ°_√xt_±r
 !
NULL
) {

439 *
œ°_√xt_±r
 = 
NULL
;

440 
œ°_√xt_±r
 = 
NULL
;

445 i‡(
p
 =
key_Àngth
) {

448 ++
p
;

455 i‡(
œ°_√xt_±r
 !
NULL
) {

456 
œ°_√xt_±r
 = &
node
->
√xt
[
c
];

461 
node
 = 
√xt
;

467 
	}
}

469 
	$åõ_ªmove
(
Trõ
 *
åõ
, *
key
)

471 
TrõNode
 *
node
;

472 
TrõNode
 *
√xt
;

473 
TrõNode
 **
œ°_√xt_±r
;

474 *
p
;

475 
c
;

479 
node
 = 
	`åõ_föd_íd
(
åõ
, 
key
);

481 i‡(
node
 !
NULL
 &&Çode->
d©a
 !
TRIE_NULL
) {

482 
node
->
d©a
 = 
TRIE_NULL
;

490 
node
 = 
åõ
->
roŸ_node
;

491 
œ°_√xt_±r
 = &
åõ
->
roŸ_node
;

492 
p
 = 
key
;

498 
c
 = (Ë*
p
;

499 
√xt
 = 
node
->√xt[
c
];

503 --
node
->
u£_cou¡
;

505 i‡(
node
->
u£_cou¡
 <= 0) {

506 
	`‰ì
(
node
);

514 i‡(
œ°_√xt_±r
 !
NULL
) {

515 *
œ°_√xt_±r
 = 
NULL
;

516 
œ°_√xt_±r
 = 
NULL
;

522 i‡(
c
 == '\0') {

525 ++
p
;

532 i‡(
œ°_√xt_±r
 !
NULL
) {

533 
œ°_√xt_±r
 = &
node
->
√xt
[
c
];

538 
node
 = 
√xt
;

544 
	}
}

546 
TrõVÆue
 
	$åõ_lookup
(
Trõ
 *
åõ
, *
key
)

548 
TrõNode
 *
node
;

550 
node
 = 
	`åõ_föd_íd
(
åõ
, 
key
);

552 i‡(
node
 !
NULL
) {

553  
node
->
d©a
;

555  
TRIE_NULL
;

557 
	}
}

559 
TrõVÆue
 
	$åõ_lookup_bö¨y
(
Trõ
 *
åõ
, *
key
, 
key_Àngth
)

561 
TrõNode
 *
node
;

563 
node
 = 
	`åõ_föd_íd_bö¨y
(
åõ
, 
key
, 
key_Àngth
);

565 i‡(
node
 !
NULL
) {

566  
node
->
d©a
;

568  
TRIE_NULL
;

570 
	}
}

572 
	$åõ_num_íåõs
(
Trõ
 *
åõ
)

577 i‡(
åõ
->
roŸ_node
 =
NULL
) {

580  
åõ
->
roŸ_node
->
u£_cou¡
;

582 
	}
}

	@src/trie.h

40 #i‚de‡
ALGORITHM_TRIE_H


41 
	#ALGORITHM_TRIE_H


	)

43 #ifde‡
__˝lu•lus


51 
_Trõ
 
	tTrõ
;

57 *
	tTrõVÆue
;

63 
	#TRIE_NULL
 ((*Ë0)

	)

73 
Trõ
 *
åõ_√w
();

81 
åõ_‰ì
(
Trõ
 *
åõ
);

95 
åõ_ö£π
(
Trõ
 *
åõ
, *
key
, 
TrõVÆue
 
vÆue
);

110 
åõ_ö£π_bö¨y
(
Trõ
 *
åõ
, *
key
,

111 
key_Àngth
, 
TrõVÆue
 
vÆue
);

124 
TrõVÆue
 
åõ_lookup
(
Trõ
 *
åõ
, *
key
);

138 
TrõVÆue
 
åõ_lookup_bö¨y
(
Trõ
 *
åõ
, *
key
, 
key_Àngth
);

151 
åõ_ªmove
(
Trõ
 *
åõ
, *
key
);

165 
åõ_ªmove_bö¨y
(
Trõ
 *
åõ
, *
key
, 
key_Àngth
);

174 
åõ_num_íåõs
(
Trõ
 *
åõ
);

176 #ifde‡
__˝lu•lus


	@test/alloc-testing.c

21 
	~<°dio.h
>

22 
	~<°dlib.h
>

23 
	~<°rög.h
>

25 
	~<as£π.h
>

27 
	#ALLOC_TESTING_C


	)

29 
	~"Æloc-ã°ög.h
"

33 
	#ALLOC_TEST_MAGIC
 0x72ec82d2

	)

39 
	#MALLOC_PATTERN
 0xBAADF00D

	)

44 
	#FREE_PATTERN
 0xDEADBEEF

	)

51 
_BlockHódî
 
	tBlockHódî
;

53 
	s_BlockHódî
 {

54 
	mmagic_numbî
;

55 
size_t
 
	mbyãs
;

60 
size_t
 
	gÆloˇãd_byãs
 = 0;

66 sig√d 
	gÆloˇti⁄_limô
 = -1;

70 
BlockHódî
 *
	$Æloc_ã°_gë_hódî
(*
±r
)

72 
BlockHódî
 *
ªsu…
;

76 
ªsu…
 = ((
BlockHódî
 *Ë
±r
) - 1;

78 
	`as£π
(
ªsu…
->
magic_numbî
 =
ALLOC_TEST_MAGIC
);

80  
ªsu…
;

81 
	}
}

85 
	$Æloc_ã°_ovîwrôe
(*
±r
, 
size_t
 
Àngth
, 
∑âîn
)

87 *
byã_±r
;

88 
∑âîn_£q
;

89 
b
;

90 
size_t
 
i
;

92 
byã_±r
 = 
±r
;

94 
i
=0; i<
Àngth
; ++i) {

95 
∑âîn_£q
 = (Ë(
i
 & 3);

96 
b
 = (Ë((
∑âîn
 >> (8 * 
∑âîn_£q
)) & 0xff);

97 
byã_±r
[
i
] = 
b
;

99 
	}
}

103 *
	$Æloc_ã°_mÆloc
(
size_t
 
byãs
)

105 
BlockHódî
 *
hódî
;

106 *
±r
;

110 i‡(
Æloˇti⁄_limô
 == 0) {

111  
NULL
;

117 
hódî
 = 
	`mÆloc
((
BlockHódî
Ë+ 
byãs
);

119 i‡(
hódî
 =
NULL
) {

120  
NULL
;

123 
hódî
->
magic_numbî
 = 
ALLOC_TEST_MAGIC
;

124 
hódî
->
byãs
 = bytes;

129 
±r
 = 
hódî
 + 1;

130 
	`Æloc_ã°_ovîwrôe
(
±r
, 
byãs
, 
MALLOC_PATTERN
);

134 
Æloˇãd_byãs
 +
byãs
;

138 i‡(
Æloˇti⁄_limô
 > 0) {

139 --
Æloˇti⁄_limô
;

144  
hódî
 + 1;

145 
	}
}

149 
	$Æloc_ã°_‰ì
(*
±r
)

151 
BlockHódî
 *
hódî
;

152 
size_t
 
block_size
;

156 i‡(
±r
 =
NULL
) {

162 
hódî
 = 
	`Æloc_ã°_gë_hódî
(
±r
);

163 
block_size
 = 
hódî
->
byãs
;

164 
	`as£π
(
Æloˇãd_byãs
 >
block_size
);

169 
	`Æloc_ã°_ovîwrôe
(
±r
, 
hódî
->
byãs
, 
FREE_PATTERN
);

174 
hódî
->
magic_numbî
 = 0;

178 
	`‰ì
(
hódî
);

182 
Æloˇãd_byãs
 -
block_size
;

183 
	}
}

185 *
	$Æloc_ã°_ªÆloc
(*
±r
, 
size_t
 
byãs
)

187 
BlockHódî
 *
hódî
;

188 *
√w_±r
;

189 
size_t
 
byãs_to_c›y
;

193 
√w_±r
 = 
	`Æloc_ã°_mÆloc
(
byãs
);

195 i‡(
√w_±r
 =
NULL
) {

196  
NULL
;

201 i‡(
±r
 !
NULL
) {

202 
hódî
 = 
	`Æloc_ã°_gë_hódî
(
±r
);

204 
byãs_to_c›y
 = 
hódî
->
byãs
;

206 i‡(
byãs_to_c›y
 > 
byãs
) {

207 
byãs_to_c›y
 = 
byãs
;

210 
	`mem˝y
(
√w_±r
, 
±r
, 
byãs_to_c›y
);

212 
	`Æloc_ã°_‰ì
(
±r
);

215  
√w_±r
;

216 
	}
}

218 *
	$Æloc_ã°_ˇŒoc
(
size_t
 
nmemb
, size_à
byãs
)

220 *
ªsu…
;

221 
size_t
 
tŸÆ_byãs
 = 
nmemb
 * 
byãs
;

225 
ªsu…
 = 
	`Æloc_ã°_mÆloc
(
tŸÆ_byãs
);

227 i‡(
ªsu…
 =
NULL
) {

228  
NULL
;

233 
	`mem£t
(
ªsu…
, 0, 
tŸÆ_byãs
);

235  
ªsu…
;

236 
	}
}

238 *
	$Æloc_ã°_°rdup
(c⁄° *
°rög
)

240 *
ªsu…
;

242 
ªsu…
 = 
	`Æloc_ã°_mÆloc
(
	`°æí
(
°rög
) + 1);

244 i‡(
ªsu…
 =
NULL
) {

245  
NULL
;

248 
	`°r˝y
(
ªsu…
, 
°rög
);

250  
ªsu…
;

251 
	}
}

253 
	$Æloc_ã°_£t_limô
(sig√d 
Æloc_cou¡
)

255 
Æloˇti⁄_limô
 = 
Æloc_cou¡
;

256 
	}
}

258 
size_t
 
	$Æloc_ã°_gë_Æloˇãd
()

260  
Æloˇãd_byãs
;

261 
	}
}

	@test/alloc-testing.h

33 #i‚de‡
ALLOC_TESTING_H


34 
	#ALLOC_TESTING_H


	)

39 #i‚de‡
ALLOC_TESTING_C


40 #unde‡
mÆloc


41 
	#mÆloc
 
Æloc_ã°_mÆloc


	)

42 #unde‡
‰ì


43 
	#‰ì
 
Æloc_ã°_‰ì


	)

44 #unde‡
ªÆloc


45 
	#ªÆloc
 
Æloc_ã°_ªÆloc


	)

46 #unde‡
ˇŒoc


47 
	#ˇŒoc
 
Æloc_ã°_ˇŒoc


	)

48 #unde‡
°rdup


49 
	#°rdup
 
Æloc_ã°_°rdup


	)

60 *
Æloc_ã°_mÆloc
(
size_t
 
byãs
);

68 
Æloc_ã°_‰ì
(*
±r
);

80 *
Æloc_ã°_ªÆloc
(*
±r
, 
size_t
 
byãs
);

93 *
Æloc_ã°_ˇŒoc
(
size_t
 
nmemb
, size_à
byãs
);

104 *
Æloc_ã°_°rdup
(c⁄° *
°rög
);

118 
Æloc_ã°_£t_limô
(sig√d 
Æloc_cou¡
);

127 
size_t
 
Æloc_ã°_gë_Æloˇãd
();

	@test/framework.c

21 
	~<°dio.h
>

22 
	~<°dlib.h
>

24 
	~<as£π.h
>

26 
	~"Æloc-ã°ög.h
"

27 
	~"‰amew‹k.h
"

31 
	$run_ã°
(
UnôTe°Fun˘i⁄
 
ã°
)

36 
	`Æloc_ã°_£t_limô
(-1);

40 
	`ã°
();

45 
	`as£π
(
	`Æloc_ã°_gë_Æloˇãd
() == 0);

46 
	}
}

48 
	$run_ã°s
(
UnôTe°Fun˘i⁄
 *
ã°s
)

50 
i
;

52 
i
=0; 
ã°s
[i] !
NULL
; ++i) {

53 
	`run_ã°
(
ã°s
[
i
]);

55 
	}
}

	@test/framework.h

21 #i‚de‡
TEST_FRAMEWORK_H


22 
	#TEST_FRAMEWORK_H


	)

24 #ifde‡
__˝lu•lus


38 (*
UnôTe°Fun˘i⁄
)();

48 
run_ã°s
(
UnôTe°Fun˘i⁄
 *
ã°s
);

50 #ifde‡
__˝lu•lus


	@test/test-alloc-testing.c

24 
	~<°dio.h
>

25 
	~<as£π.h
>

26 
	~<°rög.h
>

28 
	~"Æloc-ã°ög.h
"

29 
	~"‰amew‹k.h
"

31 
	$ã°_mÆloc_‰ì
()

33 *
block
, *
block2
, *
block3
, *
block4
;

34 *
±r
;

35 
i
;

39 
	`as£π
(
	`Æloc_ã°_gë_Æloˇãd
() == 0);

41 
block
 = 
	`mÆloc
(1024);

43 
	`as£π
(
block
 !
NULL
);

44 
	`as£π
(
	`Æloc_ã°_gë_Æloˇãd
() == 1024);

48 
±r
 = 
block
;

50 
i
=0; i<1024; ++i) {

51 
	`as£π
(
±r
[
i
] != 0);

56 
	`‰ì
(
block
);

58 
	`as£π
(
	`Æloc_ã°_gë_Æloˇãd
() == 0);

62 
	`Æloc_ã°_£t_limô
(3);

64 
block
 = 
	`mÆloc
(1024);

65 
	`as£π
(
block
 !
NULL
);

66 
block2
 = 
	`mÆloc
(1024);

67 
	`as£π
(
block2
 !
NULL
);

68 
block3
 = 
	`mÆloc
(1024);

69 
	`as£π
(
block3
 !
NULL
);

70 
block4
 = 
	`mÆloc
(1024);

71 
	`as£π
(
block4
 =
NULL
);

72 
	`‰ì
(
block
);

73 
	`‰ì
(
block2
);

74 
	`‰ì
(
block3
);

75 
	`‰ì
(
block4
);

76 
	}
}

78 
	$ã°_ªÆloc
()

80 *
block
;

81 *
block2
;

85 
block2
 = 
	`mÆloc
(1024);

89 
block
 = 
	`mÆloc
(1024);

91 
	`as£π
(
block
 !
NULL
);

92 
	`as£π
(
	`Æloc_ã°_gë_Æloˇãd
() == 1024 + 1024);

96 
block
 = 
	`ªÆloc
(block, 2048);

97 
	`as£π
(
block
 !
NULL
);

99 
	`as£π
(
	`Æloc_ã°_gë_Æloˇãd
() == 2048 + 1024);

103 
block
 = 
	`ªÆloc
(block, 1500);

104 
	`as£π
(
block
 !
NULL
);

106 
	`as£π
(
	`Æloc_ã°_gë_Æloˇãd
() == 1500 + 1024);

108 
	`‰ì
(
block
);

110 
	`as£π
(
	`Æloc_ã°_gë_Æloˇãd
() == 0 + 1024);

114 
block
 = 
	`ªÆloc
(
NULL
, 1024);

116 
	`as£π
(
block
 !
NULL
);

118 
	`as£π
(
	`Æloc_ã°_gë_Æloˇãd
() == 1024 + 1024);

120 
	`‰ì
(
block
);

121 
	`‰ì
(
block2
);

123 
	`as£π
(
	`Æloc_ã°_gë_Æloˇãd
() == 0);

127 
block
 = 
	`mÆloc
(512);

128 
	`as£π
(
block
 !
NULL
);

129 
	`as£π
(
	`Æloc_ã°_gë_Æloˇãd
() == 512);

131 
	`Æloc_ã°_£t_limô
(1);

133 
block
 = 
	`ªÆloc
(block, 1024);

134 
	`as£π
(
block
 !
NULL
);

135 
	`as£π
(
	`Æloc_ã°_gë_Æloˇãd
() == 1024);

137 
	`as£π
(
	`ªÆloc
(
block
, 2048Ë=
NULL
);

138 
	`as£π
(
	`Æloc_ã°_gë_Æloˇãd
() == 1024);

140 
	`‰ì
(
block
);

141 
	`as£π
(
	`Æloc_ã°_gë_Æloˇãd
() == 0);

145 
	`Æloc_ã°_£t_limô
(1);

147 
block
 = 
	`ªÆloc
(
NULL
, 1024);

148 
	`as£π
(
block
 !
NULL
);

149 
	`as£π
(
	`Æloc_ã°_gë_Æloˇãd
() == 1024);

151 
	`as£π
(
	`ªÆloc
(
NULL
, 1024) == NULL);

152 
	`as£π
(
	`Æloc_ã°_gë_Æloˇãd
() == 1024);

154 
	`‰ì
(
block
);

155 
	}
}

157 
	$ã°_ˇŒoc
()

159 *
block
;

160 
i
;

162 
	`as£π
(
	`Æloc_ã°_gë_Æloˇãd
() == 0);

166 
block
 = 
	`ˇŒoc
(16, 64);

168 
	`as£π
(
	`Æloc_ã°_gë_Æloˇãd
() == 1024);

170 
	`as£π
(
block
 !
NULL
);

174 
i
=0; i<1024; ++i) {

175 
	`as£π
(
block
[
i
] == 0);

178 
	`‰ì
(
block
);

180 
	`as£π
(
	`Æloc_ã°_gë_Æloˇãd
() == 0);

184 
	`Æloc_ã°_£t_limô
(1);

186 
block
 = 
	`ˇŒoc
(1024, 1);

187 
	`as£π
(
block
 !
NULL
);

188 
	`as£π
(
	`Æloc_ã°_gë_Æloˇãd
() == 1024);

190 
	`as£π
(
	`ˇŒoc
(1024, 1Ë=
NULL
);

191 
	`as£π
(
	`Æloc_ã°_gë_Æloˇãd
() == 1024);

193 
	`‰ì
(
block
);

194 
	}
}

196 
	$ã°_°rdup
()

198 *
°r
;

200 
	`as£π
(
	`Æloc_ã°_gë_Æloˇãd
() == 0);

204 
°r
 = 
	`°rdup
("hello world");

206 
	`as£π
(
°r
 !
NULL
);

207 
	`as£π
(
	`°rcmp
(
°r
, "hello world") == 0);

209 
	`as£π
(
	`Æloc_ã°_gë_Æloˇãd
() == 12);

211 
	`‰ì
(
°r
);

213 
	`as£π
(
	`Æloc_ã°_gë_Æloˇãd
() == 0);

217 
	`Æloc_ã°_£t_limô
(1);

219 
°r
 = 
	`°rdup
("hello world");

220 
	`as£π
(
°r
 !
NULL
);

221 
	`as£π
(
	`Æloc_ã°_gë_Æloˇãd
() == 12);

223 
	`as£π
(
	`°rdup
("hñlÿw‹ld"Ë=
NULL
);

224 
	`as£π
(
	`Æloc_ã°_gë_Æloˇãd
() == 12);

226 
	`‰ì
(
°r
);

227 
	}
}

229 
	$ã°_limôs
()

231 *
block
;

235 
block
 = 
	`mÆloc
(2048);

236 
	`as£π
(
block
 !
NULL
);

237 
	`‰ì
(
block
);

241 
	`Æloc_ã°_£t_limô
(1);

242 
block
 = 
	`mÆloc
(1024);

243 
	`as£π
(
block
 !
NULL
);

244 
	`as£π
(
	`mÆloc
(1024Ë=
NULL
);

245 
	`‰ì
(
block
);

249 
	`Æloc_ã°_£t_limô
(-1);

250 
block
 = 
	`mÆloc
(1024);

251 
	`as£π
(
block
 !
NULL
);

252 
	`‰ì
(
block
);

253 
	}
}

255 
UnôTe°Fun˘i⁄
 
	gã°s
[] = {

256 
ã°_mÆloc_‰ì
,

257 
ã°_ªÆloc
,

258 
ã°_ˇŒoc
,

259 
ã°_°rdup
,

260 
ã°_limôs
,

261 
NULL


264 
	$maö
(
¨gc
, *
¨gv
[])

266 
	`run_ã°s
(
ã°s
);

269 
	}
}

	@test/test-arraylist.c

23 
	~<°dio.h
>

24 
	~<°dlib.h
>

25 
	~<as£π.h
>

27 
	~"Æloc-ã°ög.h
"

28 
	~"‰amew‹k.h
"

30 
	~"¨øyli°.h
"

31 
	~"com∑ª-öt.h
"

33 
	gv¨übÀ1
, 
	gv¨übÀ2
, 
	gv¨übÀ3
, 
	gv¨übÀ4
;

35 
AºayLi°
 *
	$gíî©e_¨øyli°
()

37 
AºayLi°
 *
¨øyli°
;

38 
i
;

40 
¨øyli°
 = 
	`¨øyli°_√w
(0);

42 
i
=0; i<4; ++i) {

43 
	`¨øyli°_≠≥nd
(
¨øyli°
, &
v¨übÀ1
);

44 
	`¨øyli°_≠≥nd
(
¨øyli°
, &
v¨übÀ2
);

45 
	`¨øyli°_≠≥nd
(
¨øyli°
, &
v¨übÀ3
);

46 
	`¨øyli°_≠≥nd
(
¨øyli°
, &
v¨übÀ4
);

49  
¨øyli°
;

50 
	}
}

52 
	$ã°_¨øyli°_√w_‰ì
()

54 
AºayLi°
 *
¨øyli°
;

58 
¨øyli°
 = 
	`¨øyli°_√w
(0);

59 
	`as£π
(
¨øyli°
 !
NULL
);

60 
	`¨øyli°_‰ì
(
¨øyli°
);

64 
¨øyli°
 = 
	`¨øyli°_√w
(10);

65 
	`as£π
(
¨øyli°
 !
NULL
);

66 
	`¨øyli°_‰ì
(
¨øyli°
);

70 
	`¨øyli°_‰ì
(
NULL
);

74 
	`Æloc_ã°_£t_limô
(0);

75 
¨øyli°
 = 
	`¨øyli°_√w
(0);

76 
	`as£π
(
¨øyli°
 =
NULL
);

78 
	`Æloc_ã°_£t_limô
(1);

79 
¨øyli°
 = 
	`¨øyli°_√w
(100);

80 
	`as£π
(
¨øyli°
 =
NULL
);

81 
	}
}

83 
	$ã°_¨øyli°_≠≥nd
()

85 
AºayLi°
 *
¨øyli°
;

86 
i
;

88 
¨øyli°
 = 
	`¨øyli°_√w
(0);

90 
	`as£π
(
¨øyli°
->
Àngth
 == 0);

94 
	`as£π
(
	`¨øyli°_≠≥nd
(
¨øyli°
, &
v¨übÀ1
) != 0);

95 
	`as£π
(
¨øyli°
->
Àngth
 == 1);

97 
	`as£π
(
	`¨øyli°_≠≥nd
(
¨øyli°
, &
v¨übÀ2
) != 0);

98 
	`as£π
(
¨øyli°
->
Àngth
 == 2);

100 
	`as£π
(
	`¨øyli°_≠≥nd
(
¨øyli°
, &
v¨übÀ3
) != 0);

101 
	`as£π
(
¨øyli°
->
Àngth
 == 3);

103 
	`as£π
(
	`¨øyli°_≠≥nd
(
¨øyli°
, &
v¨übÀ4
) != 0);

104 
	`as£π
(
¨øyli°
->
Àngth
 == 4);

106 
	`as£π
(
¨øyli°
->
d©a
[0] =&
v¨übÀ1
);

107 
	`as£π
(
¨øyli°
->
d©a
[1] =&
v¨übÀ2
);

108 
	`as£π
(
¨øyli°
->
d©a
[2] =&
v¨übÀ3
);

109 
	`as£π
(
¨øyli°
->
d©a
[3] =&
v¨übÀ4
);

113 
i
=0; i<10000; ++i) {

114 
	`as£π
(
	`¨øyli°_≠≥nd
(
¨øyli°
, 
NULL
) != 0);

117 
	`¨øyli°_‰ì
(
¨øyli°
);

121 
¨øyli°
 = 
	`¨øyli°_√w
(100);

123 
	`Æloc_ã°_£t_limô
(0);

125 
i
=0; i<100; ++i) {

126 
	`as£π
(
	`¨øyli°_≠≥nd
(
¨øyli°
, 
NULL
) != 0);

129 
	`as£π
(
¨øyli°
->
Àngth
 == 100);

130 
	`as£π
(
	`¨øyli°_≠≥nd
(
¨øyli°
, 
NULL
) == 0);

131 
	`as£π
(
¨øyli°
->
Àngth
 == 100);

133 
	`¨øyli°_‰ì
(
¨øyli°
);

134 
	}
}

137 
	$ã°_¨øyli°_¥ïíd
()

139 
AºayLi°
 *
¨øyli°
;

140 
i
;

142 
¨øyli°
 = 
	`¨øyli°_√w
(0);

144 
	`as£π
(
¨øyli°
->
Àngth
 == 0);

148 
	`as£π
(
	`¨øyli°_¥ïíd
(
¨øyli°
, &
v¨übÀ1
) != 0);

149 
	`as£π
(
¨øyli°
->
Àngth
 == 1);

151 
	`as£π
(
	`¨øyli°_¥ïíd
(
¨øyli°
, &
v¨übÀ2
) != 0);

152 
	`as£π
(
¨øyli°
->
Àngth
 == 2);

154 
	`as£π
(
	`¨øyli°_¥ïíd
(
¨øyli°
, &
v¨übÀ3
) != 0);

155 
	`as£π
(
¨øyli°
->
Àngth
 == 3);

157 
	`as£π
(
	`¨øyli°_¥ïíd
(
¨øyli°
, &
v¨übÀ4
) != 0);

158 
	`as£π
(
¨øyli°
->
Àngth
 == 4);

160 
	`as£π
(
¨øyli°
->
d©a
[0] =&
v¨übÀ4
);

161 
	`as£π
(
¨øyli°
->
d©a
[1] =&
v¨übÀ3
);

162 
	`as£π
(
¨øyli°
->
d©a
[2] =&
v¨übÀ2
);

163 
	`as£π
(
¨øyli°
->
d©a
[3] =&
v¨übÀ1
);

167 
i
=0; i<10000; ++i) {

168 
	`as£π
(
	`¨øyli°_¥ïíd
(
¨øyli°
, 
NULL
) != 0);

171 
	`¨øyli°_‰ì
(
¨øyli°
);

175 
¨øyli°
 = 
	`¨øyli°_√w
(100);

177 
	`Æloc_ã°_£t_limô
(0);

179 
i
=0; i<100; ++i) {

180 
	`as£π
(
	`¨øyli°_¥ïíd
(
¨øyli°
, 
NULL
) != 0);

183 
	`as£π
(
¨øyli°
->
Àngth
 == 100);

184 
	`as£π
(
	`¨øyli°_¥ïíd
(
¨øyli°
, 
NULL
) == 0);

185 
	`as£π
(
¨øyli°
->
Àngth
 == 100);

187 
	`¨øyli°_‰ì
(
¨øyli°
);

188 
	}
}

190 
	$ã°_¨øyli°_ö£π
()

192 
AºayLi°
 *
¨øyli°
;

193 
i
;

195 
¨øyli°
 = 
	`gíî©e_¨øyli°
();

199 
	`as£π
(
¨øyli°
->
Àngth
 == 16);

200 
	`as£π
(
	`¨øyli°_ö£π
(
¨øyli°
, 17, &
v¨übÀ1
) == 0);

201 
	`as£π
(
¨øyli°
->
Àngth
 == 16);

205 
	`as£π
(
¨øyli°
->
Àngth
 == 16);

206 
	`as£π
(
¨øyli°
->
d©a
[4] =&
v¨übÀ1
);

207 
	`as£π
(
¨øyli°
->
d©a
[5] =&
v¨übÀ2
);

208 
	`as£π
(
¨øyli°
->
d©a
[6] =&
v¨übÀ3
);

210 
	`as£π
(
	`¨øyli°_ö£π
(
¨øyli°
, 5, &
v¨übÀ4
) != 0);

212 
	`as£π
(
¨øyli°
->
Àngth
 == 17);

213 
	`as£π
(
¨øyli°
->
d©a
[4] =&
v¨übÀ1
);

214 
	`as£π
(
¨øyli°
->
d©a
[5] =&
v¨übÀ4
);

215 
	`as£π
(
¨øyli°
->
d©a
[6] =&
v¨übÀ2
);

216 
	`as£π
(
¨øyli°
->
d©a
[7] =&
v¨übÀ3
);

220 
	`as£π
(
¨øyli°
->
d©a
[0] =&
v¨übÀ1
);

221 
	`as£π
(
¨øyli°
->
d©a
[1] =&
v¨übÀ2
);

222 
	`as£π
(
¨øyli°
->
d©a
[2] =&
v¨übÀ3
);

224 
	`as£π
(
	`¨øyli°_ö£π
(
¨øyli°
, 0, &
v¨übÀ4
) != 0);

226 
	`as£π
(
¨øyli°
->
Àngth
 == 18);

227 
	`as£π
(
¨øyli°
->
d©a
[0] =&
v¨übÀ4
);

228 
	`as£π
(
¨øyli°
->
d©a
[1] =&
v¨übÀ1
);

229 
	`as£π
(
¨øyli°
->
d©a
[2] =&
v¨übÀ2
);

230 
	`as£π
(
¨øyli°
->
d©a
[3] =&
v¨übÀ3
);

234 
	`as£π
(
¨øyli°
->
d©a
[15] =&
v¨übÀ2
);

235 
	`as£π
(
¨øyli°
->
d©a
[16] =&
v¨übÀ3
);

236 
	`as£π
(
¨øyli°
->
d©a
[17] =&
v¨übÀ4
);

238 
	`as£π
(
	`¨øyli°_ö£π
(
¨øyli°
, 18, &
v¨übÀ1
) != 0);

240 
	`as£π
(
¨øyli°
->
Àngth
 == 19);

241 
	`as£π
(
¨øyli°
->
d©a
[15] =&
v¨übÀ2
);

242 
	`as£π
(
¨øyli°
->
d©a
[16] =&
v¨übÀ3
);

243 
	`as£π
(
¨øyli°
->
d©a
[17] =&
v¨übÀ4
);

244 
	`as£π
(
¨øyli°
->
d©a
[18] =&
v¨übÀ1
);

248 
i
=0; i<10000; ++i) {

249 
	`¨øyli°_ö£π
(
¨øyli°
, 10, &
v¨übÀ1
);

252 
	`¨øyli°_‰ì
(
¨øyli°
);

253 
	}
}

255 
	$ã°_¨øyli°_ªmove_ønge
()

257 
AºayLi°
 *
¨øyli°
;

259 
¨øyli°
 = 
	`gíî©e_¨øyli°
();

261 
	`as£π
(
¨øyli°
->
Àngth
 == 16);

262 
	`as£π
(
¨øyli°
->
d©a
[3] =&
v¨übÀ4
);

263 
	`as£π
(
¨øyli°
->
d©a
[4] =&
v¨übÀ1
);

264 
	`as£π
(
¨øyli°
->
d©a
[5] =&
v¨übÀ2
);

265 
	`as£π
(
¨øyli°
->
d©a
[6] =&
v¨übÀ3
);

267 
	`¨øyli°_ªmove_ønge
(
¨øyli°
, 4, 3);

269 
	`as£π
(
¨øyli°
->
Àngth
 == 13);

270 
	`as£π
(
¨øyli°
->
d©a
[3] =&
v¨übÀ4
);

271 
	`as£π
(
¨øyli°
->
d©a
[4] =&
v¨übÀ4
);

272 
	`as£π
(
¨øyli°
->
d©a
[5] =&
v¨übÀ1
);

273 
	`as£π
(
¨øyli°
->
d©a
[6] =&
v¨übÀ2
);

277 
	`¨øyli°_ªmove_ønge
(
¨øyli°
, 10, 10);

278 
	`¨øyli°_ªmove_ønge
(
¨øyli°
, 0, 16);

280 
	`as£π
(
¨øyli°
->
Àngth
 == 13);

282 
	`¨øyli°_‰ì
(
¨øyli°
);

283 
	}
}

285 
	$ã°_¨øyli°_ªmove
()

287 
AºayLi°
 *
¨øyli°
;

289 
¨øyli°
 = 
	`gíî©e_¨øyli°
();

291 
	`as£π
(
¨øyli°
->
Àngth
 == 16);

292 
	`as£π
(
¨øyli°
->
d©a
[3] =&
v¨übÀ4
);

293 
	`as£π
(
¨øyli°
->
d©a
[4] =&
v¨übÀ1
);

294 
	`as£π
(
¨øyli°
->
d©a
[5] =&
v¨übÀ2
);

295 
	`as£π
(
¨øyli°
->
d©a
[6] =&
v¨übÀ3
);

297 
	`¨øyli°_ªmove
(
¨øyli°
, 4);

299 
	`as£π
(
¨øyli°
->
Àngth
 == 15);

300 
	`as£π
(
¨øyli°
->
d©a
[3] =&
v¨übÀ4
);

301 
	`as£π
(
¨øyli°
->
d©a
[4] =&
v¨übÀ2
);

302 
	`as£π
(
¨øyli°
->
d©a
[5] =&
v¨übÀ3
);

303 
	`as£π
(
¨øyli°
->
d©a
[6] =&
v¨übÀ4
);

307 
	`¨øyli°_ªmove
(
¨øyli°
, 15);

309 
	`as£π
(
¨øyli°
->
Àngth
 == 15);

311 
	`¨øyli°_‰ì
(
¨øyli°
);

312 
	}
}

314 
	$ã°_¨øyli°_ödex_of
()

316 
íåõs
[] = { 89, 4, 23, 42, 16, 15, 8, 99, 50, 30 };

317 
num_íåõs
;

318 
AºayLi°
 *
¨øyli°
;

319 
i
;

320 
ödex
;

321 
vÆ
;

325 
num_íåõs
 = (
íåõs
) / ();

326 
¨øyli°
 = 
	`¨øyli°_√w
(0);

328 
i
=0; i<
num_íåõs
; ++i) {

329 
	`¨øyli°_≠≥nd
(
¨øyli°
, &
íåõs
[
i
]);

334 
i
=0; i<
num_íåõs
; ++i) {

336 
vÆ
 = 
íåõs
[
i
];

338 
ödex
 = 
	`¨øyli°_ödex_of
(
¨øyli°
, 
öt_equÆ
, &
vÆ
);

340 
	`as£π
(
ödex
 =
i
);

345 
vÆ
 = 0;

346 
	`as£π
(
	`¨øyli°_ödex_of
(
¨øyli°
, 
öt_equÆ
, &
vÆ
) < 0);

347 
vÆ
 = 57;

348 
	`as£π
(
	`¨øyli°_ödex_of
(
¨øyli°
, 
öt_equÆ
, &
vÆ
) < 0);

350 
	`¨øyli°_‰ì
(
¨øyli°
);

351 
	}
}

353 
	$ã°_¨øyli°_˛ór
()

355 
AºayLi°
 *
¨øyli°
;

357 
¨øyli°
 = 
	`¨øyli°_√w
(0);

361 
	`¨øyli°_˛ór
(
¨øyli°
);

362 
	`as£π
(
¨øyli°
->
Àngth
 == 0);

366 
	`¨øyli°_≠≥nd
(
¨øyli°
, &
v¨übÀ1
);

367 
	`¨øyli°_≠≥nd
(
¨øyli°
, &
v¨übÀ2
);

368 
	`¨øyli°_≠≥nd
(
¨øyli°
, &
v¨übÀ3
);

369 
	`¨øyli°_≠≥nd
(
¨øyli°
, &
v¨übÀ4
);

371 
	`¨øyli°_˛ór
(
¨øyli°
);

373 
	`as£π
(
¨øyli°
->
Àngth
 == 0);

375 
	`¨øyli°_‰ì
(
¨øyli°
);

376 
	}
}

378 
	$ã°_¨øyli°_s‹t
()

380 
AºayLi°
 *
¨øyli°
;

381 
íåõs
[] = { 89, 4, 23, 42, 4, 16, 15, 4, 8, 99, 50, 30, 4 };

382 
s‹ãd
[] = { 4, 4, 4, 4, 8, 15, 16, 23, 30, 42, 50, 89, 99 };

383 
num_íåõs
 = (
íåõs
) / ();

384 
i
;

386 
¨øyli°
 = 
	`¨øyli°_√w
(10);

388 
i
=0; i<
num_íåõs
; ++i) {

389 
	`¨øyli°_¥ïíd
(
¨øyli°
, &
íåõs
[
i
]);

392 
	`¨øyli°_s‹t
(
¨øyli°
, 
öt_com∑ª
);

396 
	`as£π
(
¨øyli°
->
Àngth
 =
num_íåõs
);

400 
i
=0; i<
num_íåõs
; ++i) {

401 *
vÆue
;

403 
vÆue
 = (*Ë
¨øyli°
->
d©a
[
i
];

404 
	`as£π
(*
vÆue
 =
s‹ãd
[
i
]);

407 
	`¨øyli°_‰ì
(
¨øyli°
);

411 
¨øyli°
 = 
	`¨øyli°_√w
(5);

413 
	`¨øyli°_s‹t
(
¨øyli°
, 
öt_com∑ª
);

415 
	`as£π
(
¨øyli°
->
Àngth
 == 0);

417 
	`¨øyli°_‰ì
(
¨øyli°
);

421 
¨øyli°
 = 
	`¨øyli°_√w
(5);

423 
	`¨øyli°_¥ïíd
(
¨øyli°
, &
íåõs
[0]);

424 
	`¨øyli°_s‹t
(
¨øyli°
, 
öt_com∑ª
);

426 
	`as£π
(
¨øyli°
->
Àngth
 == 1);

427 
	`as£π
(
¨øyli°
->
d©a
[0] =&
íåõs
[0]);

429 
	`¨øyli°_‰ì
(
¨øyli°
);

430 
	}
}

432 
UnôTe°Fun˘i⁄
 
	gã°s
[] = {

433 
ã°_¨øyli°_√w_‰ì
,

434 
ã°_¨øyli°_≠≥nd
,

435 
ã°_¨øyli°_¥ïíd
,

436 
ã°_¨øyli°_ö£π
,

437 
ã°_¨øyli°_ªmove
,

438 
ã°_¨øyli°_ªmove_ønge
,

439 
ã°_¨øyli°_ödex_of
,

440 
ã°_¨øyli°_˛ór
,

441 
ã°_¨øyli°_s‹t
,

442 
NULL


445 
	$maö
(
¨gc
, *
¨gv
[])

447 
	`run_ã°s
(
ã°s
);

450 
	}
}

	@test/test-avl-tree.c

21 
	~<°dio.h
>

22 
	~<°dlib.h
>

23 
	~<as£π.h
>

25 
	~"Æloc-ã°ög.h
"

26 
	~"‰amew‹k.h
"

28 
	~"avl-åì.h
"

29 
	~"com∑ª-öt.h
"

31 
	#NUM_TEST_VALUES
 1000

	)

33 
	gã°_¨øy
[
NUM_TEST_VALUES
];

38 
	$¥öt_åì
(
AVLTªeNode
 *
node
, 
dïth
)

40 *
vÆue
;

41 
i
;

43 i‡(
node
 =
NULL
) {

47 
	`¥öt_åì
(
	`avl_åì_node_chûd
(
node
, 
AVL_TREE_NODE_LEFT
), 
dïth
 + 1);

49 
i
=0; i<
dïth
*6; ++i) {

50 
	`¥ötf
(" ");

53 
vÆue
 = 
	`avl_åì_node_key
(
node
);

54 
	`¥ötf
("%i\n", *
vÆue
);

56 
	`¥öt_åì
(
	`avl_åì_node_chûd
(
node
, 
AVL_TREE_NODE_RIGHT
), 
dïth
 + 1);

57 
	}
}

60 
	$föd_subåì_height
(
AVLTªeNode
 *
node
)

62 
AVLTªeNode
 *
À·_subåì
;

63 
AVLTªeNode
 *
right_subåì
;

64 
À·_height
, 
right_height
;

66 i‡(
node
 =
NULL
) {

70 
À·_subåì
 = 
	`avl_åì_node_chûd
(
node
, 
AVL_TREE_NODE_LEFT
);

71 
right_subåì
 = 
	`avl_åì_node_chûd
(
node
, 
AVL_TREE_NODE_RIGHT
);

72 
À·_height
 = 
	`föd_subåì_height
(
À·_subåì
);

73 
right_height
 = 
	`föd_subåì_height
(
right_subåì
);

75 i‡(
À·_height
 > 
right_height
) {

76  
À·_height
 + 1;

78  
right_height
 + 1;

80 
	}
}

84 
	gcou¡î
;

86 
	$vÆid©e_subåì
(
AVLTªeNode
 *
node
)

88 
AVLTªeNode
 *
À·_node
, *
right_node
;

89 
À·_height
, 
right_height
;

90 *
key
;

92 i‡(
node
 =
NULL
) {

96 
À·_node
 = 
	`avl_åì_node_chûd
(
node
, 
AVL_TREE_NODE_LEFT
);

97 
right_node
 = 
	`avl_åì_node_chûd
(
node
, 
AVL_TREE_NODE_RIGHT
);

101 i‡(
À·_node
 !
NULL
) {

102 
	`as£π
(
	`avl_åì_node_∑ª¡
(
À·_node
Ë=
node
);

104 i‡(
right_node
 !
NULL
) {

105 
	`as£π
(
	`avl_åì_node_∑ª¡
(
right_node
Ë=
node
);

111 
À·_height
 = 
	`vÆid©e_subåì
(
À·_node
);

115 
key
 = (*Ë
	`avl_åì_node_key
(
node
);

117 
	`as£π
(*
key
 > 
cou¡î
);

118 
cou¡î
 = *
key
;

120 
right_height
 = 
	`vÆid©e_subåì
(
right_node
);

125 
	`as£π
(
	`avl_åì_subåì_height
(
À·_node
Ë=
À·_height
);

126 
	`as£π
(
	`avl_åì_subåì_height
(
right_node
Ë=
right_height
);

130 
	`as£π
(
À·_height
 - 
right_height
 < 2 &&Ñight_height -Üeft_height < 2);

134 i‡(
À·_height
 > 
right_height
) {

135  
À·_height
 + 1;

137  
right_height
 + 1;

139 
	}
}

141 
	$vÆid©e_åì
(
AVLTªe
 *
åì
)

143 
AVLTªeNode
 *
roŸ_node
;

144 
height
;

146 
roŸ_node
 = 
	`avl_åì_roŸ_node
(
åì
);

148 i‡(
roŸ_node
 !
NULL
) {

149 
height
 = 
	`föd_subåì_height
(
roŸ_node
);

150 
	`as£π
(
	`avl_åì_subåì_height
(
roŸ_node
Ë=
height
);

153 
cou¡î
 = -1;

154 
	`vÆid©e_subåì
(
roŸ_node
);

155 
	}
}

157 
AVLTªe
 *
	$¸óã_åì
()

159 
AVLTªe
 *
åì
;

160 
i
;

164 
åì
 = 
	`avl_åì_√w
((
AVLTªeCom∑ªFunc
Ë
öt_com∑ª
);

166 
i
=0; i<
NUM_TEST_VALUES
; ++i) {

167 
ã°_¨øy
[
i
] = i;

168 
	`avl_åì_ö£π
(
åì
, &
ã°_¨øy
[
i
], &test_array[i]);

171  
åì
;

172 
	}
}

174 
	$ã°_avl_åì_√w
()

176 
AVLTªe
 *
åì
;

178 
åì
 = 
	`avl_åì_√w
((
AVLTªeCom∑ªFunc
Ë
öt_com∑ª
);

180 
	`as£π
(
åì
 !
NULL
);

181 
	`as£π
(
	`avl_åì_roŸ_node
(
åì
Ë=
NULL
);

182 
	`as£π
(
	`avl_åì_num_íåõs
(
åì
) == 0);

184 
	`avl_åì_‰ì
(
åì
);

188 
	`Æloc_ã°_£t_limô
(0);

190 
åì
 = 
	`avl_åì_√w
((
AVLTªeCom∑ªFunc
Ë
öt_com∑ª
);

192 
	`as£π
(
åì
 =
NULL
);

194 
	}
}

196 
	$ã°_avl_åì_ö£π_lookup
()

198 
AVLTªe
 *
åì
;

199 
AVLTªeNode
 *
node
;

200 
i
;

201 *
vÆue
;

206 
åì
 = 
	`avl_åì_√w
((
AVLTªeCom∑ªFunc
Ë
öt_com∑ª
);

208 
i
=0; i<
NUM_TEST_VALUES
; ++i) {

209 
ã°_¨øy
[
i
] = () i;

210 
	`avl_åì_ö£π
(
åì
, &
ã°_¨øy
[
i
], &test_array[i]);

212 
	`as£π
(
	`avl_åì_num_íåõs
(
åì
Ë=
i
 + 1);

213 
	`vÆid©e_åì
(
åì
);

216 
	`as£π
(
	`avl_åì_roŸ_node
(
åì
Ë!
NULL
);

220 
i
=0; i<
NUM_TEST_VALUES
; ++i) {

221 
node
 = 
	`avl_åì_lookup_node
(
åì
, &
i
);

222 
	`as£π
(
node
 !
NULL
);

223 
vÆue
 = 
	`avl_åì_node_key
(
node
);

224 
	`as£π
(*
vÆue
 =(Ë
i
);

225 
vÆue
 = 
	`avl_åì_node_vÆue
(
node
);

226 
	`as£π
(*
vÆue
 =(Ë
i
);

231 
i
 = 
NUM_TEST_VALUES
 + 100;

232 
	`as£π
(
	`avl_åì_lookup_node
(
åì
, &
i
Ë=
NULL
);

234 
	`avl_åì_‰ì
(
åì
);

235 
	}
}

237 
	$ã°_avl_åì_chûd
()

239 
AVLTªe
 *
åì
;

240 
AVLTªeNode
 *
roŸ
;

241 
AVLTªeNode
 *
À·
;

242 
AVLTªeNode
 *
right
;

243 
vÆues
[] = { 1, 2, 3 };

244 *
p
;

245 
i
;

250 
åì
 = 
	`avl_åì_√w
((
AVLTªeCom∑ªFunc
Ë
öt_com∑ª
);

252 
i
=0; i<3; ++i) {

253 
	`avl_åì_ö£π
(
åì
, &
vÆues
[
i
], &values[i]);

258 
roŸ
 = 
	`avl_åì_roŸ_node
(
åì
);

259 
p
 = 
	`avl_åì_node_vÆue
(
roŸ
);

260 
	`as£π
(*
p
 == 2);

262 
À·
 = 
	`avl_åì_node_chûd
(
roŸ
, 
AVL_TREE_NODE_LEFT
);

263 
p
 = 
	`avl_åì_node_vÆue
(
À·
);

264 
	`as£π
(*
p
 == 1);

266 
right
 = 
	`avl_åì_node_chûd
(
roŸ
, 
AVL_TREE_NODE_RIGHT
);

267 
p
 = 
	`avl_åì_node_vÆue
(
right
);

268 
	`as£π
(*
p
 == 3);

272 
	`as£π
(
	`avl_åì_node_chûd
(
roŸ
, -1Ë=
NULL
);

273 
	`as£π
(
	`avl_åì_node_chûd
(
roŸ
, 10000Ë=
NULL
);

274 
	`as£π
(
	`avl_åì_node_chûd
(
roŸ
, 2Ë=
NULL
);

275 
	`as£π
(
	`avl_åì_node_chûd
(
roŸ
, -100000Ë=
NULL
);

277 
	`avl_åì_‰ì
(
åì
);

278 
	}
}

280 
	$ã°_out_of_mem‹y
()

282 
AVLTªe
 *
åì
;

283 
AVLTªeNode
 *
node
;

284 
i
;

288 
åì
 = 
	`¸óã_åì
();

292 
	`Æloc_ã°_£t_limô
(0);

296 
i
=10000; i<20000; ++i) {

297 
node
 = 
	`avl_åì_ö£π
(
åì
, &
i
, &i);

298 
	`as£π
(
node
 =
NULL
);

299 
	`vÆid©e_åì
(
åì
);

302 
	`avl_åì_‰ì
(
åì
);

303 
	}
}

305 
	$ã°_avl_åì_‰ì
()

307 
AVLTªe
 *
åì
;

311 
åì
 = 
	`avl_åì_√w
((
AVLTªeCom∑ªFunc
Ë
öt_com∑ª
);

312 
	`avl_åì_‰ì
(
åì
);

316 
åì
 = 
	`¸óã_åì
();

317 
	`avl_åì_‰ì
(
åì
);

318 
	}
}

320 
	$ã°_avl_åì_lookup
()

322 
AVLTªe
 *
åì
;

323 
i
;

324 *
vÆue
;

328 
åì
 = 
	`¸óã_åì
();

330 
i
=0; i<
NUM_TEST_VALUES
; ++i) {

331 
vÆue
 = 
	`avl_åì_lookup
(
åì
, &
i
);

333 
	`as£π
(
vÆue
 !
NULL
);

334 
	`as£π
(*
vÆue
 =
i
);

339 
i
 = -1;

340 
	`as£π
(
	`avl_åì_lookup
(
åì
, &
i
Ë=
NULL
);

341 
i
 = 
NUM_TEST_VALUES
 + 1;

342 
	`as£π
(
	`avl_åì_lookup
(
åì
, &
i
Ë=
NULL
);

343 
i
 = 8724897;

344 
	`as£π
(
	`avl_åì_lookup
(
åì
, &
i
Ë=
NULL
);

346 
	`avl_åì_‰ì
(
åì
);

347 
	}
}

349 
	$ã°_avl_åì_ªmove
()

351 
AVLTªe
 *
åì
;

352 
i
;

353 
x
, 
y
, 
z
;

354 
vÆue
;

355 
ex≥˘ed_íåõs
;

357 
åì
 = 
	`¸óã_åì
();

361 
i
 = 
NUM_TEST_VALUES
 + 100;

362 
	`as£π
(
	`avl_åì_ªmove
(
åì
, &
i
) == 0);

363 
i
 = -1;

364 
	`as£π
(
	`avl_åì_ªmove
(
åì
, &
i
) == 0);

368 
ex≥˘ed_íåõs
 = 
NUM_TEST_VALUES
;

373 
x
=0; x<10; ++x) {

374 
y
=0; y<10; ++y) {

375 
z
=0; z<10; ++z) {

376 
vÆue
 = 
z
 * 100 + (9 - 
y
Ë* 10 + 
x
;

377 
	`as£π
(
	`avl_åì_ªmove
(
åì
, &
vÆue
) != 0);

378 
	`vÆid©e_åì
(
åì
);

379 
ex≥˘ed_íåõs
 -= 1;

380 
	`as£π
(
	`avl_åì_num_íåõs
(
åì
)

381 =
ex≥˘ed_íåõs
);

388 
	`as£π
(
	`avl_åì_roŸ_node
(
åì
Ë=
NULL
);

390 
	`avl_åì_‰ì
(
åì
);

391 
	}
}

393 
	$ã°_avl_åì_to_¨øy
()

395 
AVLTªe
 *
åì
;

396 
íåõs
[] = { 89, 23, 42, 4, 16, 15, 8, 99, 50, 30 };

397 
s‹ãd
[] = { 4, 8, 15, 16, 23, 30, 42, 50, 89, 99 };

398 
num_íåõs
 = (
íåõs
) / ();

399 
i
;

400 **
¨øy
;

404 
åì
 = 
	`avl_åì_√w
((
AVLTªeCom∑ªFunc
Ë
öt_com∑ª
);

406 
i
=0; i<
num_íåõs
; ++i) {

407 
	`avl_åì_ö£π
(
åì
, &
íåõs
[
i
], 
NULL
);

410 
	`as£π
(
	`avl_åì_num_íåõs
(
åì
Ë=
num_íåõs
);

414 
¨øy
 = (**Ë
	`avl_åì_to_¨øy
(
åì
);

416 
i
=0; i<
num_íåõs
; ++i) {

417 
	`as£π
(*
¨øy
[
i
] =
s‹ãd
[i]);

420 
	`‰ì
(
¨øy
);

424 
	`Æloc_ã°_£t_limô
(0);

426 
¨øy
 = (**Ë
	`avl_åì_to_¨øy
(
åì
);

427 
	`as£π
(
¨øy
 =
NULL
);

428 
	`vÆid©e_åì
(
åì
);

430 
	`avl_åì_‰ì
(
åì
);

431 
	}
}

433 
UnôTe°Fun˘i⁄
 
	gã°s
[] = {

434 
ã°_avl_åì_√w
,

435 
ã°_avl_åì_‰ì
,

436 
ã°_avl_åì_chûd
,

437 
ã°_avl_åì_ö£π_lookup
,

438 
ã°_avl_åì_lookup
,

439 
ã°_avl_åì_ªmove
,

440 
ã°_avl_åì_to_¨øy
,

441 
ã°_out_of_mem‹y
,

442 
NULL


445 
	$maö
(
¨gc
, *
¨gv
[])

447 
	`run_ã°s
(
ã°s
);

449 
	}
}

	@test/test-binary-heap.c

21 
	~<°dlib.h
>

22 
	~<as£π.h
>

24 
	~"Æloc-ã°ög.h
"

25 
	~"‰amew‹k.h
"

27 
	~"bö¨y-hóp.h
"

28 
	~"com∑ª-öt.h
"

30 
	#NUM_TEST_VALUES
 10000

	)

32 
	gã°_¨øy
[
NUM_TEST_VALUES
];

34 
	$ã°_bö¨y_hóp_√w_‰ì
()

36 
Bö¨yHóp
 *
hóp
;

37 
i
;

39 
i
=0; i<
NUM_TEST_VALUES
; ++i) {

40 
hóp
 = 
	`bö¨y_hóp_√w
(
BINARY_HEAP_TYPE_MIN
, 
öt_com∑ª
);

41 
	`bö¨y_hóp_‰ì
(
hóp
);

46 
	`Æloc_ã°_£t_limô
(0);

47 
hóp
 = 
	`bö¨y_hóp_√w
(
BINARY_HEAP_TYPE_MIN
, 
öt_com∑ª
);

48 
	`as£π
(
hóp
 =
NULL
);

50 
	`Æloc_ã°_£t_limô
(1);

51 
hóp
 = 
	`bö¨y_hóp_√w
(
BINARY_HEAP_TYPE_MIN
, 
öt_com∑ª
);

52 
	`as£π
(
hóp
 =
NULL
);

53 
	}
}

55 
	$ã°_bö¨y_hóp_ö£π
()

57 
Bö¨yHóp
 *
hóp
;

58 
i
;

60 
hóp
 = 
	`bö¨y_hóp_√w
(
BINARY_HEAP_TYPE_MIN
, 
öt_com∑ª
);

62 
i
=0; i<
NUM_TEST_VALUES
; ++i) {

63 
ã°_¨øy
[
i
] = i;

64 
	`as£π
(
	`bö¨y_hóp_ö£π
(
hóp
, &
ã°_¨øy
[
i
]) != 0);

67 
	`as£π
(
	`bö¨y_hóp_num_íåõs
(
hóp
Ë=
NUM_TEST_VALUES
);

69 
	`bö¨y_hóp_‰ì
(
hóp
);

70 
	}
}

72 
	$ã°_mö_hóp
()

74 
Bö¨yHóp
 *
hóp
;

75 *
vÆ
;

76 
i
;

78 
hóp
 = 
	`bö¨y_hóp_√w
(
BINARY_HEAP_TYPE_MIN
, 
öt_com∑ª
);

82 
i
=0; i<
NUM_TEST_VALUES
; ++i) {

83 
ã°_¨øy
[
i
] = i;

84 
	`as£π
(
	`bö¨y_hóp_ö£π
(
hóp
, &
ã°_¨øy
[
i
]) != 0);

89 
i
 = -1;

90 
	`bö¨y_hóp_num_íåõs
(
hóp
) > 0) {

91 
vÆ
 = (*Ë
	`bö¨y_hóp_p›
(
hóp
);

93 
	`as£π
(*
vÆ
 =
i
 + 1);

94 
i
 = *
vÆ
;

99 
	`as£π
(
	`bö¨y_hóp_num_íåõs
(
hóp
) == 0);

100 
	`as£π
(
	`bö¨y_hóp_p›
(
hóp
Ë=
BINARY_HEAP_NULL
);

102 
	`bö¨y_hóp_‰ì
(
hóp
);

103 
	}
}

105 
	$ã°_max_hóp
()

107 
Bö¨yHóp
 *
hóp
;

108 *
vÆ
;

109 
i
;

111 
hóp
 = 
	`bö¨y_hóp_√w
(
BINARY_HEAP_TYPE_MAX
, 
öt_com∑ª
);

115 
i
=0; i<
NUM_TEST_VALUES
; ++i) {

116 
ã°_¨øy
[
i
] = i;

117 
	`as£π
(
	`bö¨y_hóp_ö£π
(
hóp
, &
ã°_¨øy
[
i
]) != 0);

122 
i
 = 
NUM_TEST_VALUES
;

123 
	`bö¨y_hóp_num_íåõs
(
hóp
) > 0) {

124 
vÆ
 = (*Ë
	`bö¨y_hóp_p›
(
hóp
);

126 
	`as£π
(*
vÆ
 =
i
 - 1);

127 
i
 = *
vÆ
;

130 
	`bö¨y_hóp_‰ì
(
hóp
);

131 
	}
}

135 
	$ã°_out_of_mem‹y
()

137 
Bö¨yHóp
 *
hóp
;

138 *
vÆue
;

139 
vÆues
[] = { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 };

140 
i
;

144 
hóp
 = 
	`bö¨y_hóp_√w
(
BINARY_HEAP_TYPE_MIN
, 
öt_com∑ª
);

146 
	`Æloc_ã°_£t_limô
(0);

148 
i
=0; i<16; ++i) {

149 
	`as£π
(
	`bö¨y_hóp_ö£π
(
hóp
, &
vÆues
[
i
]) != 0);

152 
	`as£π
(
	`bö¨y_hóp_num_íåõs
(
hóp
) == 16);

156 
i
=0; i<16; ++i) {

157 
	`as£π
(
	`bö¨y_hóp_ö£π
(
hóp
, &
vÆues
[
i
]) == 0);

158 
	`as£π
(
	`bö¨y_hóp_num_íåõs
(
hóp
) == 16);

164 
i
=0; i<16; ++i) {

165 
vÆue
 = 
	`bö¨y_hóp_p›
(
hóp
);

166 
	`as£π
(*
vÆue
 =
i
);

169 
	`as£π
(
	`bö¨y_hóp_num_íåõs
(
hóp
) == 0);

171 
	`bö¨y_hóp_‰ì
(
hóp
);

172 
	}
}

174 
UnôTe°Fun˘i⁄
 
	gã°s
[] = {

175 
ã°_bö¨y_hóp_√w_‰ì
,

176 
ã°_bö¨y_hóp_ö£π
,

177 
ã°_mö_hóp
,

178 
ã°_max_hóp
,

179 
ã°_out_of_mem‹y
,

180 
NULL


183 
	$maö
(
¨gc
, *
¨gv
[])

185 
	`run_ã°s
(
ã°s
);

188 
	}
}

	@test/test-binomial-heap.c

21 
	~<°dlib.h
>

22 
	~<as£π.h
>

24 
	~"Æloc-ã°ög.h
"

25 
	~"‰amew‹k.h
"

27 
	~"böomül-hóp.h
"

28 
	~"com∑ª-öt.h
"

30 
	#NUM_TEST_VALUES
 10000

	)

32 
	gã°_¨øy
[
NUM_TEST_VALUES
];

34 
	$ã°_böomül_hóp_√w_‰ì
()

36 
BöomülHóp
 *
hóp
;

37 
i
;

39 
i
=0; i<
NUM_TEST_VALUES
; ++i) {

40 
hóp
 = 
	`böomül_hóp_√w
(
BINOMIAL_HEAP_TYPE_MIN
, 
öt_com∑ª
);

41 
	`böomül_hóp_‰ì
(
hóp
);

46 
	`Æloc_ã°_£t_limô
(0);

48 
	`as£π
(
	`böomül_hóp_√w
(
BINOMIAL_HEAP_TYPE_MIN
, 
öt_com∑ª
Ë=
NULL
);

49 
	}
}

51 
	$ã°_böomül_hóp_ö£π
()

53 
BöomülHóp
 *
hóp
;

54 
i
;

56 
hóp
 = 
	`böomül_hóp_√w
(
BINOMIAL_HEAP_TYPE_MIN
, 
öt_com∑ª
);

58 
i
=0; i<
NUM_TEST_VALUES
; ++i) {

59 
ã°_¨øy
[
i
] = i;

60 
	`as£π
(
	`böomül_hóp_ö£π
(
hóp
, &
ã°_¨øy
[
i
]) != 0);

62 
	`as£π
(
	`böomül_hóp_num_íåõs
(
hóp
Ë=
NUM_TEST_VALUES
);

66 
	`Æloc_ã°_£t_limô
(0);

67 
	`as£π
(
	`böomül_hóp_ö£π
(
hóp
, &
i
) == 0);

69 
	`böomül_hóp_‰ì
(
hóp
);

70 
	}
}

72 
	$ã°_mö_hóp
()

74 
BöomülHóp
 *
hóp
;

75 *
vÆ
;

76 
i
;

78 
hóp
 = 
	`böomül_hóp_√w
(
BINOMIAL_HEAP_TYPE_MIN
, 
öt_com∑ª
);

82 
i
=0; i<
NUM_TEST_VALUES
; ++i) {

83 
ã°_¨øy
[
i
] = i;

84 
	`as£π
(
	`böomül_hóp_ö£π
(
hóp
, &
ã°_¨øy
[
i
]) != 0);

89 
i
 = -1;

90 
	`böomül_hóp_num_íåõs
(
hóp
) > 0) {

91 
vÆ
 = (*Ë
	`böomül_hóp_p›
(
hóp
);

93 
	`as£π
(*
vÆ
 =
i
 + 1);

94 
i
 = *
vÆ
;

99 
vÆ
 = (*Ë
	`böomül_hóp_p›
(
hóp
);

100 
	`as£π
(
vÆ
 =
NULL
);

102 
	`böomül_hóp_‰ì
(
hóp
);

103 
	}
}

105 
	$ã°_max_hóp
()

107 
BöomülHóp
 *
hóp
;

108 *
vÆ
;

109 
i
;

111 
hóp
 = 
	`böomül_hóp_√w
(
BINOMIAL_HEAP_TYPE_MAX
, 
öt_com∑ª
);

115 
i
=0; i<
NUM_TEST_VALUES
; ++i) {

116 
ã°_¨øy
[
i
] = i;

117 
	`as£π
(
	`böomül_hóp_ö£π
(
hóp
, &
ã°_¨øy
[
i
]) != 0);

122 
i
 = 
NUM_TEST_VALUES
;

123 
	`böomül_hóp_num_íåõs
(
hóp
) > 0) {

124 
vÆ
 = (*Ë
	`böomül_hóp_p›
(
hóp
);

126 
	`as£π
(*
vÆ
 =
i
 - 1);

127 
i
 = *
vÆ
;

132 
vÆ
 = (*Ë
	`böomül_hóp_p›
(
hóp
);

133 
	`as£π
(
vÆ
 =
NULL
);

135 
	`böomül_hóp_‰ì
(
hóp
);

136 
	}
}

138 
	#TEST_VALUE
 (
NUM_TEST_VALUES
 / 2)

	)

140 
BöomülHóp
 *
	$gíî©e_hóp
()

142 
BöomülHóp
 *
hóp
;

143 
i
;

145 
hóp
 = 
	`böomül_hóp_√w
(
BINOMIAL_HEAP_TYPE_MIN
, 
öt_com∑ª
);

149 
i
=0; i<
NUM_TEST_VALUES
; ++i) {

150 
ã°_¨øy
[
i
] = i;

151 i‡(
i
 !
TEST_VALUE
) {

152 
	`as£π
(
	`böomül_hóp_ö£π
(
hóp
, &
ã°_¨øy
[
i
]) != 0);

156  
hóp
;

157 
	}
}

162 
	$vîify_hóp
(
BöomülHóp
 *
hóp
)

164 
num_vÆs
;

165 *
vÆ
;

166 
i
;

168 
num_vÆs
 = 
	`böomül_hóp_num_íåõs
(
hóp
);

169 
	`as£π
(
num_vÆs
 =
NUM_TEST_VALUES
 - 1);

171 
i
=0; i<
NUM_TEST_VALUES
; ++i) {

172 i‡(
i
 =
TEST_VALUE
) {

178 
vÆ
 = 
	`böomül_hóp_p›
(
hóp
);

179 
	`as£π
(*
vÆ
 =
i
);

183 --
num_vÆs
;

184 
	`as£π
(
	`böomül_hóp_num_íåõs
(
hóp
Ë=
num_vÆs
);

186 
	}
}

190 
	$ã°_ö£π_out_of_mem‹y
()

192 
BöomülHóp
 *
hóp
;

193 
i
;

198 
i
=0; i<6; ++i) {

199 
hóp
 = 
	`gíî©e_hóp
();

203 
	`Æloc_ã°_£t_limô
(
i
);

204 
ã°_¨øy
[
TEST_VALUE
] = TEST_VALUE;

205 
	`as£π
(
	`böomül_hóp_ö£π
(
hóp
,

206 &
ã°_¨øy
[
TEST_VALUE
]) == 0);

207 
	`Æloc_ã°_£t_limô
(-1);

211 
	`vîify_hóp
(
hóp
);

213 
	`böomül_hóp_‰ì
(
hóp
);

215 
	}
}

219 
	$ã°_p›_out_of_mem‹y
()

221 
BöomülHóp
 *
hóp
;

222 
i
;

228 
i
=0; i<6; ++i) {

229 
hóp
 = 
	`gíî©e_hóp
();

233 
	`Æloc_ã°_£t_limô
(
i
);

234 
	`as£π
(
	`böomül_hóp_p›
(
hóp
Ë=
NULL
);

235 
	`Æloc_ã°_£t_limô
(-1);

239 
	`böomül_hóp_‰ì
(
hóp
);

241 
	}
}

243 
UnôTe°Fun˘i⁄
 
	gã°s
[] = {

244 
ã°_böomül_hóp_√w_‰ì
,

245 
ã°_böomül_hóp_ö£π
,

246 
ã°_mö_hóp
,

247 
ã°_max_hóp
,

248 
ã°_ö£π_out_of_mem‹y
,

249 
ã°_p›_out_of_mem‹y
,

250 
NULL


253 
	$maö
(
¨gc
, *
¨gv
[])

255 
	`run_ã°s
(
ã°s
);

258 
	}
}

	@test/test-bloom-filter.c

21 
	~<°dio.h
>

22 
	~<°dlib.h
>

23 
	~<as£π.h
>

25 
	~"Æloc-ã°ög.h
"

26 
	~"‰amew‹k.h
"

28 
	~"bloom-fûãr.h
"

29 
	~"hash-°rög.h
"

31 
	$ã°_bloom_fûãr_√w_‰ì
()

33 
BloomFûãr
 *
fûãr
;

37 
fûãr
 = 
	`bloom_fûãr_√w
(128, 
°rög_hash
, 1);

39 
	`as£π
(
fûãr
 !
NULL
);

41 
	`bloom_fûãr_‰ì
(
fûãr
);

45 
fûãr
 = 
	`bloom_fûãr_√w
(128, 
°rög_hash
, 64);

47 
	`as£π
(
fûãr
 !
NULL
);

49 
	`bloom_fûãr_‰ì
(
fûãr
);

53 
fûãr
 = 
	`bloom_fûãr_√w
(128, 
°rög_hash
, 50000);

55 
	`as£π
(
fûãr
 =
NULL
);

59 
	`Æloc_ã°_£t_limô
(0);

61 
fûãr
 = 
	`bloom_fûãr_√w
(128, 
°rög_hash
, 1);

63 
	`as£π
(
fûãr
 =
NULL
);

65 
	`Æloc_ã°_£t_limô
(1);

67 
fûãr
 = 
	`bloom_fûãr_√w
(128, 
°rög_hash
, 1);

69 
	`as£π
(
fûãr
 =
NULL
);

70 
	}
}

72 
	$ã°_bloom_fûãr_ö£π_quîy
()

74 
BloomFûãr
 *
fûãr
;

78 
fûãr
 = 
	`bloom_fûãr_√w
(128, 
°rög_hash
, 4);

82 
	`as£π
(
	`bloom_fûãr_quîy
(
fûãr
, "test 1") == 0);

83 
	`as£π
(
	`bloom_fûãr_quîy
(
fûãr
, "test 2") == 0);

87 
	`bloom_fûãr_ö£π
(
fûãr
, "test 1");

88 
	`bloom_fûãr_ö£π
(
fûãr
, "test 2");

92 
	`as£π
(
	`bloom_fûãr_quîy
(
fûãr
, "test 1") != 0);

93 
	`as£π
(
	`bloom_fûãr_quîy
(
fûãr
, "test 2") != 0);

95 
	`bloom_fûãr_‰ì
(
fûãr
);

96 
	}
}

98 
	$ã°_bloom_fûãr_ªad_lﬂd
()

100 
BloomFûãr
 *
fûãr1
;

101 
BloomFûãr
 *
fûãr2
;

102 
°©e
[16];

106 
fûãr1
 = 
	`bloom_fûãr_√w
(128, 
°rög_hash
, 4);

108 
	`bloom_fûãr_ö£π
(
fûãr1
, "test 1");

109 
	`bloom_fûãr_ö£π
(
fûãr1
, "test 2");

113 
	`bloom_fûãr_ªad
(
fûãr1
, 
°©e
);

115 
	`bloom_fûãr_‰ì
(
fûãr1
);

119 
fûãr2
 = 
	`bloom_fûãr_√w
(128, 
°rög_hash
, 4);

121 
	`bloom_fûãr_lﬂd
(
fûãr2
, 
°©e
);

125 
	`as£π
(
	`bloom_fûãr_quîy
(
fûãr2
, "test 1") != 0);

126 
	`as£π
(
	`bloom_fûãr_quîy
(
fûãr2
, "test 2") != 0);

128 
	`bloom_fûãr_‰ì
(
fûãr2
);

129 
	}
}

131 
	$ã°_bloom_fûãr_öãr£˘i⁄
()

133 
BloomFûãr
 *
fûãr1
;

134 
BloomFûãr
 *
fûãr2
;

135 
BloomFûãr
 *
ªsu…
;

139 
fûãr1
 = 
	`bloom_fûãr_√w
(128, 
°rög_hash
, 4);

141 
	`bloom_fûãr_ö£π
(
fûãr1
, "test 1");

142 
	`bloom_fûãr_ö£π
(
fûãr1
, "test 2");

146 
fûãr2
 = 
	`bloom_fûãr_√w
(128, 
°rög_hash
, 4);

148 
	`bloom_fûãr_ö£π
(
fûãr2
, "test 1");

154 
	`as£π
(
	`bloom_fûãr_quîy
(
fûãr2
, "test 2") == 0);

158 
ªsu…
 = 
	`bloom_fûãr_öãr£˘i⁄
(
fûãr1
, 
fûãr2
);

163 
	`as£π
(
	`bloom_fûãr_quîy
(
ªsu…
, "test 1") != 0);

164 
	`as£π
(
	`bloom_fûãr_quîy
(
ªsu…
, "test 2") == 0);

166 
	`bloom_fûãr_‰ì
(
ªsu…
);

170 
	`Æloc_ã°_£t_limô
(0);

171 
ªsu…
 = 
	`bloom_fûãr_öãr£˘i⁄
(
fûãr1
, 
fûãr2
);

172 
	`as£π
(
ªsu…
 =
NULL
);

174 
	`bloom_fûãr_‰ì
(
fûãr1
);

175 
	`bloom_fûãr_‰ì
(
fûãr2
);

176 
	}
}

178 
	$ã°_bloom_fûãr_uni⁄
()

180 
BloomFûãr
 *
fûãr1
;

181 
BloomFûãr
 *
fûãr2
;

182 
BloomFûãr
 *
ªsu…
;

186 
fûãr1
 = 
	`bloom_fûãr_√w
(128, 
°rög_hash
, 4);

188 
	`bloom_fûãr_ö£π
(
fûãr1
, "test 1");

192 
fûãr2
 = 
	`bloom_fûãr_√w
(128, 
°rög_hash
, 4);

194 
	`bloom_fûãr_ö£π
(
fûãr2
, "test 2");

198 
ªsu…
 = 
	`bloom_fûãr_uni⁄
(
fûãr1
, 
fûãr2
);

202 
	`as£π
(
	`bloom_fûãr_quîy
(
ªsu…
, "test 1") != 0);

203 
	`as£π
(
	`bloom_fûãr_quîy
(
ªsu…
, "test 2") != 0);

205 
	`bloom_fûãr_‰ì
(
ªsu…
);

209 
	`Æloc_ã°_£t_limô
(0);

210 
ªsu…
 = 
	`bloom_fûãr_uni⁄
(
fûãr1
, 
fûãr2
);

211 
	`as£π
(
ªsu…
 =
NULL
);

213 
	`bloom_fûãr_‰ì
(
fûãr1
);

214 
	`bloom_fûãr_‰ì
(
fûãr2
);

215 
	}
}

219 
	$ã°_bloom_fûãr_mism©ch
()

221 
BloomFûãr
 *
fûãr1
;

222 
BloomFûãr
 *
fûãr2
;

226 
fûãr1
 = 
	`bloom_fûãr_√w
(128, 
°rög_hash
, 4);

230 
fûãr2
 = 
	`bloom_fûãr_√w
(64, 
°rög_hash
, 4);

231 
	`as£π
(
	`bloom_fûãr_öãr£˘i⁄
(
fûãr1
, 
fûãr2
Ë=
NULL
);

232 
	`as£π
(
	`bloom_fûãr_uni⁄
(
fûãr1
, 
fûãr2
Ë=
NULL
);

233 
	`bloom_fûãr_‰ì
(
fûãr2
);

237 
fûãr2
 = 
	`bloom_fûãr_√w
(128, 
°rög_noˇ£_hash
, 4);

238 
	`as£π
(
	`bloom_fûãr_öãr£˘i⁄
(
fûãr1
, 
fûãr2
Ë=
NULL
);

239 
	`as£π
(
	`bloom_fûãr_uni⁄
(
fûãr1
, 
fûãr2
Ë=
NULL
);

240 
	`bloom_fûãr_‰ì
(
fûãr2
);

244 
fûãr2
 = 
	`bloom_fûãr_√w
(128, 
°rög_hash
, 32);

245 
	`as£π
(
	`bloom_fûãr_öãr£˘i⁄
(
fûãr1
, 
fûãr2
Ë=
NULL
);

246 
	`as£π
(
	`bloom_fûãr_uni⁄
(
fûãr1
, 
fûãr2
Ë=
NULL
);

247 
	`bloom_fûãr_‰ì
(
fûãr2
);

249 
	`bloom_fûãr_‰ì
(
fûãr1
);

250 
	}
}

252 
UnôTe°Fun˘i⁄
 
	gã°s
[] = {

253 
ã°_bloom_fûãr_√w_‰ì
,

254 
ã°_bloom_fûãr_ö£π_quîy
,

255 
ã°_bloom_fûãr_ªad_lﬂd
,

256 
ã°_bloom_fûãr_öãr£˘i⁄
,

257 
ã°_bloom_fûãr_uni⁄
,

258 
ã°_bloom_fûãr_mism©ch
,

259 
NULL


262 
	$maö
(
¨gc
, *
¨gv
[])

264 
	`run_ã°s
(
ã°s
);

267 
	}
}

	@test/test-compare-functions.c

23 
	~<°dio.h
>

24 
	~<°dlib.h
>

25 
	~<as£π.h
>

27 
	~"Æloc-ã°ög.h
"

28 
	~"‰amew‹k.h
"

30 
	~"com∑ª-öt.h
"

31 
	~"com∑ª-poöãr.h
"

32 
	~"com∑ª-°rög.h
"

34 
	$ã°_öt_com∑ª
()

36 
a
 = 4;

37 
b
 = 8;

38 
c
 = 4;

42 
	`as£π
(
	`öt_com∑ª
(&
a
, &
b
) < 0);

46 
	`as£π
(
	`öt_com∑ª
(&
b
, &
a
) > 0);

50 
	`as£π
(
	`öt_com∑ª
(&
a
, &
c
) == 0);

51 
	}
}

53 
	$ã°_öt_equÆ
()

55 
a
 = 4;

56 
b
 = 8;

57 
c
 = 4;

61 
	`as£π
(
	`öt_equÆ
(&
a
, &
c
) != 0);

65 
	`as£π
(
	`öt_equÆ
(&
a
, &
b
) == 0);

66 
	}
}

68 
	$ã°_poöãr_com∑ª
()

70 
¨øy
[5];

75 
	`as£π
(
	`poöãr_com∑ª
(&
¨øy
[0], &array[4]) < 0);

80 
	`as£π
(
	`poöãr_com∑ª
(&
¨øy
[3], &array[2]) > 0);

84 
	`as£π
(
	`poöãr_com∑ª
(&
¨øy
[4], &array[4]) == 0);

85 
	}
}

87 
	$ã°_poöãr_equÆ
()

89 
a
, 
b
;

93 
	`as£π
(
	`poöãr_equÆ
(&
a
, &a) != 0);

97 
	`as£π
(
	`poöãr_equÆ
(&
a
, &
b
) == 0);

98 
	}
}

100 
	$ã°_°rög_com∑ª
()

102 
ã°1
[] = "Apple";

103 
ã°2
[] = "Orange";

104 
ã°3
[] = "Apple";

108 
	`as£π
(
	`°rög_com∑ª
(
ã°1
, 
ã°2
) < 0);

112 
	`as£π
(
	`°rög_com∑ª
(
ã°2
, 
ã°1
) > 0);

116 
	`as£π
(
	`°rög_com∑ª
(
ã°1
, 
ã°3
) == 0);

117 
	}
}

119 
	$ã°_°rög_equÆ
()

121 
ã°1
[] = "this isáÅest string";

122 
ã°2
[] = "this isáÅest string ";

123 
ã°3
[] = "this isáÅest strin";

124 
ã°4
[] = "this isáÅest strinG";

125 
ã°5
[] = "this isáÅest string";

129 
	`as£π
(
	`°rög_equÆ
(
ã°1
, 
ã°5
) != 0);

134 
	`as£π
(
	`°rög_equÆ
(
ã°1
, 
ã°2
) == 0);

135 
	`as£π
(
	`°rög_equÆ
(
ã°1
, 
ã°3
) == 0);

138 
	`as£π
(
	`°rög_equÆ
(
ã°1
, 
ã°4
) == 0);

139 
	}
}

141 
	$ã°_°rög_noˇ£_com∑ª
()

143 
ã°1
[] = "Apple";

144 
ã°2
[] = "Orange";

145 
ã°3
[] = "Apple";

146 
ã°4
[] = "Alpha";

147 
ã°5
[] = "bravo";

148 
ã°6
[] = "Charlie";

152 
	`as£π
(
	`°rög_noˇ£_com∑ª
(
ã°1
, 
ã°2
) < 0);

156 
	`as£π
(
	`°rög_noˇ£_com∑ª
(
ã°2
, 
ã°1
) > 0);

160 
	`as£π
(
	`°rög_noˇ£_com∑ª
(
ã°1
, 
ã°3
) == 0);

164 
	`as£π
(
	`°rög_noˇ£_com∑ª
(
ã°4
, 
ã°5
) < 0);

165 
	`as£π
(
	`°rög_noˇ£_com∑ª
(
ã°5
, 
ã°6
) < 0);

166 
	}
}

168 
	$ã°_°rög_noˇ£_equÆ
()

170 
ã°1
[] = "this isáÅest string";

171 
ã°2
[] = "this isáÅest string ";

172 
ã°3
[] = "this isáÅest strin";

173 
ã°4
[] = "this isáÅest strinG";

174 
ã°5
[] = "this isáÅest string";

178 
	`as£π
(
	`°rög_noˇ£_equÆ
(
ã°1
, 
ã°5
) != 0);

183 
	`as£π
(
	`°rög_noˇ£_equÆ
(
ã°1
, 
ã°2
) == 0);

184 
	`as£π
(
	`°rög_noˇ£_equÆ
(
ã°1
, 
ã°3
) == 0);

187 
	`as£π
(
	`°rög_noˇ£_equÆ
(
ã°1
, 
ã°4
) != 0);

188 
	}
}

190 
UnôTe°Fun˘i⁄
 
	gã°s
[] = {

191 
ã°_öt_com∑ª
,

192 
ã°_öt_equÆ
,

193 
ã°_poöãr_com∑ª
,

194 
ã°_poöãr_equÆ
,

195 
ã°_°rög_com∑ª
,

196 
ã°_°rög_equÆ
,

197 
ã°_°rög_noˇ£_com∑ª
,

198 
ã°_°rög_noˇ£_equÆ
,

199 
NULL


202 
	$maö
(
¨gc
, *
¨gv
[])

204 
	`run_ã°s
(
ã°s
);

207 
	}
}

	@test/test-hash-functions.c

21 
	~<°dio.h
>

22 
	~<°dlib.h
>

23 
	~<as£π.h
>

25 
	~"Æloc-ã°ög.h
"

26 
	~"‰amew‹k.h
"

28 
	~"hash-poöãr.h
"

29 
	~"hash-öt.h
"

30 
	~"hash-°rög.h
"

32 
	#NUM_TEST_VALUES
 200

	)

34 
	$ã°_poöãr_hash
()

36 
¨øy
[
NUM_TEST_VALUES
];

37 
i
, 
j
;

41 
i
=0; i<
NUM_TEST_VALUES
; ++i) {

42 
¨øy
[
i
] = 0;

47 
i
=0; i<
NUM_TEST_VALUES
; ++i) {

48 
j
=
i
+1; j<
NUM_TEST_VALUES
; ++j) {

49 
	`as£π
(
	`poöãr_hash
(&
¨øy
[
i
]Ë!poöãr_hash(&¨øy[
j
]));

52 
	}
}

54 
	$ã°_öt_hash
()

56 
¨øy
[
NUM_TEST_VALUES
];

57 
i
, 
j
;

61 
i
=0; i<
NUM_TEST_VALUES
; ++i) {

62 
¨øy
[
i
] = i;

67 
i
=0; i<
NUM_TEST_VALUES
; ++i) {

68 
j
=
i
+1; j<
NUM_TEST_VALUES
; ++j) {

69 
	`as£π
(
	`öt_hash
(&
¨øy
[
i
]Ë!öt_hash(&¨øy[
j
]));

75 
i
 = 5000;

76 
j
 = 5000;

78 
	`as£π
(
	`öt_hash
(&
i
Ë=öt_hash(&
j
));

79 
	}
}

81 
	$ã°_°rög_hash
()

83 
ã°1
[] = "this isáÅest";

84 
ã°2
[] = "this isáÅesu";

85 
ã°3
[] = "this isáÅest ";

86 
ã°4
[] = "this isáÅest";

87 
ã°5
[] = "This isáÅest";

91 
	`as£π
(
	`°rög_hash
(
ã°1
Ë!°rög_hash(
ã°2
));

95 
	`as£π
(
	`°rög_hash
(
ã°1
Ë!°rög_hash(
ã°3
));

99 
	`as£π
(
	`°rög_hash
(
ã°1
Ë!°rög_hash(
ã°5
));

103 
	`as£π
(
	`°rög_hash
(
ã°1
Ë=°rög_hash(
ã°4
));

104 
	}
}

106 
	$ã°_°rög_noˇ£_hash
()

108 
ã°1
[] = "this isáÅest";

109 
ã°2
[] = "this isáÅesu";

110 
ã°3
[] = "this isáÅest ";

111 
ã°4
[] = "this isáÅest";

112 
ã°5
[] = "This isáÅest";

116 
	`as£π
(
	`°rög_noˇ£_hash
(
ã°1
Ë!°rög_noˇ£_hash(
ã°2
));

120 
	`as£π
(
	`°rög_noˇ£_hash
(
ã°1
Ë!°rög_noˇ£_hash(
ã°3
));

124 
	`as£π
(
	`°rög_noˇ£_hash
(
ã°1
Ë=°rög_noˇ£_hash(
ã°5
));

128 
	`as£π
(
	`°rög_noˇ£_hash
(
ã°1
Ë=°rög_noˇ£_hash(
ã°4
));

129 
	}
}

131 
UnôTe°Fun˘i⁄
 
	gã°s
[] = {

132 
ã°_poöãr_hash
,

133 
ã°_öt_hash
,

134 
ã°_°rög_hash
,

135 
ã°_°rög_noˇ£_hash
,

136 
NULL


139 
	$maö
(
¨gc
, *
¨gv
[])

141 
	`run_ã°s
(
ã°s
);

144 
	}
}

	@test/test-hash-table.c

21 
	~<°dio.h
>

22 
	~<°dlib.h
>

23 
	~<°rög.h
>

24 
	~<as£π.h
>

26 
	~"Æloc-ã°ög.h
"

27 
	~"‰amew‹k.h
"

29 
	~"hash-èbÀ.h
"

30 
	~"hash-öt.h
"

31 
	~"com∑ª-öt.h
"

32 
	~"hash-°rög.h
"

33 
	~"com∑ª-°rög.h
"

35 
	#NUM_TEST_VALUES
 10000

	)

37 
	gvÆue1
 = 1, 
	gvÆue2
 = 2, 
	gvÆue3
 = 3, 
	gvÆue4
 = 4;

38 
	gÆloˇãd_keys
 = 0;

39 
	gÆloˇãd_vÆues
 = 0;

43 
HashTabÀ
 *
	$gíî©e_hash_èbÀ
()

45 
HashTabÀ
 *
hash_èbÀ
;

46 
buf
[10];

47 *
vÆue
;

48 
i
;

55 
hash_èbÀ
 = 
	`hash_èbÀ_√w
(
°rög_hash
, 
°rög_equÆ
);

59 
i
=0; i<
NUM_TEST_VALUES
; ++i) {

60 
	`•rötf
(
buf
, "%i", 
i
);

62 
vÆue
 = 
	`°rdup
(
buf
);

64 
	`hash_èbÀ_ö£π
(
hash_èbÀ
, 
vÆue
, value);

69 
	`hash_èbÀ_ªgi°î_‰ì_fun˘i⁄s
(
hash_èbÀ
, 
NULL
, 
‰ì
);

71  
hash_èbÀ
;

72 
	}
}

76 
	$ã°_hash_èbÀ_√w_‰ì
()

78 
HashTabÀ
 *
hash_èbÀ
;

80 
hash_èbÀ
 = 
	`hash_èbÀ_√w
(
öt_hash
, 
öt_equÆ
);

82 
	`as£π
(
hash_èbÀ
 !
NULL
);

86 
	`hash_èbÀ_ö£π
(
hash_èbÀ
, &
vÆue1
, &value1);

87 
	`hash_èbÀ_ö£π
(
hash_èbÀ
, &
vÆue2
, &value2);

88 
	`hash_èbÀ_ö£π
(
hash_èbÀ
, &
vÆue3
, &value3);

89 
	`hash_èbÀ_ö£π
(
hash_èbÀ
, &
vÆue4
, &value4);

93 
	`hash_èbÀ_‰ì
(
hash_èbÀ
);

97 
	`Æloc_ã°_£t_limô
(0);

98 
hash_èbÀ
 = 
	`hash_èbÀ_√w
(
öt_hash
, 
öt_equÆ
);

99 
	`as£π
(
hash_èbÀ
 =
NULL
);

100 
	`as£π
(
	`Æloc_ã°_gë_Æloˇãd
() == 0);

102 
	`Æloc_ã°_£t_limô
(1);

103 
hash_èbÀ
 = 
	`hash_èbÀ_√w
(
öt_hash
, 
öt_equÆ
);

104 
	`as£π
(
hash_èbÀ
 =
NULL
);

105 
	`as£π
(
	`Æloc_ã°_gë_Æloˇãd
() == 0);

106 
	}
}

110 
	$ã°_hash_èbÀ_ö£π_lookup
()

112 
HashTabÀ
 *
hash_èbÀ
;

113 
buf
[10];

114 *
vÆue
;

115 
i
;

119 
hash_èbÀ
 = 
	`gíî©e_hash_èbÀ
();

121 
	`as£π
(
	`hash_èbÀ_num_íåõs
(
hash_èbÀ
Ë=
NUM_TEST_VALUES
);

125 
i
=0; i<
NUM_TEST_VALUES
; ++i) {

126 
	`•rötf
(
buf
, "%i", 
i
);

127 
vÆue
 = 
	`hash_èbÀ_lookup
(
hash_èbÀ
, 
buf
);

129 
	`as£π
(
	`°rcmp
(
vÆue
, 
buf
) == 0);

134 
	`•rötf
(
buf
, "%i", -1);

135 
	`as£π
(
	`hash_èbÀ_lookup
(
hash_èbÀ
, 
buf
Ë=
NULL
);

136 
	`•rötf
(
buf
, "%i", 
NUM_TEST_VALUES
);

137 
	`as£π
(
	`hash_èbÀ_lookup
(
hash_èbÀ
, 
buf
Ë=
NULL
);

141 
	`•rötf
(
buf
, "%i", 12345);

142 
	`hash_èbÀ_ö£π
(
hash_èbÀ
, 
buf
, 
	`°rdup
("hello world"));

143 
vÆue
 = 
	`hash_èbÀ_lookup
(
hash_èbÀ
, 
buf
);

144 
	`as£π
(
	`°rcmp
(
vÆue
, "hello world") == 0);

146 
	`hash_èbÀ_‰ì
(
hash_èbÀ
);

147 
	}
}

149 
	$ã°_hash_èbÀ_ªmove
()

151 
HashTabÀ
 *
hash_èbÀ
;

152 
buf
[10];

154 
hash_èbÀ
 = 
	`gíî©e_hash_èbÀ
();

156 
	`as£π
(
	`hash_èbÀ_num_íåõs
(
hash_èbÀ
Ë=
NUM_TEST_VALUES
);

157 
	`•rötf
(
buf
, "%i", 5000);

158 
	`as£π
(
	`hash_èbÀ_lookup
(
hash_èbÀ
, 
buf
Ë!
NULL
);

162 
	`hash_èbÀ_ªmove
(
hash_èbÀ
, 
buf
);

166 
	`as£π
(
	`hash_èbÀ_num_íåõs
(
hash_èbÀ
) == 9999);

170 
	`as£π
(
	`hash_èbÀ_lookup
(
hash_èbÀ
, 
buf
Ë=
NULL
);

174 
	`•rötf
(
buf
, "%i", -1);

175 
	`hash_èbÀ_ªmove
(
hash_èbÀ
, 
buf
);

177 
	`as£π
(
	`hash_èbÀ_num_íåõs
(
hash_èbÀ
) == 9999);

179 
	`hash_èbÀ_‰ì
(
hash_èbÀ
);

180 
	}
}

182 
	$ã°_hash_èbÀ_ôî©ög
()

184 
HashTabÀ
 *
hash_èbÀ
;

185 
HashTabÀIãøt‹
 
ôî©‹
;

186 
cou¡
;

188 
hash_èbÀ
 = 
	`gíî©e_hash_èbÀ
();

192 
cou¡
 = 0;

194 
	`hash_èbÀ_ôî©e
(
hash_èbÀ
, &
ôî©‹
);

196 
	`hash_èbÀ_ôî_has_m‹e
(&
ôî©‹
)) {

197 
	`hash_èbÀ_ôî_√xt
(&
ôî©‹
);

199 ++
cou¡
;

202 
	`as£π
(
cou¡
 =
NUM_TEST_VALUES
);

206 
	`as£π
(
	`hash_èbÀ_ôî_√xt
(&
ôî©‹
Ë=
HASH_TABLE_NULL
);

208 
	`hash_èbÀ_‰ì
(
hash_èbÀ
);

212 
hash_èbÀ
 = 
	`hash_èbÀ_√w
(
öt_hash
, 
öt_equÆ
);

214 
	`hash_èbÀ_ôî©e
(
hash_èbÀ
, &
ôî©‹
);

216 
	`as£π
(
	`hash_èbÀ_ôî_has_m‹e
(&
ôî©‹
) == 0);

218 
	`hash_èbÀ_‰ì
(
hash_èbÀ
);

219 
	}
}

225 
	$ã°_hash_èbÀ_ôî©ög_ªmove
()

227 
HashTabÀ
 *
hash_èbÀ
;

228 
HashTabÀIãøt‹
 
ôî©‹
;

229 
buf
[10];

230 *
vÆ
;

231 
cou¡
;

232 
ªmoved
;

233 
i
;

235 
hash_èbÀ
 = 
	`gíî©e_hash_èbÀ
();

239 
cou¡
 = 0;

240 
ªmoved
 = 0;

242 
	`hash_èbÀ_ôî©e
(
hash_èbÀ
, &
ôî©‹
);

244 
	`hash_èbÀ_ôî_has_m‹e
(&
ôî©‹
)) {

248 
vÆ
 = 
	`hash_èbÀ_ôî_√xt
(&
ôî©‹
);

252 i‡((
	`©oi
(
vÆ
) % 100) == 0) {

253 
	`hash_èbÀ_ªmove
(
hash_èbÀ
, 
vÆ
);

254 ++
ªmoved
;

257 ++
cou¡
;

262 
	`as£π
(
ªmoved
 == 100);

263 
	`as£π
(
cou¡
 =
NUM_TEST_VALUES
);

265 
	`as£π
(
	`hash_èbÀ_num_íåõs
(
hash_èbÀ
Ë=
NUM_TEST_VALUES
 - 
ªmoved
);

269 
i
=0; i<
NUM_TEST_VALUES
; ++i) {

270 
	`•rötf
(
buf
, "%i", 
i
);

272 i‡(
i
 % 100 == 0) {

273 
	`as£π
(
	`hash_èbÀ_lookup
(
hash_èbÀ
, 
buf
Ë=
NULL
);

275 
	`as£π
(
	`hash_èbÀ_lookup
(
hash_èbÀ
, 
buf
Ë!
NULL
);

279 
	`hash_èbÀ_‰ì
(
hash_èbÀ
);

280 
	}
}

284 *
	$√w_key
(
vÆue
)

286 *
ªsu…
;

288 
ªsu…
 = 
	`mÆloc
(());

289 *
ªsu…
 = 
vÆue
;

291 ++
Æloˇãd_keys
;

293  
ªsu…
;

294 
	}
}

298 
	$‰ì_key
(*
key
)

300 
	`‰ì
(
key
);

302 --
Æloˇãd_keys
;

303 
	}
}

307 *
	$√w_vÆue
(
vÆue
)

309 *
ªsu…
;

311 
ªsu…
 = 
	`mÆloc
(());

312 *
ªsu…
 = 
vÆue
;

314 ++
Æloˇãd_vÆues
;

316  
ªsu…
;

317 
	}
}

321 
	$‰ì_vÆue
(*
vÆue
)

323 
	`‰ì
(
vÆue
);

325 --
Æloˇãd_vÆues
;

326 
	}
}

330 
	$ã°_hash_èbÀ_‰ì_fun˘i⁄s
()

332 
HashTabÀ
 *
hash_èbÀ
;

333 *
key
;

334 *
vÆue
;

335 
i
;

339 
hash_èbÀ
 = 
	`hash_èbÀ_√w
(
öt_hash
, 
öt_equÆ
);

341 
	`hash_èbÀ_ªgi°î_‰ì_fun˘i⁄s
(
hash_èbÀ
, 
‰ì_key
, 
‰ì_vÆue
);

343 
Æloˇãd_vÆues
 = 0;

345 
i
=0; i<
NUM_TEST_VALUES
; ++i) {

346 
key
 = 
	`√w_key
(
i
);

347 
vÆue
 = 
	`√w_vÆue
(99);

349 
	`hash_èbÀ_ö£π
(
hash_èbÀ
, 
key
, 
vÆue
);

352 
	`as£π
(
Æloˇãd_keys
 =
NUM_TEST_VALUES
);

353 
	`as£π
(
Æloˇãd_vÆues
 =
NUM_TEST_VALUES
);

357 
i
 = 
NUM_TEST_VALUES
 / 2;

358 
	`hash_èbÀ_ªmove
(
hash_èbÀ
, &
i
);

360 
	`as£π
(
Æloˇãd_keys
 =
NUM_TEST_VALUES
 - 1);

361 
	`as£π
(
Æloˇãd_vÆues
 =
NUM_TEST_VALUES
 - 1);

365 
key
 = 
	`√w_key
(
NUM_TEST_VALUES
 / 3);

366 
vÆue
 = 
	`√w_vÆue
(999);

368 
	`as£π
(
Æloˇãd_keys
 =
NUM_TEST_VALUES
);

369 
	`as£π
(
Æloˇãd_vÆues
 =
NUM_TEST_VALUES
);

371 
	`hash_èbÀ_ö£π
(
hash_èbÀ
, 
key
, 
vÆue
);

373 
	`as£π
(
Æloˇãd_keys
 =
NUM_TEST_VALUES
 - 1);

374 
	`as£π
(
Æloˇãd_vÆues
 =
NUM_TEST_VALUES
 - 1);

378 
	`hash_èbÀ_‰ì
(
hash_èbÀ
);

380 
	`as£π
(
Æloˇãd_keys
 == 0);

381 
	`as£π
(
Æloˇãd_vÆues
 == 0);

382 
	}
}

386 
	$ã°_hash_èbÀ_out_of_mem‹y
()

388 
HashTabÀ
 *
hash_èbÀ
;

389 
vÆues
[66];

390 
i
;

392 
hash_èbÀ
 = 
	`hash_èbÀ_√w
(
öt_hash
, 
öt_equÆ
);

396 
	`Æloc_ã°_£t_limô
(0);

397 
vÆues
[0] = 0;

398 
	`as£π
(
	`hash_èbÀ_ö£π
(
hash_èbÀ
, &
vÆues
[0], &values[0]) == 0);

399 
	`as£π
(
	`hash_èbÀ_num_íåõs
(
hash_èbÀ
) == 0);

401 
	`Æloc_ã°_£t_limô
(-1);

408 
i
=0; i<65; ++i) {

409 
vÆues
[
i
] = () i;

411 
	`as£π
(
	`hash_èbÀ_ö£π
(
hash_èbÀ
,

412 &
vÆues
[
i
], &values[i]) != 0);

413 
	`as£π
(
	`hash_èbÀ_num_íåõs
(
hash_èbÀ
Ë=
i
 + 1);

416 
	`as£π
(
	`hash_èbÀ_num_íåõs
(
hash_èbÀ
) == 65);

420 
	`Æloc_ã°_£t_limô
(0);

422 
vÆues
[65] = 65;

424 
	`as£π
(
	`hash_èbÀ_ö£π
(
hash_èbÀ
, &
vÆues
[65], &values[65]) == 0);

425 
	`as£π
(
	`hash_èbÀ_num_íåõs
(
hash_èbÀ
) == 65);

427 
	`hash_èbÀ_‰ì
(
hash_èbÀ
);

428 
	}
}

430 
UnôTe°Fun˘i⁄
 
	gã°s
[] = {

431 
ã°_hash_èbÀ_√w_‰ì
,

432 
ã°_hash_èbÀ_ö£π_lookup
,

433 
ã°_hash_èbÀ_ªmove
,

434 
ã°_hash_èbÀ_ôî©ög
,

435 
ã°_hash_èbÀ_ôî©ög_ªmove
,

436 
ã°_hash_èbÀ_‰ì_fun˘i⁄s
,

437 
ã°_hash_èbÀ_out_of_mem‹y
,

438 
NULL


441 
	$maö
(
¨gc
, *
¨gv
[])

443 
	`run_ã°s
(
ã°s
);

446 
	}
}

	@test/test-list.c

21 
	~<°dio.h
>

22 
	~<°dlib.h
>

23 
	~<as£π.h
>

25 
	~"Æloc-ã°ög.h
"

26 
	~"‰amew‹k.h
"

28 
	~"li°.h
"

29 
	~"com∑ª-öt.h
"

31 
	gv¨übÀ1
 = 50, 
	gv¨übÀ2
, 
	gv¨übÀ3
, 
	gv¨übÀ4
;

35 
Li°E¡ry
 *
	$gíî©e_li°
()

37 
Li°E¡ry
 *
li°
 = 
NULL
;

39 
	`as£π
(
	`li°_≠≥nd
(&
li°
, &
v¨übÀ1
Ë!
NULL
);

40 
	`as£π
(
	`li°_≠≥nd
(&
li°
, &
v¨übÀ2
Ë!
NULL
);

41 
	`as£π
(
	`li°_≠≥nd
(&
li°
, &
v¨übÀ3
Ë!
NULL
);

42 
	`as£π
(
	`li°_≠≥nd
(&
li°
, &
v¨übÀ4
Ë!
NULL
);

44  
li°
;

45 
	}
}

47 
	$check_li°_öãgrôy
(
Li°E¡ry
 *
li°
)

49 
Li°E¡ry
 *
¥ev
;

50 
Li°E¡ry
 *
rovî
;

52 
¥ev
 = 
NULL
;

53 
rovî
 = 
li°
;

55 
rovî
 !
NULL
) {

56 
	`as£π
(
	`li°_¥ev
(
rovî
Ë=
¥ev
);

57 
¥ev
 = 
rovî
;

58 
rovî
 = 
	`li°_√xt
(rover);

60 
	}
}

62 
	$ã°_li°_≠≥nd
()

64 
Li°E¡ry
 *
li°
 = 
NULL
;

66 
	`as£π
(
	`li°_≠≥nd
(&
li°
, &
v¨übÀ1
Ë!
NULL
);

67 
	`check_li°_öãgrôy
(
li°
);

68 
	`as£π
(
	`li°_≠≥nd
(&
li°
, &
v¨übÀ2
Ë!
NULL
);

69 
	`check_li°_öãgrôy
(
li°
);

70 
	`as£π
(
	`li°_≠≥nd
(&
li°
, &
v¨übÀ3
Ë!
NULL
);

71 
	`check_li°_öãgrôy
(
li°
);

72 
	`as£π
(
	`li°_≠≥nd
(&
li°
, &
v¨übÀ4
Ë!
NULL
);

73 
	`check_li°_öãgrôy
(
li°
);

75 
	`as£π
(
	`li°_Àngth
(
li°
) == 4);

77 
	`as£π
(
	`li°_¡h_d©a
(
li°
, 0Ë=&
v¨übÀ1
);

78 
	`as£π
(
	`li°_¡h_d©a
(
li°
, 1Ë=&
v¨übÀ2
);

79 
	`as£π
(
	`li°_¡h_d©a
(
li°
, 2Ë=&
v¨übÀ3
);

80 
	`as£π
(
	`li°_¡h_d©a
(
li°
, 3Ë=&
v¨übÀ4
);

84 
	`Æloc_ã°_£t_limô
(0);

85 
	`as£π
(
	`li°_Àngth
(
li°
) == 4);

86 
	`as£π
(
	`li°_≠≥nd
(&
li°
, &
v¨übÀ1
Ë=
NULL
);

87 
	`as£π
(
	`li°_Àngth
(
li°
) == 4);

88 
	`check_li°_öãgrôy
(
li°
);

90 
	`li°_‰ì
(
li°
);

91 
	}
}

93 
	$ã°_li°_¥ïíd
()

95 
Li°E¡ry
 *
li°
 = 
NULL
;

97 
	`as£π
(
	`li°_¥ïíd
(&
li°
, &
v¨übÀ1
Ë!
NULL
);

98 
	`check_li°_öãgrôy
(
li°
);

99 
	`as£π
(
	`li°_¥ïíd
(&
li°
, &
v¨übÀ2
Ë!
NULL
);

100 
	`check_li°_öãgrôy
(
li°
);

101 
	`as£π
(
	`li°_¥ïíd
(&
li°
, &
v¨übÀ3
Ë!
NULL
);

102 
	`check_li°_öãgrôy
(
li°
);

103 
	`as£π
(
	`li°_¥ïíd
(&
li°
, &
v¨übÀ4
Ë!
NULL
);

104 
	`check_li°_öãgrôy
(
li°
);

106 
	`as£π
(
	`li°_¡h_d©a
(
li°
, 0Ë=&
v¨übÀ4
);

107 
	`as£π
(
	`li°_¡h_d©a
(
li°
, 1Ë=&
v¨übÀ3
);

108 
	`as£π
(
	`li°_¡h_d©a
(
li°
, 2Ë=&
v¨übÀ2
);

109 
	`as£π
(
	`li°_¡h_d©a
(
li°
, 3Ë=&
v¨übÀ1
);

113 
	`Æloc_ã°_£t_limô
(0);

114 
	`as£π
(
	`li°_Àngth
(
li°
) == 4);

115 
	`as£π
(
	`li°_¥ïíd
(&
li°
, &
v¨übÀ1
Ë=
NULL
);

116 
	`as£π
(
	`li°_Àngth
(
li°
) == 4);

117 
	`check_li°_öãgrôy
(
li°
);

119 
	`li°_‰ì
(
li°
);

120 
	}
}

122 
	$ã°_li°_‰ì
()

124 
Li°E¡ry
 *
li°
;

128 
li°
 = 
	`gíî©e_li°
();

130 
	`li°_‰ì
(
li°
);

134 
	`li°_‰ì
(
NULL
);

135 
	}
}

137 
	$ã°_li°_√xt
()

139 
Li°E¡ry
 *
li°
;

140 
Li°E¡ry
 *
rovî
;

142 
li°
 = 
	`gíî©e_li°
();

144 
rovî
 = 
li°
;

145 
	`as£π
(
	`li°_d©a
(
rovî
Ë=&
v¨übÀ1
);

146 
rovî
 = 
	`li°_√xt
(rover);

147 
	`as£π
(
	`li°_d©a
(
rovî
Ë=&
v¨übÀ2
);

148 
rovî
 = 
	`li°_√xt
(rover);

149 
	`as£π
(
	`li°_d©a
(
rovî
Ë=&
v¨übÀ3
);

150 
rovî
 = 
	`li°_√xt
(rover);

151 
	`as£π
(
	`li°_d©a
(
rovî
Ë=&
v¨übÀ4
);

152 
rovî
 = 
	`li°_√xt
(rover);

153 
	`as£π
(
rovî
 =
NULL
);

155 
	`li°_‰ì
(
li°
);

156 
	}
}

158 
	$ã°_li°_¡h_íåy
()

160 
Li°E¡ry
 *
li°
;

161 
Li°E¡ry
 *
íåy
;

163 
li°
 = 
	`gíî©e_li°
();

167 
íåy
 = 
	`li°_¡h_íåy
(
li°
, 0);

168 
	`as£π
(
	`li°_d©a
(
íåy
Ë=&
v¨übÀ1
);

169 
íåy
 = 
	`li°_¡h_íåy
(
li°
, 1);

170 
	`as£π
(
	`li°_d©a
(
íåy
Ë=&
v¨übÀ2
);

171 
íåy
 = 
	`li°_¡h_íåy
(
li°
, 2);

172 
	`as£π
(
	`li°_d©a
(
íåy
Ë=&
v¨übÀ3
);

173 
íåy
 = 
	`li°_¡h_íåy
(
li°
, 3);

174 
	`as£π
(
	`li°_d©a
(
íåy
Ë=&
v¨übÀ4
);

178 
íåy
 = 
	`li°_¡h_íåy
(
li°
, 4);

179 
	`as£π
(
íåy
 =
NULL
);

180 
íåy
 = 
	`li°_¡h_íåy
(
li°
, 400);

181 
	`as£π
(
íåy
 =
NULL
);

183 
	`li°_‰ì
(
li°
);

184 
	}
}

186 
	$ã°_li°_¡h_d©a
()

188 
Li°E¡ry
 *
li°
;

190 
li°
 = 
	`gíî©e_li°
();

194 
	`as£π
(
	`li°_¡h_d©a
(
li°
, 0Ë=&
v¨übÀ1
);

195 
	`as£π
(
	`li°_¡h_d©a
(
li°
, 1Ë=&
v¨übÀ2
);

196 
	`as£π
(
	`li°_¡h_d©a
(
li°
, 2Ë=&
v¨übÀ3
);

197 
	`as£π
(
	`li°_¡h_d©a
(
li°
, 3Ë=&
v¨übÀ4
);

201 
	`as£π
(
	`li°_¡h_d©a
(
li°
, 4Ë=
NULL
);

202 
	`as£π
(
	`li°_¡h_d©a
(
li°
, 400Ë=
NULL
);

204 
	`li°_‰ì
(
li°
);

205 
	}
}

207 
	$ã°_li°_Àngth
()

209 
Li°E¡ry
 *
li°
;

213 
li°
 = 
	`gíî©e_li°
();

215 
	`as£π
(
	`li°_Àngth
(
li°
) == 4);

219 
	`as£π
(
	`li°_¥ïíd
(&
li°
, &
v¨übÀ1
Ë!
NULL
);

221 
	`as£π
(
	`li°_Àngth
(
li°
) == 5);

223 
	`li°_‰ì
(
li°
);

227 
	`as£π
(
	`li°_Àngth
(
NULL
) == 0);

228 
	}
}

230 
	$ã°_li°_ªmove_íåy
()

232 
Li°E¡ry
 *
em±y_li°
 = 
NULL
;

233 
Li°E¡ry
 *
li°
;

234 
Li°E¡ry
 *
íåy
;

236 
li°
 = 
	`gíî©e_li°
();

240 
íåy
 = 
	`li°_¡h_íåy
(
li°
, 2);

241 
	`as£π
(
	`li°_ªmove_íåy
(&
li°
, 
íåy
) != 0);

242 
	`as£π
(
	`li°_Àngth
(
li°
) == 3);

243 
	`check_li°_öãgrôy
(
li°
);

247 
íåy
 = 
	`li°_¡h_íåy
(
li°
, 0);

248 
	`as£π
(
	`li°_ªmove_íåy
(&
li°
, 
íåy
) != 0);

249 
	`as£π
(
	`li°_Àngth
(
li°
) == 2);

250 
	`check_li°_öãgrôy
(
li°
);

256 
	`as£π
(
	`li°_ªmove_íåy
(&
li°
, 
NULL
) == 0);

260 
	`as£π
(
	`li°_ªmove_íåy
(&
em±y_li°
, 
NULL
) == 0);

262 
	`li°_‰ì
(
li°
);

266 
li°
 = 
NULL
;

267 
	`as£π
(
	`li°_≠≥nd
(&
li°
, &
v¨übÀ1
Ë!
NULL
);

268 
	`as£π
(
li°
 !
NULL
);

269 
	`as£π
(
	`li°_ªmove_íåy
(&
li°
,Üist) != 0);

270 
	`as£π
(
li°
 =
NULL
);

274 
li°
 = 
	`gíî©e_li°
();

275 
íåy
 = 
	`li°_¡h_íåy
(
li°
, 3);

276 
	`as£π
(
	`li°_ªmove_íåy
(&
li°
, 
íåy
) != 0);

277 
	`check_li°_öãgrôy
(
li°
);

278 
	`li°_‰ì
(
li°
);

279 
	}
}

281 
	$ã°_li°_ªmove_d©a
()

283 
íåõs
[] = { 89, 4, 23, 42, 4, 16, 15, 4, 8, 99, 50, 30, 4 };

284 
num_íåõs
 = (
íåõs
) / ();

285 
vÆ
;

286 
Li°E¡ry
 *
li°
;

287 
i
;

291 
li°
 = 
NULL
;

293 
i
=0; i<
num_íåõs
; ++i) {

294 
	`as£π
(
	`li°_¥ïíd
(&
li°
, &
íåõs
[
i
]Ë!
NULL
);

299 
vÆ
 = 0;

300 
	`as£π
(
	`li°_ªmove_d©a
(&
li°
, 
öt_equÆ
, &
vÆ
) == 0);

301 
vÆ
 = 56;

302 
	`as£π
(
	`li°_ªmove_d©a
(&
li°
, 
öt_equÆ
, &
vÆ
) == 0);

303 
	`check_li°_öãgrôy
(
li°
);

307 
vÆ
 = 8;

308 
	`as£π
(
	`li°_ªmove_d©a
(&
li°
, 
öt_equÆ
, &
vÆ
) == 1);

309 
	`as£π
(
	`li°_Àngth
(
li°
Ë=
num_íåõs
 - 1);

310 
	`check_li°_öãgrôy
(
li°
);

314 
vÆ
 = 4;

315 
	`as£π
(
	`li°_ªmove_d©a
(&
li°
, 
öt_equÆ
, &
vÆ
) == 4);

316 
	`as£π
(
	`li°_Àngth
(
li°
Ë=
num_íåõs
 - 5);

317 
	`check_li°_öãgrôy
(
li°
);

321 
vÆ
 = 89;

322 
	`as£π
(
	`li°_ªmove_d©a
(&
li°
, 
öt_equÆ
, &
vÆ
) == 1);

323 
	`as£π
(
	`li°_Àngth
(
li°
Ë=
num_íåõs
 - 6);

324 
	`check_li°_öãgrôy
(
li°
);

326 
	`li°_‰ì
(
li°
);

327 
	}
}

329 
	$ã°_li°_s‹t
()

331 
Li°E¡ry
 *
li°
;

332 
íåõs
[] = { 89, 4, 23, 42, 4, 16, 15, 4, 8, 99, 50, 30, 4 };

333 
s‹ãd
[] = { 4, 4, 4, 4, 8, 15, 16, 23, 30, 42, 50, 89, 99 };

334 
num_íåõs
 = (
íåõs
) / ();

335 
i
;

337 
li°
 = 
NULL
;

339 
i
=0; i<
num_íåõs
; ++i) {

340 
	`as£π
(
	`li°_¥ïíd
(&
li°
, &
íåõs
[
i
]Ë!
NULL
);

343 
	`li°_s‹t
(&
li°
, 
öt_com∑ª
);

347 
	`as£π
(
	`li°_Àngth
(
li°
Ë=
num_íåõs
);

351 
i
=0; i<
num_íåõs
; ++i) {

352 *
vÆue
;

354 
vÆue
 = (*Ë
	`li°_¡h_d©a
(
li°
, 
i
);

355 
	`as£π
(*
vÆue
 =
s‹ãd
[
i
]);

358 
	`li°_‰ì
(
li°
);

362 
li°
 = 
NULL
;

364 
	`li°_s‹t
(&
li°
, 
öt_com∑ª
);

366 
	`as£π
(
li°
 =
NULL
);

367 
	}
}

369 
	$ã°_li°_föd_d©a
()

371 
íåõs
[] = { 89, 23, 42, 16, 15, 4, 8, 99, 50, 30 };

372 
num_íåõs
 = (
íåõs
) / ();

373 
Li°E¡ry
 *
li°
;

374 
Li°E¡ry
 *
ªsu…
;

375 
i
;

376 
vÆ
;

377 *
d©a
;

381 
li°
 = 
NULL
;

382 
i
=0; i<
num_íåõs
; ++i) {

383 
	`as£π
(
	`li°_≠≥nd
(&
li°
, &
íåõs
[
i
]Ë!
NULL
);

388 
i
=0; i<
num_íåõs
; ++i) {

390 
vÆ
 = 
íåõs
[
i
];

392 
ªsu…
 = 
	`li°_föd_d©a
(
li°
, 
öt_equÆ
, &
vÆ
);

394 
	`as£π
(
ªsu…
 !
NULL
);

396 
d©a
 = (*Ë
	`li°_d©a
(
ªsu…
);

397 
	`as£π
(*
d©a
 =
vÆ
);

402 
vÆ
 = 0;

403 
	`as£π
(
	`li°_föd_d©a
(
li°
, 
öt_equÆ
, &
vÆ
Ë=
NULL
);

404 
vÆ
 = 56;

405 
	`as£π
(
	`li°_föd_d©a
(
li°
, 
öt_equÆ
, &
vÆ
Ë=
NULL
);

407 
	`li°_‰ì
(
li°
);

408 
	}
}

410 
	$ã°_li°_to_¨øy
()

412 
Li°E¡ry
 *
li°
;

413 **
¨øy
;

415 
li°
 = 
	`gíî©e_li°
();

417 
¨øy
 = 
	`li°_to_¨øy
(
li°
);

419 
	`as£π
(
¨øy
[0] =&
v¨übÀ1
);

420 
	`as£π
(
¨øy
[1] =&
v¨übÀ2
);

421 
	`as£π
(
¨øy
[2] =&
v¨übÀ3
);

422 
	`as£π
(
¨øy
[3] =&
v¨übÀ4
);

424 
	`‰ì
(
¨øy
);

428 
	`Æloc_ã°_£t_limô
(0);

430 
¨øy
 = 
	`li°_to_¨øy
(
li°
);

431 
	`as£π
(
¨øy
 =
NULL
);

433 
	`li°_‰ì
(
li°
);

434 
	}
}

436 
	$ã°_li°_ôî©e
()

438 
Li°E¡ry
 *
li°
;

439 
Li°Iãøt‹
 
ôî
;

440 
i
;

441 
a
;

442 
cou¡î
;

443 *
d©a
;

447 
li°
 = 
NULL
;

449 
i
=0; i<50; ++i) {

450 
	`as£π
(
	`li°_¥ïíd
(&
li°
, &
a
Ë!
NULL
);

455 
cou¡î
 = 0;

457 
	`li°_ôî©e
(&
li°
, &
ôî
);

461 
	`li°_ôî_ªmove
(&
ôî
);

465 
	`li°_ôî_has_m‹e
(&
ôî
)) {

466 
d©a
 = (*Ë
	`li°_ôî_√xt
(&
ôî
);

467 ++
cou¡î
;

469 i‡((
cou¡î
 % 2) == 0) {

472 
	`li°_ôî_ªmove
(&
ôî
);

476 
	`li°_ôî_ªmove
(&
ôî
);

482 
	`as£π
(
	`li°_ôî_√xt
(&
ôî
Ë=
NULL
);

486 
	`li°_ôî_ªmove
(&
ôî
);

488 
	`as£π
(
cou¡î
 == 50);

489 
	`as£π
(
	`li°_Àngth
(
li°
) == 25);

491 
	`li°_‰ì
(
li°
);

495 
li°
 = 
NULL
;

496 
cou¡î
 = 0;

498 
	`li°_ôî©e
(&
li°
, &
ôî
);

500 
	`li°_ôî_has_m‹e
(&
ôî
)) {

501 
d©a
 = (*Ë
	`li°_ôî_√xt
(&
ôî
);

502 ++
cou¡î
;

505 
	`as£π
(
cou¡î
 == 0);

506 
	}
}

511 
	$ã°_li°_ôî©e_bad_ªmove
()

513 
Li°E¡ry
 *
li°
;

514 
Li°Iãøt‹
 
ôî
;

515 
vÆues
[49];

516 
i
;

517 *
vÆ
;

521 
li°
 = 
NULL
;

523 
i
=0; i<49; ++i) {

524 
vÆues
[
i
] = i;

525 
	`as£π
(
	`li°_¥ïíd
(&
li°
, &
vÆues
[
i
]Ë!
NULL
);

532 
	`li°_ôî©e
(&
li°
, &
ôî
);

534 
	`li°_ôî_has_m‹e
(&
ôî
)) {

535 
vÆ
 = 
	`li°_ôî_√xt
(&
ôî
);

541 i‡((*
vÆ
 % 2) == 0) {

542 
	`as£π
(
	`li°_ªmove_d©a
(&
li°
, 
öt_equÆ
, 
vÆ
) != 0);

543 
	`li°_ôî_ªmove
(&
ôî
);

547 
	`li°_‰ì
(
li°
);

548 
	}
}

550 
UnôTe°Fun˘i⁄
 
	gã°s
[] = {

551 
ã°_li°_≠≥nd
,

552 
ã°_li°_¥ïíd
,

553 
ã°_li°_‰ì
,

554 
ã°_li°_√xt
,

555 
ã°_li°_¡h_íåy
,

556 
ã°_li°_¡h_d©a
,

557 
ã°_li°_Àngth
,

558 
ã°_li°_ªmove_íåy
,

559 
ã°_li°_ªmove_d©a
,

560 
ã°_li°_s‹t
,

561 
ã°_li°_föd_d©a
,

562 
ã°_li°_to_¨øy
,

563 
ã°_li°_ôî©e
,

564 
ã°_li°_ôî©e_bad_ªmove
,

565 
NULL


568 
	$maö
(
¨gc
, *
¨gv
[])

570 
	`run_ã°s
(
ã°s
);

573 
	}
}

	@test/test-queue.c

21 
	~<°dio.h
>

22 
	~<°dlib.h
>

23 
	~<as£π.h
>

25 
	~"Æloc-ã°ög.h
"

26 
	~"‰amew‹k.h
"

28 
	~"queue.h
"

30 
	gv¨übÀ1
, 
	gv¨übÀ2
, 
	gv¨übÀ3
, 
	gv¨übÀ4
;

32 
Queue
 *
	$gíî©e_queue
()

34 
Queue
 *
queue
;

35 
i
;

37 
queue
 = 
	`queue_√w
();

41 
i
=0; i<1000; ++i) {

42 
	`queue_push_hód
(
queue
, &
v¨übÀ1
);

43 
	`queue_push_hód
(
queue
, &
v¨übÀ2
);

44 
	`queue_push_hód
(
queue
, &
v¨übÀ3
);

45 
	`queue_push_hód
(
queue
, &
v¨übÀ4
);

48  
queue
;

49 
	}
}

53 
	$ã°_queue_√w_‰ì
()

55 
i
;

56 
Queue
 *
queue
;

60 
queue
 = 
	`queue_√w
();

62 
	`queue_‰ì
(
queue
);

66 
queue
 = 
	`queue_√w
();

68 
i
=0; i<1000; ++i) {

69 
	`queue_push_hód
(
queue
, &
v¨übÀ1
);

72 
	`queue_‰ì
(
queue
);

76 
	`Æloc_ã°_£t_limô
(0);

77 
queue
 = 
	`queue_√w
();

78 
	`as£π
(
queue
 =
NULL
);

79 
	}
}

81 
	$ã°_queue_push_hód
()

83 
Queue
 *
queue
;

84 
i
;

86 
queue
 = 
	`queue_√w
();

90 
i
=0; i<1000; ++i) {

91 
	`queue_push_hód
(
queue
, &
v¨übÀ1
);

92 
	`queue_push_hód
(
queue
, &
v¨übÀ2
);

93 
	`queue_push_hód
(
queue
, &
v¨übÀ3
);

94 
	`queue_push_hód
(
queue
, &
v¨übÀ4
);

97 
	`as£π
(!
	`queue_is_em±y
(
queue
));

101 
	`as£π
(
	`queue_p›_èû
(
queue
Ë=&
v¨übÀ1
);

102 
	`as£π
(
	`queue_p›_èû
(
queue
Ë=&
v¨übÀ2
);

103 
	`as£π
(
	`queue_p›_èû
(
queue
Ë=&
v¨übÀ3
);

104 
	`as£π
(
	`queue_p›_èû
(
queue
Ë=&
v¨übÀ4
);

108 
	`as£π
(
	`queue_p›_hód
(
queue
Ë=&
v¨übÀ4
);

109 
	`as£π
(
	`queue_p›_hód
(
queue
Ë=&
v¨übÀ3
);

110 
	`as£π
(
	`queue_p›_hód
(
queue
Ë=&
v¨übÀ2
);

111 
	`as£π
(
	`queue_p›_hód
(
queue
Ë=&
v¨übÀ1
);

113 
	`queue_‰ì
(
queue
);

117 
queue
 = 
	`queue_√w
();

119 
	`Æloc_ã°_£t_limô
(0);

120 
	`as£π
(!
	`queue_push_hód
(
queue
, &
v¨übÀ1
));

122 
	`queue_‰ì
(
queue
);

123 
	}
}

125 
	$ã°_queue_p›_hód
()

127 
Queue
 *
queue
;

131 
queue
 = 
	`queue_√w
();

133 
	`as£π
(
	`queue_p›_hód
(
queue
Ë=
NULL
);

135 
	`queue_‰ì
(
queue
);

139 
queue
 = 
	`gíî©e_queue
();

141 !
	`queue_is_em±y
(
queue
)) {

142 
	`as£π
(
	`queue_p›_hód
(
queue
Ë=&
v¨übÀ4
);

143 
	`as£π
(
	`queue_p›_hód
(
queue
Ë=&
v¨übÀ3
);

144 
	`as£π
(
	`queue_p›_hód
(
queue
Ë=&
v¨übÀ2
);

145 
	`as£π
(
	`queue_p›_hód
(
queue
Ë=&
v¨übÀ1
);

148 
	`as£π
(
	`queue_p›_hód
(
queue
Ë=
NULL
);

150 
	`queue_‰ì
(
queue
);

151 
	}
}

153 
	$ã°_queue_≥ek_hód
()

155 
Queue
 *
queue
;

159 
queue
 = 
	`queue_√w
();

161 
	`as£π
(
	`queue_≥ek_hód
(
queue
Ë=
NULL
);

163 
	`queue_‰ì
(
queue
);

168 
queue
 = 
	`gíî©e_queue
();

170 !
	`queue_is_em±y
(
queue
)) {

171 
	`as£π
(
	`queue_≥ek_hód
(
queue
Ë=&
v¨übÀ4
);

172 
	`as£π
(
	`queue_p›_hód
(
queue
Ë=&
v¨übÀ4
);

173 
	`as£π
(
	`queue_≥ek_hód
(
queue
Ë=&
v¨übÀ3
);

174 
	`as£π
(
	`queue_p›_hód
(
queue
Ë=&
v¨übÀ3
);

175 
	`as£π
(
	`queue_≥ek_hód
(
queue
Ë=&
v¨übÀ2
);

176 
	`as£π
(
	`queue_p›_hód
(
queue
Ë=&
v¨übÀ2
);

177 
	`as£π
(
	`queue_≥ek_hód
(
queue
Ë=&
v¨übÀ1
);

178 
	`as£π
(
	`queue_p›_hód
(
queue
Ë=&
v¨übÀ1
);

181 
	`as£π
(
	`queue_≥ek_hód
(
queue
Ë=
NULL
);

183 
	`queue_‰ì
(
queue
);

184 
	}
}

186 
	$ã°_queue_push_èû
()

188 
Queue
 *
queue
;

189 
i
;

191 
queue
 = 
	`queue_√w
();

195 
i
=0; i<1000; ++i) {

196 
	`queue_push_èû
(
queue
, &
v¨übÀ1
);

197 
	`queue_push_èû
(
queue
, &
v¨übÀ2
);

198 
	`queue_push_èû
(
queue
, &
v¨übÀ3
);

199 
	`queue_push_èû
(
queue
, &
v¨übÀ4
);

202 
	`as£π
(!
	`queue_is_em±y
(
queue
));

206 
	`as£π
(
	`queue_p›_hód
(
queue
Ë=&
v¨übÀ1
);

207 
	`as£π
(
	`queue_p›_hód
(
queue
Ë=&
v¨übÀ2
);

208 
	`as£π
(
	`queue_p›_hód
(
queue
Ë=&
v¨übÀ3
);

209 
	`as£π
(
	`queue_p›_hód
(
queue
Ë=&
v¨übÀ4
);

213 
	`as£π
(
	`queue_p›_èû
(
queue
Ë=&
v¨übÀ4
);

214 
	`as£π
(
	`queue_p›_èû
(
queue
Ë=&
v¨übÀ3
);

215 
	`as£π
(
	`queue_p›_èû
(
queue
Ë=&
v¨übÀ2
);

216 
	`as£π
(
	`queue_p›_èû
(
queue
Ë=&
v¨übÀ1
);

218 
	`queue_‰ì
(
queue
);

222 
queue
 = 
	`queue_√w
();

224 
	`Æloc_ã°_£t_limô
(0);

225 
	`as£π
(!
	`queue_push_èû
(
queue
, &
v¨übÀ1
));

227 
	`queue_‰ì
(
queue
);

228 
	}
}

230 
	$ã°_queue_p›_èû
()

232 
Queue
 *
queue
;

236 
queue
 = 
	`queue_√w
();

238 
	`as£π
(
	`queue_p›_èû
(
queue
Ë=
NULL
);

240 
	`queue_‰ì
(
queue
);

244 
queue
 = 
	`gíî©e_queue
();

246 !
	`queue_is_em±y
(
queue
)) {

247 
	`as£π
(
	`queue_p›_èû
(
queue
Ë=&
v¨übÀ1
);

248 
	`as£π
(
	`queue_p›_èû
(
queue
Ë=&
v¨übÀ2
);

249 
	`as£π
(
	`queue_p›_èû
(
queue
Ë=&
v¨übÀ3
);

250 
	`as£π
(
	`queue_p›_èû
(
queue
Ë=&
v¨übÀ4
);

253 
	`as£π
(
	`queue_p›_èû
(
queue
Ë=
NULL
);

255 
	`queue_‰ì
(
queue
);

256 
	}
}

258 
	$ã°_queue_≥ek_èû
()

260 
Queue
 *
queue
;

264 
queue
 = 
	`queue_√w
();

266 
	`as£π
(
	`queue_≥ek_èû
(
queue
Ë=
NULL
);

268 
	`queue_‰ì
(
queue
);

273 
queue
 = 
	`gíî©e_queue
();

275 !
	`queue_is_em±y
(
queue
)) {

276 
	`as£π
(
	`queue_≥ek_èû
(
queue
Ë=&
v¨übÀ1
);

277 
	`as£π
(
	`queue_p›_èû
(
queue
Ë=&
v¨übÀ1
);

278 
	`as£π
(
	`queue_≥ek_èû
(
queue
Ë=&
v¨übÀ2
);

279 
	`as£π
(
	`queue_p›_èû
(
queue
Ë=&
v¨übÀ2
);

280 
	`as£π
(
	`queue_≥ek_èû
(
queue
Ë=&
v¨übÀ3
);

281 
	`as£π
(
	`queue_p›_èû
(
queue
Ë=&
v¨übÀ3
);

282 
	`as£π
(
	`queue_≥ek_èû
(
queue
Ë=&
v¨übÀ4
);

283 
	`as£π
(
	`queue_p›_èû
(
queue
Ë=&
v¨übÀ4
);

286 
	`as£π
(
	`queue_≥ek_èû
(
queue
Ë=
NULL
);

288 
	`queue_‰ì
(
queue
);

289 
	}
}

291 
	$ã°_queue_is_em±y
()

293 
Queue
 *
queue
;

295 
queue
 = 
	`queue_√w
();

297 
	`as£π
(
	`queue_is_em±y
(
queue
));

299 
	`queue_push_hód
(
queue
, &
v¨übÀ1
);

301 
	`as£π
(!
	`queue_is_em±y
(
queue
));

303 
	`queue_p›_hód
(
queue
);

305 
	`as£π
(
	`queue_is_em±y
(
queue
));

307 
	`queue_push_èû
(
queue
, &
v¨übÀ1
);

309 
	`as£π
(!
	`queue_is_em±y
(
queue
));

311 
	`queue_p›_èû
(
queue
);

313 
	`as£π
(
	`queue_is_em±y
(
queue
));

315 
	`queue_‰ì
(
queue
);

316 
	}
}

318 
UnôTe°Fun˘i⁄
 
	gã°s
[] = {

319 
ã°_queue_√w_‰ì
,

320 
ã°_queue_push_hód
,

321 
ã°_queue_p›_hód
,

322 
ã°_queue_≥ek_hód
,

323 
ã°_queue_push_èû
,

324 
ã°_queue_p›_èû
,

325 
ã°_queue_≥ek_èû
,

326 
ã°_queue_is_em±y
,

327 
NULL


330 
	$maö
(
¨gc
, *
¨gv
[])

332 
	`run_ã°s
(
ã°s
);

335 
	}
}

	@test/test-rb-tree.c

21 
	~<°dio.h
>

22 
	~<°dlib.h
>

23 
	~<as£π.h
>

25 
	~"Æloc-ã°ög.h
"

26 
	~"‰amew‹k.h
"

28 
	~"rb-åì.h
"

29 
	~"com∑ª-öt.h
"

31 
	#NUM_TEST_VALUES
 1000

	)

33 
	gã°_¨øy
[
NUM_TEST_VALUES
];

38 
	$¥öt_åì
(
RBTªeNode
 *
node
, 
dïth
)

40 *
vÆue
;

41 
i
;

43 i‡(
node
 =
NULL
) {

47 
	`¥öt_åì
(
	`rb_åì_node_chûd
(
node
, 
RB_TREE_NODE_LEFT
), 
dïth
 + 1);

49 
i
=0; i<
dïth
*6; ++i) {

50 
	`¥ötf
(" ");

53 
vÆue
 = 
	`rb_åì_node_key
(
node
);

54 
	`¥ötf
("%i\n", *
vÆue
);

56 
	`¥öt_åì
(
	`rb_åì_node_chûd
(
node
, 
RB_TREE_NODE_RIGHT
), 
dïth
 + 1);

57 
	}
}

60 
	$föd_subåì_height
(
RBTªeNode
 *
node
)

62 
RBTªeNode
 *
À·_subåì
;

63 
RBTªeNode
 *
right_subåì
;

64 
À·_height
, 
right_height
;

66 i‡(
node
 =
NULL
) {

70 
À·_subåì
 = 
	`rb_åì_node_chûd
(
node
, 
RB_TREE_NODE_LEFT
);

71 
right_subåì
 = 
	`rb_åì_node_chûd
(
node
, 
RB_TREE_NODE_RIGHT
);

72 
À·_height
 = 
	`föd_subåì_height
(
À·_subåì
);

73 
right_height
 = 
	`föd_subåì_height
(
right_subåì
);

75 i‡(
À·_height
 > 
right_height
) {

76  
À·_height
 + 1;

78  
right_height
 + 1;

80 
	}
}

82 
	$vÆid©e_åì
(
RBTªe
 *
åì
)

84 
	}
}

86 
RBTªe
 *
	$¸óã_åì
()

88 
RBTªe
 *
åì
;

89 
i
;

93 
åì
 = 
	`rb_åì_√w
((
RBTªeCom∑ªFunc
Ë
öt_com∑ª
);

95 
i
=0; i<
NUM_TEST_VALUES
; ++i) {

96 
ã°_¨øy
[
i
] = i;

97 
	`rb_åì_ö£π
(
åì
, &
ã°_¨øy
[
i
], &test_array[i]);

100  
åì
;

101 
	}
}

103 
	$ã°_rb_åì_√w
()

105 
RBTªe
 *
åì
;

107 
åì
 = 
	`rb_åì_√w
((
RBTªeCom∑ªFunc
Ë
öt_com∑ª
);

109 
	`as£π
(
åì
 !
NULL
);

110 
	`as£π
(
	`rb_åì_roŸ_node
(
åì
Ë=
NULL
);

111 
	`as£π
(
	`rb_åì_num_íåõs
(
åì
) == 0);

113 
	`rb_åì_‰ì
(
åì
);

117 
	`Æloc_ã°_£t_limô
(0);

119 
åì
 = 
	`rb_åì_√w
((
RBTªeCom∑ªFunc
Ë
öt_com∑ª
);

121 
	`as£π
(
åì
 =
NULL
);

123 
	}
}

125 
	$ã°_rb_åì_ö£π_lookup
()

127 
RBTªe
 *
åì
;

128 
RBTªeNode
 *
node
;

129 
i
;

130 *
vÆue
;

135 
åì
 = 
	`rb_åì_√w
((
RBTªeCom∑ªFunc
Ë
öt_com∑ª
);

137 
i
=0; i<
NUM_TEST_VALUES
; ++i) {

138 
ã°_¨øy
[
i
] = i;

139 
	`rb_åì_ö£π
(
åì
, &
ã°_¨øy
[
i
], &test_array[i]);

141 
	`as£π
(
	`rb_åì_num_íåõs
(
åì
Ë=
i
 + 1);

142 
	`vÆid©e_åì
(
åì
);

145 
	`as£π
(
	`rb_åì_roŸ_node
(
åì
Ë!
NULL
);

149 
i
=0; i<
NUM_TEST_VALUES
; ++i) {

150 
node
 = 
	`rb_åì_lookup_node
(
åì
, &
i
);

151 
	`as£π
(
node
 !
NULL
);

152 
vÆue
 = 
	`rb_åì_node_key
(
node
);

153 
	`as£π
(*
vÆue
 =
i
);

154 
vÆue
 = 
	`rb_åì_node_vÆue
(
node
);

155 
	`as£π
(*
vÆue
 =
i
);

160 
i
 = -1;

161 
	`as£π
(
	`rb_åì_lookup_node
(
åì
, &
i
Ë=
NULL
);

162 
i
 = 
NUM_TEST_VALUES
 + 100;

163 
	`as£π
(
	`rb_åì_lookup_node
(
åì
, &
i
Ë=
NULL
);

165 
	`rb_åì_‰ì
(
åì
);

166 
	}
}

168 
	$ã°_rb_åì_chûd
()

170 
RBTªe
 *
åì
;

171 
RBTªeNode
 *
roŸ
;

172 
RBTªeNode
 *
À·
;

173 
RBTªeNode
 *
right
;

174 
vÆues
[] = { 1, 2, 3 };

175 *
p
;

176 
i
;

181 
åì
 = 
	`rb_åì_√w
((
RBTªeCom∑ªFunc
Ë
öt_com∑ª
);

183 
i
=0; i<3; ++i) {

184 
	`rb_åì_ö£π
(
åì
, &
vÆues
[
i
], &values[i]);

189 
roŸ
 = 
	`rb_åì_roŸ_node
(
åì
);

190 
p
 = 
	`rb_åì_node_vÆue
(
roŸ
);

191 
	`as£π
(*
p
 == 2);

193 
À·
 = 
	`rb_åì_node_chûd
(
roŸ
, 
RB_TREE_NODE_LEFT
);

194 
p
 = 
	`rb_åì_node_vÆue
(
À·
);

195 
	`as£π
(*
p
 == 1);

197 
right
 = 
	`rb_åì_node_chûd
(
roŸ
, 
RB_TREE_NODE_RIGHT
);

198 
p
 = 
	`rb_åì_node_vÆue
(
right
);

199 
	`as£π
(*
p
 == 3);

203 
	`as£π
(
	`rb_åì_node_chûd
(
roŸ
, -1Ë=
NULL
);

204 
	`as£π
(
	`rb_åì_node_chûd
(
roŸ
, 10000Ë=
NULL
);

205 
	`as£π
(
	`rb_åì_node_chûd
(
roŸ
, 2Ë=
NULL
);

206 
	`as£π
(
	`rb_åì_node_chûd
(
roŸ
, -100000Ë=
NULL
);

208 
	`rb_åì_‰ì
(
åì
);

209 
	}
}

211 
	$ã°_out_of_mem‹y
()

213 
RBTªe
 *
åì
;

214 
RBTªeNode
 *
node
;

215 
i
;

219 
åì
 = 
	`¸óã_åì
();

223 
	`Æloc_ã°_£t_limô
(0);

227 
i
=10000; i<20000; ++i) {

228 
node
 = 
	`rb_åì_ö£π
(
åì
, &
i
, &i);

229 
	`as£π
(
node
 =
NULL
);

230 
	`vÆid©e_åì
(
åì
);

233 
	`rb_åì_‰ì
(
åì
);

234 
	}
}

236 
	$ã°_rb_åì_‰ì
()

238 
RBTªe
 *
åì
;

242 
åì
 = 
	`rb_åì_√w
((
RBTªeCom∑ªFunc
Ë
öt_com∑ª
);

243 
	`rb_åì_‰ì
(
åì
);

247 
åì
 = 
	`¸óã_åì
();

248 
	`rb_åì_‰ì
(
åì
);

249 
	}
}

251 
	$ã°_rb_åì_lookup
()

253 
RBTªe
 *
åì
;

254 
i
;

255 *
vÆue
;

259 
åì
 = 
	`¸óã_åì
();

261 
i
=0; i<
NUM_TEST_VALUES
; ++i) {

262 
vÆue
 = 
	`rb_åì_lookup
(
åì
, &
i
);

264 
	`as£π
(
vÆue
 !
NULL
);

265 
	`as£π
(*
vÆue
 =
i
);

270 
i
 = -1;

271 
	`as£π
(
	`rb_åì_lookup
(
åì
, &
i
Ë=
NULL
);

272 
i
 = 
NUM_TEST_VALUES
 + 1;

273 
	`as£π
(
	`rb_åì_lookup
(
åì
, &
i
Ë=
NULL
);

274 
i
 = 8724897;

275 
	`as£π
(
	`rb_åì_lookup
(
åì
, &
i
Ë=
NULL
);

277 
	`rb_åì_‰ì
(
åì
);

278 
	}
}

280 
	$ã°_rb_åì_ªmove
()

282 
RBTªe
 *
åì
;

283 
i
;

284 
x
, 
y
, 
z
;

285 
vÆue
;

286 
ex≥˘ed_íåõs
;

288 
åì
 = 
	`¸óã_åì
();

292 
i
 = 
NUM_TEST_VALUES
 + 100;

293 
	`as£π
(
	`rb_åì_ªmove
(
åì
, &
i
) == 0);

294 
i
 = -1;

295 
	`as£π
(
	`rb_åì_ªmove
(
åì
, &
i
) == 0);

299 
ex≥˘ed_íåõs
 = 
NUM_TEST_VALUES
;

304 
x
=0; x<10; ++x) {

305 
y
=0; y<10; ++y) {

306 
z
=0; z<10; ++z) {

307 
vÆue
 = 
z
 * 100 + (9 - 
y
Ë* 10 + 
x
;

308 
	`as£π
(
	`rb_åì_ªmove
(
åì
, &
vÆue
) != 0);

309 
	`vÆid©e_åì
(
åì
);

310 
ex≥˘ed_íåõs
 -= 1;

311 
	`as£π
(
	`rb_åì_num_íåõs
(
åì
)

312 =
ex≥˘ed_íåõs
);

319 
	`as£π
(
	`rb_åì_roŸ_node
(
åì
Ë=
NULL
);

321 
	`rb_åì_‰ì
(
åì
);

322 
	}
}

324 
	$ã°_rb_åì_to_¨øy
()

326 
RBTªe
 *
åì
;

327 
íåõs
[] = { 89, 23, 42, 4, 16, 15, 8, 99, 50, 30 };

328 
s‹ãd
[] = { 4, 8, 15, 16, 23, 30, 42, 50, 89, 99 };

329 
num_íåõs
 = (
íåõs
) / ();

330 
i
;

331 **
¨øy
;

335 
åì
 = 
	`rb_åì_√w
((
RBTªeCom∑ªFunc
Ë
öt_com∑ª
);

337 
i
=0; i<
num_íåõs
; ++i) {

338 
	`rb_åì_ö£π
(
åì
, &
íåõs
[
i
], 
NULL
);

341 
	`as£π
(
	`rb_åì_num_íåõs
(
åì
Ë=
num_íåõs
);

345 
¨øy
 = (**Ë
	`rb_åì_to_¨øy
(
åì
);

347 
i
=0; i<
num_íåõs
; ++i) {

348 
	`as£π
(*
¨øy
[
i
] =
s‹ãd
[i]);

351 
	`‰ì
(
¨øy
);

355 
	`Æloc_ã°_£t_limô
(0);

357 
¨øy
 = (**Ë
	`rb_åì_to_¨øy
(
åì
);

358 
	`as£π
(
¨øy
 =
NULL
);

359 
	`vÆid©e_åì
(
åì
);

361 
	`rb_åì_‰ì
(
åì
);

362 
	}
}

364 
UnôTe°Fun˘i⁄
 
	gã°s
[] = {

365 
ã°_rb_åì_√w
,

366 
ã°_rb_åì_‰ì
,

367 
ã°_rb_åì_chûd
,

368 
ã°_rb_åì_ö£π_lookup
,

369 
ã°_rb_åì_lookup
,

372 
ã°_out_of_mem‹y
,

373 
NULL


376 
	$maö
(
¨gc
, *
¨gv
[])

378 
	`run_ã°s
(
ã°s
);

380 
	}
}

	@test/test-set.c

21 
	~<°dio.h
>

22 
	~<°dlib.h
>

23 
	~<°rög.h
>

24 
	~<as£π.h
>

26 
	~"Æloc-ã°ög.h
"

27 
	~"‰amew‹k.h
"

29 
	~"£t.h
"

30 
	~"com∑ª-öt.h
"

31 
	~"hash-öt.h
"

32 
	~"com∑ª-poöãr.h
"

33 
	~"hash-poöãr.h
"

34 
	~"com∑ª-°rög.h
"

35 
	~"hash-°rög.h
"

37 
	gÆloˇãd_vÆues
;

39 
Së
 *
	$gíî©e_£t
()

41 
Së
 *
£t
;

42 
buf
[10];

43 
i
;

44 *
vÆue
;

46 
£t
 = 
	`£t_√w
(
°rög_hash
, 
°rög_equÆ
);

51 
i
=0; i<10000; ++i) {

52 
	`•rötf
(
buf
, "%i", 
i
);

53 
vÆue
 = 
	`°rdup
(
buf
);

55 
	`£t_ö£π
(
£t
, 
vÆue
);

57 
	`as£π
(
	`£t_num_íåõs
(
£t
Ë=
i
 + 1);

60 
	`£t_ªgi°î_‰ì_fun˘i⁄
(
£t
, 
‰ì
);

62  
£t
;

63 
	}
}

65 
	$ã°_£t_√w_‰ì
()

67 
Së
 *
£t
;

68 
i
;

69 *
vÆue
;

71 
£t
 = 
	`£t_√w
(
öt_hash
, 
öt_equÆ
);

73 
	`£t_ªgi°î_‰ì_fun˘i⁄
(
£t
, 
‰ì
);

75 
	`as£π
(
£t
 !
NULL
);

79 
i
=0; i<10000; ++i) {

80 
vÆue
 = (*Ë
	`mÆloc
(());

82 *
vÆue
 = 
i
;

84 
	`£t_ö£π
(
£t
, 
vÆue
);

89 
	`£t_‰ì
(
£t
);

93 
	`Æloc_ã°_£t_limô
(0);

94 
£t
 = 
	`£t_√w
(
öt_hash
, 
öt_equÆ
);

95 
	`as£π
(
£t
 =
NULL
);

97 
	`Æloc_ã°_£t_limô
(1);

98 
£t
 = 
	`£t_√w
(
öt_hash
, 
öt_equÆ
);

99 
	`as£π
(
£t
 =
NULL
);

100 
	`as£π
(
	`Æloc_ã°_gë_Æloˇãd
() == 0);

101 
	}
}

103 
	$ã°_£t_ö£π
()

105 
Së
 *
£t
;

106 
numbîs1
[] = { 1, 2, 3, 4, 5, 6 };

107 
numbîs2
[] = { 5, 6, 7, 8, 9, 10 };

108 
i
;

113 
£t
 = 
	`£t_√w
(
öt_hash
, 
öt_equÆ
);

115 
i
=0; i<6; ++i) {

116 
	`£t_ö£π
(
£t
, &
numbîs1
[
i
]);

118 
i
=0; i<6; ++i) {

119 
	`£t_ö£π
(
£t
, &
numbîs2
[
i
]);

122 
	`as£π
(
	`£t_num_íåõs
(
£t
) == 10);

124 
	`£t_‰ì
(
£t
);

125 
	}
}

127 
	$ã°_£t_quîy
()

129 
Së
 *
£t
;

130 
buf
[10];

131 
i
;

133 
£t
 = 
	`gíî©e_£t
();

137 
i
=0; i<10000; ++i) {

138 
	`•rötf
(
buf
, "%i", 
i
);

139 
	`as£π
(
	`£t_quîy
(
£t
, 
buf
) != 0);

144 
	`as£π
(
	`£t_quîy
(
£t
, "-1") == 0);

145 
	`as£π
(
	`£t_quîy
(
£t
, "100001") == 0);

147 
	`£t_‰ì
(
£t
);

148 
	}
}

150 
	$ã°_£t_ªmove
()

152 
Së
 *
£t
;

153 
buf
[10];

154 
i
;

155 
num_íåõs
;

157 
£t
 = 
	`gíî©e_£t
();

159 
num_íåõs
 = 
	`£t_num_íåõs
(
£t
);

160 
	`as£π
(
num_íåõs
 == 10000);

164 
i
=4000; i<6000; ++i) {

166 
	`•rötf
(
buf
, "%i", 
i
);

170 
	`as£π
(
	`£t_quîy
(
£t
, 
buf
) != 0);

174 
	`as£π
(
	`£t_ªmove
(
£t
, 
buf
) != 0);

178 
	`as£π
(
	`£t_num_íåõs
(
£t
Ë=
num_íåõs
 - 1);

182 
	`as£π
(
	`£t_quîy
(
£t
, 
buf
) == 0);

184 --
num_íåõs
;

189 
i
=-1000; i<-500; ++i) {

190 
	`•rötf
(
buf
, "%i", 
i
);

192 
	`as£π
(
	`£t_ªmove
(
£t
, 
buf
) == 0);

193 
	`as£π
(
	`£t_num_íåõs
(
£t
Ë=
num_íåõs
);

196 
i
=50000; i<51000; ++i) {

197 
	`•rötf
(
buf
, "%i", 
i
);

199 
	`as£π
(
	`£t_ªmove
(
£t
, 
buf
) == 0);

200 
	`as£π
(
	`£t_num_íåõs
(
£t
Ë=
num_íåõs
);

203 
	`£t_‰ì
(
£t
);

204 
	}
}

206 
	$ã°_£t_uni⁄
()

208 
numbîs1
[] = {1, 2, 3, 4, 5, 6, 7};

209 
numbîs2
[] = {5, 6, 7, 8, 9, 10, 11};

210 
ªsu…
[] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11};

211 
i
;

212 
Së
 *
£t1
;

213 
Së
 *
£t2
;

214 
Së
 *
ªsu…_£t
;

215 
size_t
 
Æloˇãd
;

219 
£t1
 = 
	`£t_√w
(
öt_hash
, 
öt_equÆ
);

221 
i
=0; i<7; ++i) {

222 
	`£t_ö£π
(
£t1
, &
numbîs1
[
i
]);

227 
£t2
 = 
	`£t_√w
(
öt_hash
, 
öt_equÆ
);

229 
i
=0; i<7; ++i) {

230 
	`£t_ö£π
(
£t2
, &
numbîs2
[
i
]);

235 
ªsu…_£t
 = 
	`£t_uni⁄
(
£t1
, 
£t2
);

237 
	`as£π
(
	`£t_num_íåõs
(
ªsu…_£t
) == 11);

239 
i
=0; i<11; ++i) {

240 
	`as£π
(
	`£t_quîy
(
ªsu…_£t
, &
ªsu…
[
i
]) != 0);

243 
	`£t_‰ì
(
ªsu…_£t
);

247 
	`Æloc_ã°_£t_limô
(0);

248 
	`as£π
(
	`£t_uni⁄
(
£t1
, 
£t2
Ë=
NULL
);

252 
	`Æloc_ã°_£t_limô
(2 + 2);

253 
Æloˇãd
 = 
	`Æloc_ã°_gë_Æloˇãd
();

254 
	`as£π
(
	`£t_uni⁄
(
£t1
, 
£t2
Ë=
NULL
);

255 
	`as£π
(
	`Æloc_ã°_gë_Æloˇãd
(Ë=
Æloˇãd
);

260 
	`Æloc_ã°_£t_limô
(2 + 7 + 2);

261 
Æloˇãd
 = 
	`Æloc_ã°_gë_Æloˇãd
();

262 
	`as£π
(
	`£t_uni⁄
(
£t1
, 
£t2
Ë=
NULL
);

263 
	`as£π
(
	`Æloc_ã°_gë_Æloˇãd
(Ë=
Æloˇãd
);

265 
	`£t_‰ì
(
£t1
);

266 
	`£t_‰ì
(
£t2
);

267 
	}
}

269 
	$ã°_£t_öãr£˘i⁄
()

271 
numbîs1
[] = {1, 2, 3, 4, 5, 6, 7};

272 
numbîs2
[] = {5, 6, 7, 8, 9, 10, 11};

273 
ªsu…
[] = {5, 6, 7};

274 
i
;

275 
Së
 *
£t1
;

276 
Së
 *
£t2
;

277 
Së
 *
ªsu…_£t
;

278 
size_t
 
Æloˇãd
;

282 
£t1
 = 
	`£t_√w
(
öt_hash
, 
öt_equÆ
);

284 
i
=0; i<7; ++i) {

285 
	`£t_ö£π
(
£t1
, &
numbîs1
[
i
]);

290 
£t2
 = 
	`£t_√w
(
öt_hash
, 
öt_equÆ
);

292 
i
=0; i<7; ++i) {

293 
	`£t_ö£π
(
£t2
, &
numbîs2
[
i
]);

298 
ªsu…_£t
 = 
	`£t_öãr£˘i⁄
(
£t1
, 
£t2
);

300 
	`as£π
(
	`£t_num_íåõs
(
ªsu…_£t
) == 3);

302 
i
=0; i<3; ++i) {

303 
	`as£π
(
	`£t_quîy
(
ªsu…_£t
, &
ªsu…
[
i
]) != 0);

308 
	`Æloc_ã°_£t_limô
(0);

309 
	`as£π
(
	`£t_öãr£˘i⁄
(
£t1
, 
£t2
Ë=
NULL
);

313 
	`Æloc_ã°_£t_limô
(2 + 2);

314 
Æloˇãd
 = 
	`Æloc_ã°_gë_Æloˇãd
();

315 
	`as£π
(
	`£t_öãr£˘i⁄
(
£t1
, 
£t2
Ë=
NULL
);

316 
	`as£π
(
	`Æloc_ã°_gë_Æloˇãd
(Ë=
Æloˇãd
);

318 
	`£t_‰ì
(
£t1
);

319 
	`£t_‰ì
(
£t2
);

320 
	`£t_‰ì
(
ªsu…_£t
);

321 
	}
}

323 
	$ã°_£t_to_¨øy
()

325 
Së
 *
£t
;

326 
vÆues
[100];

327 **
¨øy
;

328 
i
;

333 
£t
 = 
	`£t_√w
(
poöãr_hash
, 
poöãr_equÆ
);

335 
i
=0; i<100; ++i) {

336 
vÆues
[
i
] = 1;

337 
	`£t_ö£π
(
£t
, &
vÆues
[
i
]);

340 
¨øy
 = (**Ë
	`£t_to_¨øy
(
£t
);

344 
i
=0; i<100; ++i) {

345 
	`as£π
(*
¨øy
[
i
] == 1);

346 *
¨øy
[
i
] = 0;

351 
	`Æloc_ã°_£t_limô
(0);

352 
	`as£π
(
	`£t_to_¨øy
(
£t
Ë=
NULL
);

354 
	`‰ì
(
¨øy
);

355 
	`£t_‰ì
(
£t
);

356 
	}
}

358 
	$ã°_£t_ôî©ög
()

360 
Së
 *
£t
;

361 
SëIãøt‹
 
ôî©‹
;

362 
cou¡
;

364 
£t
 = 
	`gíî©e_£t
();

368 
cou¡
 = 0;

369 
	`£t_ôî©e
(
£t
, &
ôî©‹
);

371 
	`£t_ôî_has_m‹e
(&
ôî©‹
)) {

373 
	`£t_ôî_√xt
(&
ôî©‹
);

375 ++
cou¡
;

380 
	`as£π
(
	`£t_ôî_√xt
(&
ôî©‹
Ë=
NULL
);

384 
	`as£π
(
cou¡
 == 10000);

386 
	`£t_‰ì
(
£t
);

390 
£t
 = 
	`£t_√w
(
öt_hash
, 
öt_equÆ
);

392 
	`£t_ôî©e
(
£t
, &
ôî©‹
);

394 
	`as£π
(
	`£t_ôî_has_m‹e
(&
ôî©‹
) == 0);

396 
	`£t_‰ì
(
£t
);

397 
	}
}

403 
	$ã°_£t_ôî©ög_ªmove
()

405 
Së
 *
£t
;

406 
SëIãøt‹
 
ôî©‹
;

407 
cou¡
;

408 
ªmoved
;

409 *
vÆue
;

411 
£t
 = 
	`gíî©e_£t
();

413 
cou¡
 = 0;

414 
ªmoved
 = 0;

418 
	`£t_ôî©e
(
£t
, &
ôî©‹
);

420 
	`£t_ôî_has_m‹e
(&
ôî©‹
)) {

422 
vÆue
 = 
	`£t_ôî_√xt
(&
ôî©‹
);

424 i‡((
	`©oi
(
vÆue
) % 100) == 0) {

428 
	`£t_ªmove
(
£t
, 
vÆue
);

430 ++
ªmoved
;

433 ++
cou¡
;

438 
	`as£π
(
cou¡
 == 10000);

439 
	`as£π
(
ªmoved
 == 100);

440 
	`as£π
(
	`£t_num_íåõs
(
£t
Ë=10000 - 
ªmoved
);

442 
	`£t_‰ì
(
£t
);

443 
	}
}

445 *
	$√w_vÆue
(
vÆue
)

447 *
ªsu…
;

449 
ªsu…
 = 
	`mÆloc
(());

450 *
ªsu…
 = 
vÆue
;

452 ++
Æloˇãd_vÆues
;

454  
ªsu…
;

455 
	}
}

457 
	$‰ì_vÆue
(*
vÆue
)

459 
	`‰ì
(
vÆue
);

461 --
Æloˇãd_vÆues
;

462 
	}
}

464 
	$ã°_£t_‰ì_fun˘i⁄
()

466 
Së
 *
£t
;

467 
i
;

468 *
vÆue
;

472 
£t
 = 
	`£t_√w
(
öt_hash
, 
öt_equÆ
);

474 
	`£t_ªgi°î_‰ì_fun˘i⁄
(
£t
, 
‰ì_vÆue
);

476 
Æloˇãd_vÆues
 = 0;

478 
i
=0; i<1000; ++i) {

479 
vÆue
 = 
	`√w_vÆue
(
i
);

481 
	`£t_ö£π
(
£t
, 
vÆue
);

484 
	`as£π
(
Æloˇãd_vÆues
 == 1000);

488 
i
 = 500;

489 
	`£t_ªmove
(
£t
, &
i
);

491 
	`as£π
(
Æloˇãd_vÆues
 == 999);

495 
	`£t_‰ì
(
£t
);

497 
	`as£π
(
Æloˇãd_vÆues
 == 0);

498 
	}
}

502 
	$ã°_£t_out_of_mem‹y
()

504 
Së
 *
£t
;

505 
vÆues
[66];

506 
i
;

508 
£t
 = 
	`£t_√w
(
öt_hash
, 
öt_equÆ
);

512 
	`Æloc_ã°_£t_limô
(0);

513 
vÆues
[0] = 0;

514 
	`as£π
(
	`£t_ö£π
(
£t
, &
vÆues
[0]) == 0);

515 
	`as£π
(
	`£t_num_íåõs
(
£t
) == 0);

517 
	`Æloc_ã°_£t_limô
(-1);

524 
i
=0; i<65; ++i) {

525 
vÆues
[
i
] = () i;

527 
	`as£π
(
	`£t_ö£π
(
£t
, &
vÆues
[
i
]) != 0);

528 
	`as£π
(
	`£t_num_íåõs
(
£t
Ë=
i
 + 1);

531 
	`as£π
(
	`£t_num_íåõs
(
£t
) == 65);

535 
	`Æloc_ã°_£t_limô
(0);

537 
vÆues
[65] = 65;

539 
	`as£π
(
	`£t_ö£π
(
£t
, &
vÆues
[65]) == 0);

540 
	`as£π
(
	`£t_num_íåõs
(
£t
) == 65);

542 
	`£t_‰ì
(
£t
);

543 
	}
}

546 
UnôTe°Fun˘i⁄
 
	gã°s
[] = {

547 
ã°_£t_√w_‰ì
,

548 
ã°_£t_ö£π
,

549 
ã°_£t_quîy
,

550 
ã°_£t_ªmove
,

551 
ã°_£t_öãr£˘i⁄
,

552 
ã°_£t_uni⁄
,

553 
ã°_£t_ôî©ög
,

554 
ã°_£t_ôî©ög_ªmove
,

555 
ã°_£t_to_¨øy
,

556 
ã°_£t_‰ì_fun˘i⁄
,

557 
ã°_£t_out_of_mem‹y
,

558 
NULL


561 
	$maö
(
¨gc
, *
¨gv
[])

563 
	`run_ã°s
(
ã°s
);

566 
	}
}

	@test/test-slist.c

21 
	~<°dio.h
>

22 
	~<°dlib.h
>

23 
	~<as£π.h
>

25 
	~"Æloc-ã°ög.h
"

26 
	~"‰amew‹k.h
"

28 
	~"¶i°.h
"

29 
	~"com∑ª-öt.h
"

31 
	gv¨übÀ1
 = 50, 
	gv¨übÀ2
, 
	gv¨übÀ3
, 
	gv¨übÀ4
;

35 
SLi°E¡ry
 *
	$gíî©e_li°
()

37 
SLi°E¡ry
 *
li°
 = 
NULL
;

39 
	`as£π
(
	`¶i°_≠≥nd
(&
li°
, &
v¨übÀ1
Ë!
NULL
);

40 
	`as£π
(
	`¶i°_≠≥nd
(&
li°
, &
v¨übÀ2
Ë!
NULL
);

41 
	`as£π
(
	`¶i°_≠≥nd
(&
li°
, &
v¨übÀ3
Ë!
NULL
);

42 
	`as£π
(
	`¶i°_≠≥nd
(&
li°
, &
v¨übÀ4
Ë!
NULL
);

44  
li°
;

45 
	}
}

47 
	$ã°_¶i°_≠≥nd
()

49 
SLi°E¡ry
 *
li°
 = 
NULL
;

51 
	`as£π
(
	`¶i°_≠≥nd
(&
li°
, &
v¨übÀ1
Ë!
NULL
);

52 
	`as£π
(
	`¶i°_≠≥nd
(&
li°
, &
v¨übÀ2
Ë!
NULL
);

53 
	`as£π
(
	`¶i°_≠≥nd
(&
li°
, &
v¨übÀ3
Ë!
NULL
);

54 
	`as£π
(
	`¶i°_≠≥nd
(&
li°
, &
v¨übÀ4
Ë!
NULL
);

55 
	`as£π
(
	`¶i°_Àngth
(
li°
) == 4);

57 
	`as£π
(
	`¶i°_¡h_d©a
(
li°
, 0Ë=&
v¨übÀ1
);

58 
	`as£π
(
	`¶i°_¡h_d©a
(
li°
, 1Ë=&
v¨übÀ2
);

59 
	`as£π
(
	`¶i°_¡h_d©a
(
li°
, 2Ë=&
v¨übÀ3
);

60 
	`as£π
(
	`¶i°_¡h_d©a
(
li°
, 3Ë=&
v¨übÀ4
);

64 
	`Æloc_ã°_£t_limô
(0);

65 
	`as£π
(
	`¶i°_Àngth
(
li°
) == 4);

66 
	`as£π
(
	`¶i°_≠≥nd
(&
li°
, &
v¨übÀ1
Ë=
NULL
);

67 
	`as£π
(
	`¶i°_Àngth
(
li°
) == 4);

69 
	`¶i°_‰ì
(
li°
);

70 
	}
}

72 
	$ã°_¶i°_¥ïíd
()

74 
SLi°E¡ry
 *
li°
 = 
NULL
;

76 
	`as£π
(
	`¶i°_¥ïíd
(&
li°
, &
v¨übÀ1
Ë!
NULL
);

77 
	`as£π
(
	`¶i°_¥ïíd
(&
li°
, &
v¨übÀ2
Ë!
NULL
);

78 
	`as£π
(
	`¶i°_¥ïíd
(&
li°
, &
v¨übÀ3
Ë!
NULL
);

79 
	`as£π
(
	`¶i°_¥ïíd
(&
li°
, &
v¨übÀ4
Ë!
NULL
);

81 
	`as£π
(
	`¶i°_¡h_d©a
(
li°
, 0Ë=&
v¨übÀ4
);

82 
	`as£π
(
	`¶i°_¡h_d©a
(
li°
, 1Ë=&
v¨übÀ3
);

83 
	`as£π
(
	`¶i°_¡h_d©a
(
li°
, 2Ë=&
v¨übÀ2
);

84 
	`as£π
(
	`¶i°_¡h_d©a
(
li°
, 3Ë=&
v¨übÀ1
);

88 
	`Æloc_ã°_£t_limô
(0);

89 
	`as£π
(
	`¶i°_Àngth
(
li°
) == 4);

90 
	`as£π
(
	`¶i°_¥ïíd
(&
li°
, &
v¨übÀ1
Ë=
NULL
);

91 
	`as£π
(
	`¶i°_Àngth
(
li°
) == 4);

93 
	`¶i°_‰ì
(
li°
);

94 
	}
}

96 
	$ã°_¶i°_‰ì
()

98 
SLi°E¡ry
 *
li°
;

102 
li°
 = 
	`gíî©e_li°
();

104 
	`¶i°_‰ì
(
li°
);

108 
	`¶i°_‰ì
(
NULL
);

109 
	}
}

111 
	$ã°_¶i°_√xt
()

113 
SLi°E¡ry
 *
li°
;

114 
SLi°E¡ry
 *
rovî
;

116 
li°
 = 
	`gíî©e_li°
();

118 
rovî
 = 
li°
;

119 
	`as£π
(
	`¶i°_d©a
(
rovî
Ë=&
v¨übÀ1
);

120 
rovî
 = 
	`¶i°_√xt
(rover);

121 
	`as£π
(
	`¶i°_d©a
(
rovî
Ë=&
v¨übÀ2
);

122 
rovî
 = 
	`¶i°_√xt
(rover);

123 
	`as£π
(
	`¶i°_d©a
(
rovî
Ë=&
v¨übÀ3
);

124 
rovî
 = 
	`¶i°_√xt
(rover);

125 
	`as£π
(
	`¶i°_d©a
(
rovî
Ë=&
v¨übÀ4
);

126 
rovî
 = 
	`¶i°_√xt
(rover);

127 
	`as£π
(
rovî
 =
NULL
);

129 
	`¶i°_‰ì
(
li°
);

130 
	}
}

132 
	$ã°_¶i°_¡h_íåy
()

134 
SLi°E¡ry
 *
li°
;

135 
SLi°E¡ry
 *
íåy
;

137 
li°
 = 
	`gíî©e_li°
();

141 
íåy
 = 
	`¶i°_¡h_íåy
(
li°
, 0);

142 
	`as£π
(
	`¶i°_d©a
(
íåy
Ë=&
v¨übÀ1
);

143 
íåy
 = 
	`¶i°_¡h_íåy
(
li°
, 1);

144 
	`as£π
(
	`¶i°_d©a
(
íåy
Ë=&
v¨übÀ2
);

145 
íåy
 = 
	`¶i°_¡h_íåy
(
li°
, 2);

146 
	`as£π
(
	`¶i°_d©a
(
íåy
Ë=&
v¨übÀ3
);

147 
íåy
 = 
	`¶i°_¡h_íåy
(
li°
, 3);

148 
	`as£π
(
	`¶i°_d©a
(
íåy
Ë=&
v¨übÀ4
);

152 
íåy
 = 
	`¶i°_¡h_íåy
(
li°
, 4);

153 
	`as£π
(
íåy
 =
NULL
);

154 
íåy
 = 
	`¶i°_¡h_íåy
(
li°
, 400);

155 
	`as£π
(
íåy
 =
NULL
);

157 
	`¶i°_‰ì
(
li°
);

158 
	}
}

160 
	$ã°_¶i°_¡h_d©a
()

162 
SLi°E¡ry
 *
li°
;

164 
li°
 = 
	`gíî©e_li°
();

168 
	`as£π
(
	`¶i°_¡h_d©a
(
li°
, 0Ë=&
v¨übÀ1
);

169 
	`as£π
(
	`¶i°_¡h_d©a
(
li°
, 1Ë=&
v¨übÀ2
);

170 
	`as£π
(
	`¶i°_¡h_d©a
(
li°
, 2Ë=&
v¨übÀ3
);

171 
	`as£π
(
	`¶i°_¡h_d©a
(
li°
, 3Ë=&
v¨übÀ4
);

175 
	`as£π
(
	`¶i°_¡h_d©a
(
li°
, 4Ë=
NULL
);

176 
	`as£π
(
	`¶i°_¡h_d©a
(
li°
, 400Ë=
NULL
);

178 
	`¶i°_‰ì
(
li°
);

179 
	}
}

181 
	$ã°_¶i°_Àngth
()

183 
SLi°E¡ry
 *
li°
;

187 
li°
 = 
	`gíî©e_li°
();

189 
	`as£π
(
	`¶i°_Àngth
(
li°
) == 4);

193 
	`¶i°_¥ïíd
(&
li°
, &
v¨übÀ1
);

195 
	`as£π
(
	`¶i°_Àngth
(
li°
) == 5);

199 
	`as£π
(
	`¶i°_Àngth
(
NULL
) == 0);

201 
	`¶i°_‰ì
(
li°
);

202 
	}
}

204 
	$ã°_¶i°_ªmove_íåy
()

206 
SLi°E¡ry
 *
em±y_li°
 = 
NULL
;

207 
SLi°E¡ry
 *
li°
;

208 
SLi°E¡ry
 *
íåy
;

210 
li°
 = 
	`gíî©e_li°
();

214 
íåy
 = 
	`¶i°_¡h_íåy
(
li°
, 2);

215 
	`as£π
(
	`¶i°_ªmove_íåy
(&
li°
, 
íåy
) != 0);

216 
	`as£π
(
	`¶i°_Àngth
(
li°
) == 3);

220 
íåy
 = 
	`¶i°_¡h_íåy
(
li°
, 0);

221 
	`as£π
(
	`¶i°_ªmove_íåy
(&
li°
, 
íåy
) != 0);

222 
	`as£π
(
	`¶i°_Àngth
(
li°
) == 2);

228 
	`as£π
(
	`¶i°_ªmove_íåy
(&
li°
, 
íåy
) == 0);

232 
	`as£π
(
	`¶i°_ªmove_íåy
(&
li°
, 
NULL
) == 0);

236 
	`as£π
(
	`¶i°_ªmove_íåy
(&
em±y_li°
, 
NULL
) == 0);

238 
	`¶i°_‰ì
(
li°
);

239 
	}
}

241 
	$ã°_¶i°_ªmove_d©a
()

243 
íåõs
[] = { 89, 4, 23, 42, 4, 16, 15, 4, 8, 99, 50, 30, 4 };

244 
num_íåõs
 = (
íåõs
) / ();

245 
vÆ
;

246 
SLi°E¡ry
 *
li°
;

247 
i
;

251 
li°
 = 
NULL
;

253 
i
=0; i<
num_íåõs
; ++i) {

254 
	`¶i°_¥ïíd
(&
li°
, &
íåõs
[
i
]);

259 
vÆ
 = 0;

260 
	`as£π
(
	`¶i°_ªmove_d©a
(&
li°
, 
öt_equÆ
, &
vÆ
) == 0);

261 
vÆ
 = 56;

262 
	`as£π
(
	`¶i°_ªmove_d©a
(&
li°
, 
öt_equÆ
, &
vÆ
) == 0);

266 
vÆ
 = 8;

267 
	`as£π
(
	`¶i°_ªmove_d©a
(&
li°
, 
öt_equÆ
, &
vÆ
) == 1);

268 
	`as£π
(
	`¶i°_Àngth
(
li°
Ë=
num_íåõs
 - 1);

272 
vÆ
 = 4;

273 
	`as£π
(
	`¶i°_ªmove_d©a
(&
li°
, 
öt_equÆ
, &
vÆ
) == 4);

274 
	`as£π
(
	`¶i°_Àngth
(
li°
Ë=
num_íåõs
 - 5);

278 
vÆ
 = 89;

279 
	`as£π
(
	`¶i°_ªmove_d©a
(&
li°
, 
öt_equÆ
, &
vÆ
) == 1);

280 
	`as£π
(
	`¶i°_Àngth
(
li°
Ë=
num_íåõs
 - 6);

282 
	`¶i°_‰ì
(
li°
);

283 
	}
}

285 
	$ã°_¶i°_s‹t
()

287 
SLi°E¡ry
 *
li°
;

288 
íåõs
[] = { 89, 4, 23, 42, 4, 16, 15, 4, 8, 99, 50, 30, 4 };

289 
s‹ãd
[] = { 4, 4, 4, 4, 8, 15, 16, 23, 30, 42, 50, 89, 99 };

290 
num_íåõs
 = (
íåõs
) / ();

291 
i
;

293 
li°
 = 
NULL
;

295 
i
=0; i<
num_íåõs
; ++i) {

296 
	`¶i°_¥ïíd
(&
li°
, &
íåõs
[
i
]);

299 
	`¶i°_s‹t
(&
li°
, 
öt_com∑ª
);

303 
	`as£π
(
	`¶i°_Àngth
(
li°
Ë=
num_íåõs
);

307 
i
=0; i<
num_íåõs
; ++i) {

308 *
vÆue
;

310 
vÆue
 = (*Ë
	`¶i°_¡h_d©a
(
li°
, 
i
);

311 
	`as£π
(*
vÆue
 =
s‹ãd
[
i
]);

314 
	`¶i°_‰ì
(
li°
);

318 
li°
 = 
NULL
;

320 
	`¶i°_s‹t
(&
li°
, 
öt_com∑ª
);

322 
	`as£π
(
li°
 =
NULL
);

323 
	}
}

325 
	$ã°_¶i°_föd_d©a
()

327 
íåõs
[] = { 89, 23, 42, 16, 15, 4, 8, 99, 50, 30 };

328 
num_íåõs
 = (
íåõs
) / ();

329 
SLi°E¡ry
 *
li°
;

330 
SLi°E¡ry
 *
ªsu…
;

331 
i
;

332 
vÆ
;

333 *
d©a
;

337 
li°
 = 
NULL
;

338 
i
=0; i<
num_íåõs
; ++i) {

339 
	`¶i°_≠≥nd
(&
li°
, &
íåõs
[
i
]);

344 
i
=0; i<
num_íåõs
; ++i) {

346 
vÆ
 = 
íåõs
[
i
];

348 
ªsu…
 = 
	`¶i°_föd_d©a
(
li°
, 
öt_equÆ
, &
vÆ
);

350 
	`as£π
(
ªsu…
 !
NULL
);

352 
d©a
 = (*Ë
	`¶i°_d©a
(
ªsu…
);

353 
	`as£π
(*
d©a
 =
vÆ
);

358 
vÆ
 = 0;

359 
	`as£π
(
	`¶i°_föd_d©a
(
li°
, 
öt_equÆ
, &
vÆ
Ë=
NULL
);

360 
vÆ
 = 56;

361 
	`as£π
(
	`¶i°_föd_d©a
(
li°
, 
öt_equÆ
, &
vÆ
Ë=
NULL
);

363 
	`¶i°_‰ì
(
li°
);

364 
	}
}

366 
	$ã°_¶i°_to_¨øy
()

368 
SLi°E¡ry
 *
li°
;

369 **
¨øy
;

371 
li°
 = 
	`gíî©e_li°
();

373 
¨øy
 = 
	`¶i°_to_¨øy
(
li°
);

375 
	`as£π
(
¨øy
[0] =&
v¨übÀ1
);

376 
	`as£π
(
¨øy
[1] =&
v¨übÀ2
);

377 
	`as£π
(
¨øy
[2] =&
v¨übÀ3
);

378 
	`as£π
(
¨øy
[3] =&
v¨übÀ4
);

380 
	`‰ì
(
¨øy
);

384 
	`Æloc_ã°_£t_limô
(0);

386 
¨øy
 = 
	`¶i°_to_¨øy
(
li°
);

387 
	`as£π
(
¨øy
 =
NULL
);

389 
	`¶i°_‰ì
(
li°
);

390 
	}
}

392 
	$ã°_¶i°_ôî©e
()

394 
SLi°E¡ry
 *
li°
;

395 
SLi°Iãøt‹
 
ôî
;

396 *
d©a
;

397 
a
;

398 
i
;

399 
cou¡î
;

403 
li°
 = 
NULL
;

405 
i
=0; i<50; ++i) {

406 
	`¶i°_¥ïíd
(&
li°
, &
a
);

411 
cou¡î
 = 0;

413 
	`¶i°_ôî©e
(&
li°
, &
ôî
);

417 
	`¶i°_ôî_ªmove
(&
ôî
);

421 
	`¶i°_ôî_has_m‹e
(&
ôî
)) {

423 
d©a
 = (*Ë
	`¶i°_ôî_√xt
(&
ôî
);

425 ++
cou¡î
;

429 i‡((
cou¡î
 % 2) == 0) {

430 
	`¶i°_ôî_ªmove
(&
ôî
);

434 
	`¶i°_ôî_ªmove
(&
ôî
);

440 
	`as£π
(
	`¶i°_ôî_√xt
(&
ôî
Ë=
SLIST_NULL
);

444 
	`¶i°_ôî_ªmove
(&
ôî
);

446 
	`as£π
(
cou¡î
 == 50);

447 
	`as£π
(
	`¶i°_Àngth
(
li°
) == 25);

449 
	`¶i°_‰ì
(
li°
);

453 
li°
 = 
NULL
;

454 
cou¡î
 = 0;

456 
	`¶i°_ôî©e
(&
li°
, &
ôî
);

458 
	`¶i°_ôî_has_m‹e
(&
ôî
)) {

460 
d©a
 = (*Ë
	`¶i°_ôî_√xt
(&
ôî
);

462 ++
cou¡î
;

466 i‡((
cou¡î
 % 2) == 0) {

467 
	`¶i°_ôî_ªmove
(&
ôî
);

471 
	`as£π
(
cou¡î
 == 0);

472 
	}
}

477 
	$ã°_¶i°_ôî©e_bad_ªmove
()

479 
SLi°E¡ry
 *
li°
;

480 
SLi°Iãøt‹
 
ôî
;

481 
vÆues
[49];

482 
i
;

483 *
vÆ
;

487 
li°
 = 
NULL
;

489 
i
=0; i<49; ++i) {

490 
vÆues
[
i
] = i;

491 
	`¶i°_¥ïíd
(&
li°
, &
vÆues
[
i
]);

498 
	`¶i°_ôî©e
(&
li°
, &
ôî
);

500 
	`¶i°_ôî_has_m‹e
(&
ôî
)) {

501 
vÆ
 = 
	`¶i°_ôî_√xt
(&
ôî
);

507 i‡((*
vÆ
 % 2) == 0) {

508 
	`as£π
(
	`¶i°_ªmove_d©a
(&
li°
, 
öt_equÆ
, 
vÆ
) != 0);

509 
	`¶i°_ôî_ªmove
(&
ôî
);

513 
	`¶i°_‰ì
(
li°
);

514 
	}
}

516 
UnôTe°Fun˘i⁄
 
	gã°s
[] = {

517 
ã°_¶i°_≠≥nd
,

518 
ã°_¶i°_¥ïíd
,

519 
ã°_¶i°_‰ì
,

520 
ã°_¶i°_√xt
,

521 
ã°_¶i°_¡h_íåy
,

522 
ã°_¶i°_¡h_d©a
,

523 
ã°_¶i°_Àngth
,

524 
ã°_¶i°_ªmove_íåy
,

525 
ã°_¶i°_ªmove_d©a
,

526 
ã°_¶i°_s‹t
,

527 
ã°_¶i°_föd_d©a
,

528 
ã°_¶i°_to_¨øy
,

529 
ã°_¶i°_ôî©e
,

530 
ã°_¶i°_ôî©e_bad_ªmove
,

531 
NULL


534 
	$maö
(
¨gc
, *
¨gv
[])

536 
	`run_ã°s
(
ã°s
);

539 
	}
}

	@test/test-trie.c

21 
	~<°dio.h
>

22 
	~<°dlib.h
>

23 
	~<°rög.h
>

24 
	~<as£π.h
>

26 
	~"Æloc-ã°ög.h
"

27 
	~"‰amew‹k.h
"

29 
	~"åõ.h
"

31 
	#NUM_TEST_VALUES
 10000

	)

33 
	gã°_¨øy
[
NUM_TEST_VALUES
];

34 
	gã°_°rögs
[
NUM_TEST_VALUES
][10];

35 
	gbö_key
[] = { 'a', 'b', 'c', 0, 1, 2, 0xff };

36 
	gbö_key2
[] = { 'a', 'b', 'c', 0, 1, 2, 0xff, 0 };

37 
	gbö_key3
[] = { 'a', 'b', 'c' };

38 
	gbö_key4
[] = { 'z', 0, 'z', 'z' };

40 
Trõ
 *
	$gíî©e_åõ
()

42 
Trõ
 *
åõ
;

43 
i
;

44 
íåõs
;

48 
åõ
 = 
	`åõ_√w
();

49 
íåõs
 = 0;

51 
i
=0; i<
NUM_TEST_VALUES
; ++i) {

56 
ã°_¨øy
[
i
] = i;

57 
	`•rötf
(
ã°_°rögs
[
i
], "%i", i);

59 
	`as£π
(
	`åõ_ö£π
(
åõ
, 
ã°_°rögs
[
i
], &
ã°_¨øy
[i]) != 0);

61 ++
íåõs
;

63 
	`as£π
(
	`åõ_num_íåõs
(
åõ
Ë=
íåõs
);

66  
åõ
;

67 
	}
}

69 
	$ã°_åõ_√w_‰ì
()

71 
Trõ
 *
åõ
;

75 
åõ
 = 
	`åõ_√w
();

77 
	`as£π
(
åõ
 !
NULL
);

79 
	`åõ_‰ì
(
åõ
);

83 
åõ
 = 
	`åõ_√w
();

85 
	`as£π
(
	`åõ_ö£π
(
åõ
, "hello", "there") != 0);

86 
	`as£π
(
	`åõ_ö£π
(
åõ
, "hell", "testing") != 0);

87 
	`as£π
(
	`åõ_ö£π
(
åõ
, "testing", "testing") != 0);

88 
	`as£π
(
	`åõ_ö£π
(
åõ
, "", "asfasf") != 0);

90 
	`åõ_‰ì
(
åõ
);

94 
åõ
 = 
	`åõ_√w
();

96 
	`as£π
(
	`åõ_ö£π
(
åõ
, "hello", "there") != 0);

97 
	`as£π
(
	`åõ_ªmove
(
åõ
, "hello") != 0);

99 
	`åõ_‰ì
(
åõ
);

103 
	`Æloc_ã°_£t_limô
(0);

104 
åõ
 = 
	`åõ_√w
();

105 
	`as£π
(
åõ
 =
NULL
);

106 
	}
}

108 
	$ã°_åõ_ö£π
()

110 
Trõ
 *
åõ
;

111 
íåõs
;

112 
size_t
 
Æloˇãd
;

114 
åõ
 = 
	`gíî©e_åõ
();

118 
íåõs
 = 
	`åõ_num_íåõs
(
åõ
);

119 
	`as£π
(
	`åõ_ö£π
(
åõ
, "hñlÿw‹ld", 
NULL
) == 0);

120 
	`as£π
(
	`åõ_num_íåõs
(
åõ
Ë=
íåõs
);

124 
Æloˇãd
 = 
	`Æloc_ã°_gë_Æloˇãd
();

125 
	`Æloc_ã°_£t_limô
(0);

126 
	`as£π
(
	`åõ_ö£π
(
åõ
, "a", "test value") == 0);

127 
	`as£π
(
	`åõ_num_íåõs
(
åõ
Ë=
íåõs
);

131 
	`Æloc_ã°_£t_limô
(5);

132 
	`as£π
(
	`åõ_ö£π
(
åõ
, "hello world", "test value") == 0);

133 
	`as£π
(
	`Æloc_ã°_gë_Æloˇãd
(Ë=
Æloˇãd
);

134 
	`as£π
(
	`åõ_num_íåõs
(
åõ
Ë=
íåõs
);

136 
	`åõ_‰ì
(
åõ
);

137 
	}
}

139 
	$ã°_åõ_lookup
()

141 
Trõ
 *
åõ
;

142 
buf
[10];

143 *
vÆ
;

144 
i
;

146 
åõ
 = 
	`gíî©e_åõ
();

150 
	`as£π
(
	`åõ_lookup
(
åõ
, "000000000000000"Ë=
TRIE_NULL
);

151 
	`as£π
(
	`åõ_lookup
(
åõ
, ""Ë=
TRIE_NULL
);

155 
i
=0; i<
NUM_TEST_VALUES
; ++i) {

157 
	`•rötf
(
buf
, "%i", 
i
);

159 
vÆ
 = (*Ë
	`åõ_lookup
(
åõ
, 
buf
);

161 
	`as£π
(*
vÆ
 =
i
);

164 
	`åõ_‰ì
(
åõ
);

165 
	}
}

167 
	$ã°_åõ_ªmove
()

169 
Trõ
 *
åõ
;

170 
buf
[10];

171 
i
;

172 
íåõs
;

174 
åõ
 = 
	`gíî©e_åõ
();

178 
	`as£π
(
	`åõ_ªmove
(
åõ
, "000000000000000") == 0);

179 
	`as£π
(
	`åõ_ªmove
(
åõ
, "") == 0);

181 
íåõs
 = 
	`åõ_num_íåõs
(
åõ
);

183 
	`as£π
(
íåõs
 =
NUM_TEST_VALUES
);

187 
i
=0; i<
NUM_TEST_VALUES
; ++i) {

189 
	`•rötf
(
buf
, "%i", 
i
);

193 
	`as£π
(
	`åõ_ªmove
(
åõ
, 
buf
) != 0);

194 --
íåõs
;

195 
	`as£π
(
	`åõ_num_íåõs
(
åõ
Ë=
íåõs
);

198 
	`åõ_‰ì
(
åõ
);

199 
	}
}

201 
	$ã°_åõ_ª∂a˚
()

203 
Trõ
 *
åõ
;

204 *
vÆ
;

206 
åõ
 = 
	`gíî©e_åõ
();

210 
vÆ
 = 
	`mÆloc
(());

211 *
vÆ
 = 999;

212 
	`as£π
(
	`åõ_ö£π
(
åõ
, "999", 
vÆ
) != 0);

213 
	`as£π
(
	`åõ_num_íåõs
(
åõ
Ë=
NUM_TEST_VALUES
);

215 
	`as£π
(
	`åõ_lookup
(
åõ
, "999"Ë=
vÆ
);

216 
	`‰ì
(
vÆ
);

217 
	`åõ_‰ì
(
åõ
);

218 
	}
}

220 
	$ã°_åõ_ö£π_em±y
()

222 
Trõ
 *
åõ
;

223 
buf
[10];

225 
åõ
 = 
	`åõ_√w
();

229 
	`as£π
(
	`åõ_ö£π
(
åõ
, "", 
buf
) != 0);

230 
	`as£π
(
	`åõ_num_íåõs
(
åõ
) != 0);

231 
	`as£π
(
	`åõ_lookup
(
åõ
, ""Ë=
buf
);

232 
	`as£π
(
	`åõ_ªmove
(
åõ
, "") != 0);

234 
	`as£π
(
	`åõ_num_íåõs
(
åõ
) == 0);

236 
	`åõ_‰ì
(
åõ
);

237 
	}
}

239 
	#LONG_STRING_LEN
 4096

	)

240 
	$ã°_åõ_‰ì_l⁄g
()

242 *
l⁄g_°rög
;

243 
Trõ
 *
åõ
;

247 
l⁄g_°rög
 = 
	`mÆloc
(
LONG_STRING_LEN
);

248 
	`mem£t
(
l⁄g_°rög
, 'A', 
LONG_STRING_LEN
);

249 
l⁄g_°rög
[
LONG_STRING_LEN
 - 1] = '\0';

253 
åõ
 = 
	`åõ_√w
();

254 
	`åõ_ö£π
(
åõ
, 
l⁄g_°rög
,Üong_string);

256 
	`åõ_‰ì
(
åõ
);

258 
	`‰ì
(
l⁄g_°rög
);

259 
	}
}

264 
	$ã°_åõ_√g©ive_keys
()

266 
my_key
[] = { 'a', 'b', 'c', -50, -20, '\0' };

267 
Trõ
 *
åõ
;

268 *
vÆue
;

270 
åõ
 = 
	`åõ_√w
();

272 
	`as£π
(
	`åõ_ö£π
(
åõ
, 
my_key
, "hello world") != 0);

274 
vÆue
 = 
	`åõ_lookup
(
åõ
, 
my_key
);

276 
	`as£π
(!
	`°rcmp
(
vÆue
, "hello world"));

278 
	`as£π
(
	`åõ_ªmove
(
åõ
, 
my_key
) != 0);

279 
	`as£π
(
	`åõ_ªmove
(
åõ
, 
my_key
) == 0);

280 
	`as£π
(
	`åõ_lookup
(
åõ
, 
my_key
Ë=
NULL
);

282 
	`åõ_‰ì
(
åõ
);

283 
	}
}

285 
Trõ
 *
	$gíî©e_bö¨y_åõ
()

287 
Trõ
 *
åõ
;

289 
åõ
 = 
	`åõ_√w
();

293 
	`as£π
(
	`åõ_ö£π_bö¨y
(
åõ
,

294 
bö_key2
, (bin_key2),

296 
	`as£π
(
	`åõ_ö£π_bö¨y
(
åõ
,

297 
bö_key
, (bin_key),

300  
åõ
;

301 
	}
}

303 
	$ã°_åõ_ö£π_bö¨y
()

305 
Trõ
 *
åõ
;

306 *
vÆue
;

308 
åõ
 = 
	`gíî©e_bö¨y_åõ
();

312 
	`as£π
(
	`åõ_ö£π_bö¨y
(
åõ
,

313 
bö_key
, (bin_key),

318 
	`as£π
(
	`åõ_ö£π_bö¨y
(
åõ
, 
bö_key3
, (bö_key3), 
NULL
) == 0);

322 
vÆue
 = 
	`åõ_lookup_bö¨y
(
åõ
, 
bö_key
, (bin_key));

323 
	`as£π
(!
	`°rcmp
(
vÆue
, "hi world"));

325 
vÆue
 = 
	`åõ_lookup_bö¨y
(
åõ
, 
bö_key2
, (bin_key2));

326 
	`as£π
(!
	`°rcmp
(
vÆue
, "goodbye world"));

328 
	`åõ_‰ì
(
åõ
);

329 
	}
}

331 
	$ã°_åõ_ö£π_out_of_mem‹y
()

333 
Trõ
 *
åõ
;

335 
åõ
 = 
	`gíî©e_bö¨y_åõ
();

337 
	`Æloc_ã°_£t_limô
(3);

339 
	`as£π
(
	`åõ_ö£π_bö¨y
(
åõ
,

340 
bö_key4
, (bin_key4),

343 
	`as£π
(
	`åõ_lookup_bö¨y
(
åõ
, 
bö_key4
, (bö_key4)Ë=
NULL
);

344 
	`as£π
(
	`åõ_num_íåõs
(
åõ
) == 2);

346 
	`åõ_‰ì
(
åõ
);

347 
	}
}

349 
	$ã°_åõ_ªmove_bö¨y
()

351 
Trõ
 *
åõ
;

352 *
vÆue
;

354 
åõ
 = 
	`gíî©e_bö¨y_åõ
();

358 
vÆue
 = 
	`åõ_lookup_bö¨y
(
åõ
, 
bö_key3
, (bin_key3));

359 
	`as£π
(
vÆue
 =
NULL
);

361 
	`as£π
(
	`åõ_ªmove_bö¨y
(
åõ
, 
bö_key3
, (bin_key3)) == 0);

363 
	`as£π
(
	`åõ_lookup_bö¨y
(
åõ
, 
bö_key4
, (bin_key4)) == 0);

364 
	`as£π
(
	`åõ_ªmove_bö¨y
(
åõ
, 
bö_key4
, (bin_key4)) == 0);

368 
	`as£π
(
	`åõ_ªmove_bö¨y
(
åõ
, 
bö_key2
, (bin_key2)) != 0);

369 
	`as£π
(
	`åõ_lookup_bö¨y
(
åõ
, 
bö_key2
, (bö_key2)Ë=
NULL
);

370 
	`as£π
(
	`åõ_lookup_bö¨y
(
åõ
, 
bö_key
, (bö_key)Ë!
NULL
);

372 
	`as£π
(
	`åõ_ªmove_bö¨y
(
åõ
, 
bö_key
, (bin_key)) != 0);

373 
	`as£π
(
	`åõ_lookup_bö¨y
(
åõ
, 
bö_key
, (bö_key)Ë=
NULL
);

375 
	`åõ_‰ì
(
åõ
);

376 
	}
}

378 
UnôTe°Fun˘i⁄
 
	gã°s
[] = {

379 
ã°_åõ_√w_‰ì
,

380 
ã°_åõ_ö£π
,

381 
ã°_åõ_lookup
,

382 
ã°_åõ_ªmove
,

383 
ã°_åõ_ª∂a˚
,

384 
ã°_åõ_ö£π_em±y
,

385 
ã°_åõ_‰ì_l⁄g
,

386 
ã°_åõ_√g©ive_keys
,

387 
ã°_åõ_ö£π_bö¨y
,

388 
ã°_åõ_ö£π_out_of_mem‹y
,

389 
ã°_åõ_ªmove_bö¨y
,

390 
NULL


393 
	$maö
(
¨gc
, *
¨gv
[])

395 
	`run_ã°s
(
ã°s
);

398 
	}
}

	@
1
.
0
58
1017
config.h
doc/intro.h
src/arraylist.c
src/arraylist.h
src/avl-tree.c
src/avl-tree.h
src/binary-heap.c
src/binary-heap.h
src/binomial-heap.c
src/binomial-heap.h
src/bloom-filter.c
src/bloom-filter.h
src/compare-int.c
src/compare-int.h
src/compare-pointer.c
src/compare-pointer.h
src/compare-string.c
src/compare-string.h
src/hash-int.c
src/hash-int.h
src/hash-pointer.c
src/hash-pointer.h
src/hash-string.c
src/hash-string.h
src/hash-table.c
src/hash-table.h
src/libcalg.h
src/list.c
src/list.h
src/queue.c
src/queue.h
src/rb-tree.c
src/rb-tree.h
src/set.c
src/set.h
src/slist.c
src/slist.h
src/trie.c
src/trie.h
test/alloc-testing.c
test/alloc-testing.h
test/framework.c
test/framework.h
test/test-alloc-testing.c
test/test-arraylist.c
test/test-avl-tree.c
test/test-binary-heap.c
test/test-binomial-heap.c
test/test-bloom-filter.c
test/test-compare-functions.c
test/test-hash-functions.c
test/test-hash-table.c
test/test-list.c
test/test-queue.c
test/test-rb-tree.c
test/test-set.c
test/test-slist.c
test/test-trie.c
